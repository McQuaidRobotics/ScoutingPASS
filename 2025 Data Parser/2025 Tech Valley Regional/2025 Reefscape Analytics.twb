<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Defensive Specialist Game Piece Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='Defensive Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Coral Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.9'>
        <calculation class='tableau' formula='0.9' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Algae Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
        <calculation class='tableau' formula='0.5' />
        <range max='1.0' min='0.0' />
      </column>
      <column caption='Non-Potato Scoring Element Threshold' datatype='integer' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
      </column>
      <column caption='Algae Specialist Game Piece Threshold' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
    </datasource>
    <datasource caption='pitScouting' inline='true' name='federated.1odcsxe1u2kpbn18a8c0j1kixrof' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='pitScouting' name='textscan.1jy7k2x1mgz63t19hjxgy0xynxv4'>
            <connection class='textscan' directory='C:/Users/satoshi/Documents/ScoutingPASS/2025 Data Parser' filename='pitScouting.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1jy7k2x1mgz63t19hjxgy0xynxv4' name='pitScouting.csv' table='[pitScouting#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Event' ordinal='0' />
            <column datatype='string' name='Team number' ordinal='1' />
            <column datatype='string' name='Width' ordinal='2' />
            <column datatype='string' name='Length' ordinal='3' />
            <column datatype='string' name='Weight' ordinal='4' />
            <column datatype='string' name='Drivetrain' ordinal='5' />
            <column datatype='string' name='Other Drivetrain' ordinal='6' />
            <column datatype='string' name='Swerve Ratio' ordinal='7' />
            <column datatype='string' name='Drivetrain Motor' ordinal='8' />
            <column datatype='string' name='Batteries' ordinal='9' />
            <column datatype='string' name='Pickup Floor Coral' ordinal='10' />
            <column datatype='string' name='Pickup Floor Algae' ordinal='11' />
            <column datatype='string' name='How To Feed Robot' ordinal='12' />
            <column datatype='string' name='Autos' ordinal='13' />
            <column datatype='string' name='Scouting Method' ordinal='14' />
            <column datatype='string' name='comment' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team number]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Team number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Width</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Width]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Width</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Length</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Length]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Length</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drivetrain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drivetrain]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Drivetrain</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Drivetrain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Other Drivetrain]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Other Drivetrain</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swerve Ratio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Swerve Ratio]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Swerve Ratio</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drivetrain Motor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drivetrain Motor]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Drivetrain Motor</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Batteries</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Batteries]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Batteries</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup Floor Coral</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pickup Floor Coral]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Pickup Floor Coral</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup Floor Algae</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pickup Floor Algae]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Pickup Floor Algae</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How To Feed Robot</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How To Feed Robot]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>How To Feed Robot</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Autos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Autos]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Autos</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scouting Method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scouting Method]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Scouting Method</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[comment]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>comment</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='pitScouting.csv' datatype='table' name='[__tableau_internal_object_id__].[pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C]' role='measure' type='quantitative' />
      <column caption='Comment' datatype='string' name='[comment]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='pitScouting.csv' id='pitScouting.csv_35A38C4BA430448F9817ECFA7F77B27C'>
            <properties context=''>
              <relation connection='textscan.1jy7k2x1mgz63t19hjxgy0xynxv4' name='pitScouting.csv' table='[pitScouting#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Event' ordinal='0' />
                  <column datatype='string' name='Team number' ordinal='1' />
                  <column datatype='string' name='Width' ordinal='2' />
                  <column datatype='string' name='Length' ordinal='3' />
                  <column datatype='string' name='Weight' ordinal='4' />
                  <column datatype='string' name='Drivetrain' ordinal='5' />
                  <column datatype='string' name='Other Drivetrain' ordinal='6' />
                  <column datatype='string' name='Swerve Ratio' ordinal='7' />
                  <column datatype='string' name='Drivetrain Motor' ordinal='8' />
                  <column datatype='string' name='Batteries' ordinal='9' />
                  <column datatype='string' name='Pickup Floor Coral' ordinal='10' />
                  <column datatype='string' name='Pickup Floor Algae' ordinal='11' />
                  <column datatype='string' name='How To Feed Robot' ordinal='12' />
                  <column datatype='string' name='Autos' ordinal='13' />
                  <column datatype='string' name='Scouting Method' ordinal='14' />
                  <column datatype='string' name='comment' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='full+' inline='true' name='federated.1oijtqs0y37ubd17adrdr06iia96' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2025 Reefscape Data' name='textscan.1pt1j34106g2yn1bv03hb1ed3476'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/satoshi/Documents/ScoutingPASS/2025 Data Parser/full.csv' dataRefreshTime='' directory='C:/Users/satoshi/Documents/2025 Tech Valley Regional' filename='full.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.1pt1j34106g2yn1bv03hb1ed3476' name='full.csv' table='[C:\Users\satoshi\Documents\ScoutingPASS\2025 Data Parser\full#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:AF601:no:A1:AF601:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Scouter Name' ordinal='0' />
              <column datatype='string' name='Event' ordinal='1' />
              <column datatype='string' name='Match Level' ordinal='2' />
              <column datatype='integer' name='Match #' ordinal='3' />
              <column datatype='string' name='Robot' ordinal='4' />
              <column datatype='integer' name='Team #' ordinal='5' />
              <column datatype='integer' name='Auto Coral Level 4' ordinal='6' />
              <column datatype='integer' name='Auto Coral Level 3' ordinal='7' />
              <column datatype='integer' name='Auto Coral Level 2' ordinal='8' />
              <column datatype='integer' name='Auto Coral Level 1' ordinal='9' />
              <column datatype='integer' name='Auto Coral Miss' ordinal='10' />
              <column datatype='integer' name='Auto Algae Processor' ordinal='11' />
              <column datatype='integer' name='Auto Algae Net' ordinal='12' />
              <column datatype='integer' name='Auto Algae Remove From Reef' ordinal='13' />
              <column datatype='string' name='Leave' ordinal='14' />
              <column datatype='string' name='Cycle Timer' ordinal='15' />
              <column datatype='string' name='Cycle Type' ordinal='16' />
              <column datatype='integer' name='Teleop Coral Level 4' ordinal='17' />
              <column datatype='integer' name='Teleop Coral Level 3' ordinal='18' />
              <column datatype='integer' name='Teleop Coral Level 2' ordinal='19' />
              <column datatype='integer' name='Teleop Coral Level 1' ordinal='20' />
              <column datatype='integer' name='Teleop Coral Miss' ordinal='21' />
              <column datatype='integer' name='Teleop Algae Processor' ordinal='22' />
              <column datatype='integer' name='Teleop Algae Net' ordinal='23' />
              <column datatype='integer' name='Teleop Algae Miss' ordinal='24' />
              <column datatype='integer' name='Teleop Algae Removed From Reef' ordinal='25' />
              <column datatype='integer' name='Pickup From Floor' ordinal='26' />
              <column datatype='integer' name='Pickup From Coral Station' ordinal='27' />
              <column datatype='integer' name='Endgame State' ordinal='28' />
              <column datatype='real' name='Played Defense' ordinal='29' />
              <column datatype='string' name='Was Defended' ordinal='30' />
              <column datatype='integer' name='Died' ordinal='31' />
              <column datatype='integer' name='Tippy' ordinal='32' />
              <column datatype='integer' name='Yellow Card' ordinal='33' />
              <column datatype='integer' name='Red Card' ordinal='34' />
              <column datatype='integer' name='Egregiously Bad Event' ordinal='35' />
              <column datatype='string' name='Comment' ordinal='36' />
            </columns>
          </relation>
          <relation connection='textscan.1pt1j34106g2yn1bv03hb1ed3476' name='pitScouting.csv' table='[pitScouting#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Event' ordinal='0' />
              <column datatype='integer' name='Team number' ordinal='1' />
              <column datatype='real' name='Width' ordinal='2' />
              <column datatype='real' name='Length' ordinal='3' />
              <column datatype='real' name='Weight' ordinal='4' />
              <column datatype='string' name='Drivetrain' ordinal='5' />
              <column datatype='string' name='Other Drivetrain' ordinal='6' />
              <column datatype='string' name='Swerve Ratio' ordinal='7' />
              <column datatype='string' name='Drivetrain Motor' ordinal='8' />
              <column datatype='integer' name='Batteries' ordinal='9' />
              <column datatype='string' name='Pickup Floor Coral' ordinal='10' />
              <column datatype='string' name='Pickup Floor Algae' ordinal='11' />
              <column datatype='string' name='How To Feed Robot' ordinal='12' />
              <column datatype='string' name='Autos' ordinal='13' />
              <column datatype='string' name='Scouting Method' ordinal='14' />
              <column datatype='string' name='comment' ordinal='15' />
            </columns>
          </relation>
          <relation connection='textscan.1pt1j34106g2yn1bv03hb1ed3476' name='teleop.csv' table='[C:\Users\satoshi\Documents\ScoutingPASS\2025 Data Parser\teleop#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:H5417:no:A1:H5417:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Scouter Name' ordinal='0' />
              <column datatype='string' name='Event' ordinal='1' />
              <column datatype='string' name='Match Level' ordinal='2' />
              <column datatype='integer' name='Match #' ordinal='3' />
              <column datatype='string' name='Robot' ordinal='4' />
              <column datatype='integer' name='Team #' ordinal='5' />
              <column datatype='string' name='Cycle Number' ordinal='6' />
              <column datatype='real' name='Cycle Time' ordinal='7' />
              <column datatype='string' name='Cycle Type' ordinal='8' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Auto Algae Net]' value='[full.csv].[Auto Algae Net]' />
          <map key='[Auto Algae Processor]' value='[full.csv].[Auto Algae Processor]' />
          <map key='[Auto Algae Remove From Reef]' value='[full.csv].[Auto Algae Remove From Reef]' />
          <map key='[Auto Coral Level 1]' value='[full.csv].[Auto Coral Level 1]' />
          <map key='[Auto Coral Level 2]' value='[full.csv].[Auto Coral Level 2]' />
          <map key='[Auto Coral Level 3]' value='[full.csv].[Auto Coral Level 3]' />
          <map key='[Auto Coral Level 4]' value='[full.csv].[Auto Coral Level 4]' />
          <map key='[Auto Coral Miss]' value='[full.csv].[Auto Coral Miss]' />
          <map key='[Autos]' value='[pitScouting.csv].[Autos]' />
          <map key='[Batteries]' value='[pitScouting.csv].[Batteries]' />
          <map key='[Comment]' value='[full.csv].[Comment]' />
          <map key='[Cycle Number]' value='[teleop.csv].[Cycle Number]' />
          <map key='[Cycle Time]' value='[teleop.csv].[Cycle Time]' />
          <map key='[Cycle Timer]' value='[full.csv].[Cycle Timer]' />
          <map key='[Cycle Type (teleop.csv)]' value='[teleop.csv].[Cycle Type]' />
          <map key='[Cycle Type]' value='[full.csv].[Cycle Type]' />
          <map key='[Died]' value='[full.csv].[Died]' />
          <map key='[Drivetrain Motor]' value='[pitScouting.csv].[Drivetrain Motor]' />
          <map key='[Drivetrain]' value='[pitScouting.csv].[Drivetrain]' />
          <map key='[Egregiously Bad Event]' value='[full.csv].[Egregiously Bad Event]' />
          <map key='[Endgame State]' value='[full.csv].[Endgame State]' />
          <map key='[Event (pitScouting.csv)]' value='[pitScouting.csv].[Event]' />
          <map key='[Event (teleop.csv)]' value='[teleop.csv].[Event]' />
          <map key='[Event]' value='[full.csv].[Event]' />
          <map key='[How To Feed Robot]' value='[pitScouting.csv].[How To Feed Robot]' />
          <map key='[Leave]' value='[full.csv].[Leave]' />
          <map key='[Length]' value='[pitScouting.csv].[Length]' />
          <map key='[Match # (teleop.csv)]' value='[teleop.csv].[Match #]' />
          <map key='[Match #]' value='[full.csv].[Match #]' />
          <map key='[Match Level (teleop.csv)]' value='[teleop.csv].[Match Level]' />
          <map key='[Match Level]' value='[full.csv].[Match Level]' />
          <map key='[Other Drivetrain]' value='[pitScouting.csv].[Other Drivetrain]' />
          <map key='[Pickup Floor Algae]' value='[pitScouting.csv].[Pickup Floor Algae]' />
          <map key='[Pickup Floor Coral]' value='[pitScouting.csv].[Pickup Floor Coral]' />
          <map key='[Pickup From Coral Station]' value='[full.csv].[Pickup From Coral Station]' />
          <map key='[Pickup From Floor]' value='[full.csv].[Pickup From Floor]' />
          <map key='[Played Defense]' value='[full.csv].[Played Defense]' />
          <map key='[Red Card]' value='[full.csv].[Red Card]' />
          <map key='[Robot (teleop.csv)]' value='[teleop.csv].[Robot]' />
          <map key='[Robot]' value='[full.csv].[Robot]' />
          <map key='[Scouter Name (teleop.csv)]' value='[teleop.csv].[Scouter Name]' />
          <map key='[Scouter Name]' value='[full.csv].[Scouter Name]' />
          <map key='[Scouting Method]' value='[pitScouting.csv].[Scouting Method]' />
          <map key='[Swerve Ratio]' value='[pitScouting.csv].[Swerve Ratio]' />
          <map key='[Team # (teleop.csv)]' value='[teleop.csv].[Team #]' />
          <map key='[Team #]' value='[full.csv].[Team #]' />
          <map key='[Team number]' value='[pitScouting.csv].[Team number]' />
          <map key='[Teleop Algae Miss]' value='[full.csv].[Teleop Algae Miss]' />
          <map key='[Teleop Algae Net]' value='[full.csv].[Teleop Algae Net]' />
          <map key='[Teleop Algae Processor]' value='[full.csv].[Teleop Algae Processor]' />
          <map key='[Teleop Algae Removed From Reef]' value='[full.csv].[Teleop Algae Removed From Reef]' />
          <map key='[Teleop Coral Level 1]' value='[full.csv].[Teleop Coral Level 1]' />
          <map key='[Teleop Coral Level 2]' value='[full.csv].[Teleop Coral Level 2]' />
          <map key='[Teleop Coral Level 3]' value='[full.csv].[Teleop Coral Level 3]' />
          <map key='[Teleop Coral Level 4]' value='[full.csv].[Teleop Coral Level 4]' />
          <map key='[Teleop Coral Miss]' value='[full.csv].[Teleop Coral Miss]' />
          <map key='[Tippy]' value='[full.csv].[Tippy]' />
          <map key='[Was Defended]' value='[full.csv].[Was Defended]' />
          <map key='[Weight]' value='[pitScouting.csv].[Weight]' />
          <map key='[Width]' value='[pitScouting.csv].[Width]' />
          <map key='[Yellow Card]' value='[full.csv].[Yellow Card]' />
          <map key='[comment]' value='[pitScouting.csv].[comment]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[full.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AF601:no:A1:AF601:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scouter Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scouter Name]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Scouter Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match Level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Match Level]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Match Level</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match #</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Match #]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Match #</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Robot</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Robot]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Robot</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team #</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Team #]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Team #</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Coral Level 4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Coral Level 4]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Coral Level 4</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Coral Level 3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Coral Level 3]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Coral Level 3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Coral Level 2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Coral Level 2]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Coral Level 2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Coral Level 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Coral Level 1]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Coral Level 1</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Coral Miss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Coral Miss]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Coral Miss</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Algae Processor</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Algae Processor]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Algae Processor</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Algae Net</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Algae Net]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Algae Net</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Auto Algae Remove From Reef</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Auto Algae Remove From Reef]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Auto Algae Remove From Reef</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Leave</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Leave]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Leave</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cycle Timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cycle Timer]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Cycle Timer</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cycle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cycle Type]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Cycle Type</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Coral Level 4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Coral Level 4]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Coral Level 4</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Coral Level 3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Coral Level 3]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Coral Level 3</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Coral Level 2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Coral Level 2]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Coral Level 2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Coral Level 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Coral Level 1]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Coral Level 1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Coral Miss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Coral Miss]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Coral Miss</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Algae Processor</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Algae Processor]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Algae Processor</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Algae Net</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Algae Net]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Algae Net</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Algae Miss</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Algae Miss]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Algae Miss</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Teleop Algae Removed From Reef</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Teleop Algae Removed From Reef]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Teleop Algae Removed From Reef</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup From Floor</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pickup From Floor]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Pickup From Floor</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup From Coral Station</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pickup From Coral Station]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Pickup From Coral Station</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Endgame State</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Endgame State]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Endgame State</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Played Defense</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Played Defense]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Played Defense</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Was Defended</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Was Defended]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Was Defended</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Died</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Died]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Died</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tippy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tippy]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Tippy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yellow Card</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yellow Card]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Yellow Card</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Red Card</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Red Card]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Red Card</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Egregiously Bad Event</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Egregiously Bad Event]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Egregiously Bad Event</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Comment]</local-name>
            <parent-name>[full.csv]</parent-name>
            <remote-alias>Comment</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event (pitScouting.csv)]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Team number]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Team number</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Width</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Width]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Width</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Length</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Length]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Length</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drivetrain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drivetrain]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Drivetrain</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Drivetrain</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Other Drivetrain]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Other Drivetrain</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Swerve Ratio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Swerve Ratio]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Swerve Ratio</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Drivetrain Motor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Drivetrain Motor]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Drivetrain Motor</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Batteries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Batteries]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Batteries</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup Floor Coral</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pickup Floor Coral]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Pickup Floor Coral</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pickup Floor Algae</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pickup Floor Algae]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Pickup Floor Algae</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>How To Feed Robot</remote-name>
            <remote-type>129</remote-type>
            <local-name>[How To Feed Robot]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>How To Feed Robot</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Autos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Autos]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Autos</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scouting Method</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scouting Method]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>Scouting Method</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[comment]</local-name>
            <parent-name>[pitScouting.csv]</parent-name>
            <remote-alias>comment</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H5417:no:A1:H5417:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scouter Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Scouter Name (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Scouter Name</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match Level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Match Level (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Match Level</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match #</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Match # (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Match #</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Robot</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Robot (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Robot</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team #</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Team # (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Team #</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cycle Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cycle Number]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Cycle Number</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cycle Time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cycle Time]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Cycle Time</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cycle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cycle Type (teleop.csv)]</local-name>
            <parent-name>[teleop.csv]</parent-name>
            <remote-alias>Cycle Type</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
      <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
      </column>
      <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
      </column>
      <column caption='Teleop Coral Points' datatype='integer' name='[Calculation_1113796536774176771]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #], [Match Level]: Sum([Teleop Coral Level 4]*5 + [Teleop Coral Level 3]*4 + [Teleop Coral Level 2]*3 + [Teleop Coral Level 1]*2)}' />
      </column>
      <column caption='Auto Coral Points' datatype='integer' name='[Calculation_1113796536774799364]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Coral Level 1]*3 + [Auto Coral Level 2]*4 + [Auto Coral Level 3]*6 + [Auto Coral Level 4]*7)}' />
      </column>
      <column caption='Auto Leave Points' datatype='integer' name='[Calculation_1113796536775335941]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Match #], [Team #], [Match Level]: Sum(IIF([Teleop Coral Scores (copy)_1113796536767520769] &gt; 0, 3, 0))}' />
      </column>
      <column caption='Auto Algae Points' datatype='integer' name='[Calculation_1113796536775782406]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Algae Net]*4 + [Auto Algae Processor]*6)}' />
      </column>
      <column caption='Auto Points' datatype='integer' name='[Calculation_1113796536775974919]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1113796536774799364]+[Calculation_1113796536775335941]+[Calculation_1113796536775782406]' />
      </column>
      <column caption='Teleop Algae Points' datatype='integer' name='[Calculation_1113796536776224776]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Match Level], [Team #]: Sum([Teleop Algae Net]*4 + [Teleop Algae Processor]*6)}' />
      </column>
      <column caption='Teleop Points' datatype='integer' name='[Calculation_1113796536777318409]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1113796536776224776]+[Calculation_1113796536774176771]' />
      </column>
      <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
      </column>
      <column caption='Total Coral Points' datatype='integer' name='[Calculation_1113796536778932235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1113796536774176771]+[Calculation_1113796536774799364]' />
      </column>
      <column caption='Total Points' datatype='integer' name='[Calculation_1113796536779051020]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1113796536775974919]+[Calculation_1113796536777318409]+[Calculation_1113796536777392138]' />
      </column>
      <column caption='Team Role' datatype='string' default-type='ordinal' name='[Calculation_1113796536792510486]' role='measure' type='nominal'>
        <calculation class='tableau' formula='{ INCLUDE [Team #]: &#13;&#10;IF AVG([Played Defense]) &gt; [Parameters].[Parameter 2] and AVG([Calculation_1113796536768524290]) + avg([Calculation_1113796536793362455]) &lt; [Parameters].[Parameter 1]&#13;&#10;THEN &quot;Defensive Specialist&quot;&#13;&#10;ELSEIF AVG([Calculation_1113796536794533912]) &gt; [Parameters].[Parameter 3] and AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 5]&#13;&#10;THEN &quot;Coral Specialist&quot;&#13;&#10;ELSEIF AVG([Coral Scoring Percentage (copy)_1113796536794886169]) &gt; [Parameters].[Parameter 4] and AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 6]&#13;&#10;THEN &quot;Algae Specialist&quot;&#13;&#10;ELSEIF AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 5]&#13;&#10;THEN &quot;Hybrid Robot&quot;&#13;&#10;ELSE &quot;Potato&quot;&#13;&#10;END&#13;&#10;}' />
      </column>
      <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
      </column>
      <column caption='Coral Scoring Percentage' datatype='real' name='[Calculation_1113796536794533912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536768524290]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
      </column>
      <column caption='Offensive Picklist Calculation' datatype='real' name='[Calculation_441915768766627842]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Team #]: SUM(IIF([Drivetrain] == &quot;Swerve&quot;, 50, 0)) + AVG([Calculation_1113796536768524290]) + AVG([Teleop Coral Scores (copy)_1113796536767520769]) + (AVG([Calculation_1113796536777392138])/2) }' />
      </column>
      <column caption='Deep Climbs' datatype='integer' name='[Calculation_441915768767492099]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 3, 1, 0)) }' />
      </column>
      <column caption='Algae Processor' datatype='integer' name='[Calculation_550283640097263617 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: sum([Auto Algae Processor] + [Teleop Algae Processor])}' />
      </column>
      <column caption='Algae Net' datatype='integer' name='[Calculation_550283640097263617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: sum([Auto Algae Net] + [Teleop Algae Net])}' />
      </column>
      <column caption='Coral Accuracy' datatype='real' name='[Calculation_550283640422367234]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1113796536768524290]/([Calculation_1113796536768524290]+[Auto Coral Miss]+[Teleop Coral Miss])' />
      </column>
      <column caption='Auto Coral Accuracy' datatype='real' name='[Calculation_550283640422907907]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769]/([Teleop Coral Scores (copy)_1113796536767520769]+[Auto Coral Miss])' />
      </column>
      <column caption='Teleop Coral Accuracy' datatype='real' name='[Calculation_550283640423051268]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1113796536766529536]/([Calculation_1113796536766529536]+[Teleop Coral Miss])' />
      </column>
      <column caption='Algae Accuracy' datatype='real' name='[Calculation_550283640440823813]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_550283640097263617]/([Calculation_550283640097263617]+[Teleop Algae Miss])' />
      </column>
      <column caption='Algae Scoring Percentage' datatype='real' name='[Coral Scoring Percentage (copy)_1113796536794886169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536793362455]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
      </column>
      <column datatype='real' name='[Cycle Time]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[Cycle Timer]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[Cycle Type]' role='dimension' type='nominal' />
      <column caption='Shallow Climbs' datatype='integer' name='[Deep Climbs (copy)_441915768768069637]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 2, 1, 0)) }' />
      </column>
      <column caption='Barge Parks' datatype='integer' name='[Deep Climbs (copy)_441915768768135174]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 1, 1, 0)) }' />
      </column>
      <column datatype='integer' name='[Died]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Egregiously Bad Event]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Leave]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Match # (teleop.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
      <column caption='Floor Algae' datatype='string' name='[Pickup Floor Algae]' role='dimension' type='nominal' />
      <column caption='Floor Coral' datatype='string' name='[Pickup Floor Coral]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Pickup From Coral Station]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Pickup From Floor]' role='measure' type='quantitative' />
      <column datatype='real' name='[Played Defense]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Red Card]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Team # (teleop.csv)]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Team number]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Teleop Algae Removed From Reef]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
      <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
      </column>
      <column datatype='integer' name='[Tippy]' role='measure' type='quantitative' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Was Defended]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Yellow Card]' role='measure' type='quantitative' />
      <column caption='full.csv' datatype='table' name='[__tableau_internal_object_id__].[full.csv_9B0E3191BD584356BCA1BB4F5F354E2F]' role='measure' type='quantitative' />
      <column caption='pitScouting.csv' datatype='table' name='[__tableau_internal_object_id__].[pitScouting.csv_70E607578E614605815113028C4D935A]' role='measure' type='quantitative' />
      <column caption='teleop.csv' datatype='table' name='[__tableau_internal_object_id__].[teleop.csv_0D06925D65244BE7B2751504D94BF839]' role='measure' type='quantitative' />
      <column caption='Comment1' datatype='string' name='[comment]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[full.csv_9B0E3191BD584356BCA1BB4F5F354E2F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:full.csv_9B0E3191BD584356BCA1BB4F5F354E2F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[teleop.csv_0D06925D65244BE7B2751504D94BF839]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:teleop.csv_0D06925D65244BE7B2751504D94BF839:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536792510486]' derivation='Attribute' name='[attr:Calculation_1113796536792510486:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1113796536794533912]' derivation='Attribute' name='[attr:Calculation_1113796536794533912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Egregiously Bad Event]' derivation='Attribute' name='[attr:Egregiously Bad Event:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536766529536]' derivation='Avg' name='[avg:Calculation_1113796536766529536:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536775974919]' derivation='Avg' name='[avg:Calculation_1113796536775974919:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536775974919]' derivation='Avg' name='[avg:Calculation_1113796536775974919:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Calculation_1113796536777318409]' derivation='Avg' name='[avg:Calculation_1113796536777318409:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536777318409]' derivation='Avg' name='[avg:Calculation_1113796536777318409:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Calculation_1113796536777392138]' derivation='Avg' name='[avg:Calculation_1113796536777392138:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536777392138]' derivation='Avg' name='[avg:Calculation_1113796536777392138:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Calculation_1113796536779051020]' derivation='Avg' name='[avg:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536793362455]' derivation='Avg' name='[avg:Calculation_1113796536793362455:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536794533912]' derivation='Avg' name='[avg:Calculation_1113796536794533912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_550283640097263617 1]' derivation='Avg' name='[avg:Calculation_550283640097263617 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_550283640097263617]' derivation='Avg' name='[avg:Calculation_550283640097263617:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cycle Time]' derivation='Avg' name='[avg:Cycle Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 1]' derivation='Avg' name='[avg:Teleop Coral Level 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 2]' derivation='Avg' name='[avg:Teleop Coral Level 2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 3]' derivation='Avg' name='[avg:Teleop Coral Level 3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 4]' derivation='Avg' name='[avg:Teleop Coral Level 4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Scores (copy)_1113796536767520769]' derivation='Avg' name='[avg:Teleop Coral Scores (copy)_1113796536767520769:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536768524290]' derivation='Count' name='[cnt:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536792510486]' derivation='Count' name='[cnt:Calculation_1113796536792510486:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536779051020]' derivation='Sum' name='[diff:sum:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1113796536768524290]' derivation='Max' name='[max:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536768524290]' derivation='Min' name='[min:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[pcrk:avg:Calculation_1113796536768524290:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[pcrk:avg:Calculation_1113796536768524290:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Team #]' ordering-type='Field' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[pcrk:avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance aggregation-param='25' column='[Calculation_1113796536779051020]' derivation='Percentile' name='[prc25:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='25' column='[Cycle Time]' derivation='Percentile' name='[prc25:Cycle Time:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='75' column='[Calculation_1113796536779051020]' derivation='Percentile' name='[prc75:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='75' column='[Cycle Time]' derivation='Percentile' name='[prc75:Cycle Time:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='90' column='[Calculation_1113796536779051020]' derivation='Percentile' name='[prc90:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto Algae Net]' derivation='Sum' name='[sum:Auto Algae Net:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto Algae Processor]' derivation='Sum' name='[sum:Auto Algae Processor:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto Coral Level 1]' derivation='Sum' name='[sum:Auto Coral Level 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto Coral Level 2]' derivation='Sum' name='[sum:Auto Coral Level 2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto Coral Level 3]' derivation='Sum' name='[sum:Auto Coral Level 3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Auto Coral Level 4]' derivation='Sum' name='[sum:Auto Coral Level 4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536766529536]' derivation='Sum' name='[sum:Calculation_1113796536766529536:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536768524290]' derivation='Sum' name='[sum:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536774176771]' derivation='Sum' name='[sum:Calculation_1113796536774176771:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536774799364]' derivation='Sum' name='[sum:Calculation_1113796536774799364:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536775335941]' derivation='Sum' name='[sum:Calculation_1113796536775335941:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536775782406]' derivation='Sum' name='[sum:Calculation_1113796536775782406:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536775974919]' derivation='Sum' name='[sum:Calculation_1113796536775974919:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536776224776]' derivation='Sum' name='[sum:Calculation_1113796536776224776:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536777318409]' derivation='Sum' name='[sum:Calculation_1113796536777318409:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536777392138]' derivation='Sum' name='[sum:Calculation_1113796536777392138:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536778932235]' derivation='Sum' name='[sum:Calculation_1113796536778932235:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536779051020]' derivation='Sum' name='[sum:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536793362455]' derivation='Sum' name='[sum:Calculation_1113796536793362455:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1113796536794533912]' derivation='Sum' name='[sum:Calculation_1113796536794533912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Coral Scoring Percentage (copy)_1113796536794886169]' derivation='Sum' name='[sum:Coral Scoring Percentage (copy)_1113796536794886169:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cycle Time]' derivation='Sum' name='[sum:Cycle Time:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Died]' derivation='Sum' name='[sum:Died:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Egregiously Bad Event]' derivation='Sum' name='[sum:Egregiously Bad Event:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Endgame State]' derivation='Sum' name='[sum:Endgame State:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Match # (teleop.csv)]' derivation='Sum' name='[sum:Match # (teleop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pickup From Coral Station]' derivation='Sum' name='[sum:Pickup From Coral Station:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pickup From Floor]' derivation='Sum' name='[sum:Pickup From Floor:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Played Defense]' derivation='Sum' name='[sum:Played Defense:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Red Card]' derivation='Sum' name='[sum:Red Card:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Team # (teleop.csv)]' derivation='Sum' name='[sum:Team # (teleop.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Algae Net]' derivation='Sum' name='[sum:Teleop Algae Net:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Algae Processor]' derivation='Sum' name='[sum:Teleop Algae Processor:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Algae Removed From Reef]' derivation='Sum' name='[sum:Teleop Algae Removed From Reef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 1]' derivation='Sum' name='[sum:Teleop Coral Level 1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 2]' derivation='Sum' name='[sum:Teleop Coral Level 2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 3]' derivation='Sum' name='[sum:Teleop Coral Level 3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Level 4]' derivation='Sum' name='[sum:Teleop Coral Level 4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Teleop Coral Scores (copy)_1113796536767520769]' derivation='Sum' name='[sum:Teleop Coral Scores (copy)_1113796536767520769:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tippy]' derivation='Sum' name='[sum:Tippy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Was Defended]' derivation='Sum' name='[sum:Was Defended:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Yellow Card]' derivation='Sum' name='[sum:Yellow Card:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Team #)' hidden='true' name='[Action (Team #)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Team #]' />
        </groupfilter>
      </group>
      <layout common-percentage='0.829499' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.170501' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='sf_default' type='palette'>
            <map to='#00aa00'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Egregiously Bad Event:qk]&quot;</bucket>
            </map>
            <map to='#00aa00'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Egregiously Bad Event:qk]&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[max:Calculation_1113796536768524290:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Scores (copy)_1113796536767520769:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc25:Cycle Time:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc75:Cycle Time:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Coral Level 1:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536775335941:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536776224776:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536778932235:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Cycle Time:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Pickup From Floor:qk]&quot;</bucket>
            </map>
            <map to='#4fd2d2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 4:qk]&quot;</bucket>
            </map>
            <map to='#51b364'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 2:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640097263617:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[diff:sum:Calculation_1113796536779051020:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc75:Calculation_1113796536779051020:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc90:Calculation_1113796536779051020:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Coral Level 3:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536766529536:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536777392138:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536779051020:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Coral Scoring Percentage (copy)_1113796536794886169:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Algae Removed From Reef:qk]&quot;</bucket>
            </map>
            <map to='#52b7d8'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_1113796536799977501:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[__tableau_internal_object_id__].[cnt:teleop.csv_0D06925D65244BE7B2751504D94BF839:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc25:Calculation_1113796536779051020:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Algae Processor:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536793362455:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Pickup From Coral Station:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Algae Net:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 3:qk]&quot;</bucket>
            </map>
            <map to='#54a77b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Scores (copy)_1113796536767520769:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Calculation_1113796536768524290:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[min:Calculation_1113796536768524290:qk]&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 3:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536794533912:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777318409:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777318409:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536794533912:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640097263617 1:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Algae Net:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Coral Level 4:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536777318409:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536794533912:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Endgame State:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Team \# (teleop.csv):qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 1:qk]&quot;</bucket>
            </map>
            <map to='#e16032'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Was Defended:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Coral Level 2:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536768524290:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536774176771:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536775974919:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Died:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Played Defense:qk]&quot;</bucket>
            </map>
            <map to='#e287b2'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Algae Processor:qk]&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536768524290:qk:1]&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536768524290:qk:2]&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536768524290:qk]&quot;</bucket>
            </map>
            <map to='#e39802'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_441915768765501440:qk]&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 4:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536766529536:qk]&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Red Card:qk]&quot;</bucket>
            </map>
            <map to='#ff684c'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 1:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[__tableau_internal_object_id__].[cnt:full.csv_9B0E3191BD584356BCA1BB4F5F354E2F:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775974919:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775974919:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Calculation_1113796536792510486:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536774799364:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536775782406:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Match \# (teleop.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 2:qk]&quot;</bucket>
            </map>
            <map to='#ffb03b'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Tippy:qk]&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Yellow Card:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Calculation_1113796536792510486:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Coral Specialist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Potato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hybrid Robot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Defensive Specialist&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Algae Specialist&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Defensive Specialist Game Piece Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Defensive Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Coral Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.9'>
          <calculation class='tableau' formula='0.9' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Algae Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
          <calculation class='tableau' formula='0.5' />
          <range max='1.0' min='0.0' />
        </column>
        <column caption='Non-Potato Scoring Element Threshold' datatype='integer' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
        </column>
        <column caption='Algae Specialist Game Piece Threshold' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='full.csv' id='full.csv_9B0E3191BD584356BCA1BB4F5F354E2F'>
            <properties context=''>
              <relation connection='textscan.1pt1j34106g2yn1bv03hb1ed3476' name='full.csv' table='[C:\Users\satoshi\Documents\ScoutingPASS\2025 Data Parser\full#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:AF601:no:A1:AF601:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Scouter Name' ordinal='0' />
                  <column datatype='string' name='Event' ordinal='1' />
                  <column datatype='string' name='Match Level' ordinal='2' />
                  <column datatype='integer' name='Match #' ordinal='3' />
                  <column datatype='string' name='Robot' ordinal='4' />
                  <column datatype='integer' name='Team #' ordinal='5' />
                  <column datatype='integer' name='Auto Coral Level 4' ordinal='6' />
                  <column datatype='integer' name='Auto Coral Level 3' ordinal='7' />
                  <column datatype='integer' name='Auto Coral Level 2' ordinal='8' />
                  <column datatype='integer' name='Auto Coral Level 1' ordinal='9' />
                  <column datatype='integer' name='Auto Coral Miss' ordinal='10' />
                  <column datatype='integer' name='Auto Algae Processor' ordinal='11' />
                  <column datatype='integer' name='Auto Algae Net' ordinal='12' />
                  <column datatype='integer' name='Auto Algae Remove From Reef' ordinal='13' />
                  <column datatype='string' name='Leave' ordinal='14' />
                  <column datatype='string' name='Cycle Timer' ordinal='15' />
                  <column datatype='string' name='Cycle Type' ordinal='16' />
                  <column datatype='integer' name='Teleop Coral Level 4' ordinal='17' />
                  <column datatype='integer' name='Teleop Coral Level 3' ordinal='18' />
                  <column datatype='integer' name='Teleop Coral Level 2' ordinal='19' />
                  <column datatype='integer' name='Teleop Coral Level 1' ordinal='20' />
                  <column datatype='integer' name='Teleop Coral Miss' ordinal='21' />
                  <column datatype='integer' name='Teleop Algae Processor' ordinal='22' />
                  <column datatype='integer' name='Teleop Algae Net' ordinal='23' />
                  <column datatype='integer' name='Teleop Algae Miss' ordinal='24' />
                  <column datatype='integer' name='Teleop Algae Removed From Reef' ordinal='25' />
                  <column datatype='integer' name='Pickup From Floor' ordinal='26' />
                  <column datatype='integer' name='Pickup From Coral Station' ordinal='27' />
                  <column datatype='integer' name='Endgame State' ordinal='28' />
                  <column datatype='real' name='Played Defense' ordinal='29' />
                  <column datatype='string' name='Was Defended' ordinal='30' />
                  <column datatype='integer' name='Died' ordinal='31' />
                  <column datatype='integer' name='Tippy' ordinal='32' />
                  <column datatype='integer' name='Yellow Card' ordinal='33' />
                  <column datatype='integer' name='Red Card' ordinal='34' />
                  <column datatype='integer' name='Egregiously Bad Event' ordinal='35' />
                  <column datatype='string' name='Comment' ordinal='36' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='pitScouting.csv' id='pitScouting.csv_70E607578E614605815113028C4D935A'>
            <properties context=''>
              <relation connection='textscan.1pt1j34106g2yn1bv03hb1ed3476' name='pitScouting.csv' table='[pitScouting#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Event' ordinal='0' />
                  <column datatype='integer' name='Team number' ordinal='1' />
                  <column datatype='real' name='Width' ordinal='2' />
                  <column datatype='real' name='Length' ordinal='3' />
                  <column datatype='real' name='Weight' ordinal='4' />
                  <column datatype='string' name='Drivetrain' ordinal='5' />
                  <column datatype='string' name='Other Drivetrain' ordinal='6' />
                  <column datatype='string' name='Swerve Ratio' ordinal='7' />
                  <column datatype='string' name='Drivetrain Motor' ordinal='8' />
                  <column datatype='integer' name='Batteries' ordinal='9' />
                  <column datatype='string' name='Pickup Floor Coral' ordinal='10' />
                  <column datatype='string' name='Pickup Floor Algae' ordinal='11' />
                  <column datatype='string' name='How To Feed Robot' ordinal='12' />
                  <column datatype='string' name='Autos' ordinal='13' />
                  <column datatype='string' name='Scouting Method' ordinal='14' />
                  <column datatype='string' name='comment' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='teleop.csv' id='teleop.csv_0D06925D65244BE7B2751504D94BF839'>
            <properties context=''>
              <relation connection='textscan.1pt1j34106g2yn1bv03hb1ed3476' name='teleop.csv' table='[C:\Users\satoshi\Documents\ScoutingPASS\2025 Data Parser\teleop#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:H5417:no:A1:H5417:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Scouter Name' ordinal='0' />
                  <column datatype='string' name='Event' ordinal='1' />
                  <column datatype='string' name='Match Level' ordinal='2' />
                  <column datatype='integer' name='Match #' ordinal='3' />
                  <column datatype='string' name='Robot' ordinal='4' />
                  <column datatype='integer' name='Team #' ordinal='5' />
                  <column datatype='string' name='Cycle Number' ordinal='6' />
                  <column datatype='real' name='Cycle Time' ordinal='7' />
                  <column datatype='string' name='Cycle Type' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Team #]' />
              <expression op='[Team number]' />
            </expression>
            <first-end-point object-id='full.csv_9B0E3191BD584356BCA1BB4F5F354E2F' />
            <second-end-point object-id='pitScouting.csv_70E607578E614605815113028C4D935A' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Match #]' />
                <expression op='[Match # (teleop.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Match Level]' />
                <expression op='[Match Level (teleop.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Team #]' />
                <expression op='[Team # (teleop.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='full.csv_9B0E3191BD584356BCA1BB4F5F354E2F' />
            <second-end-point object-id='teleop.csv_0D06925D65244BE7B2751504D94BF839' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_86C21F5261264E4DA90A6AC9FBD2959C]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Coral Scoring By Level' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Team #' />
        <param name='target' value='Coral Scoring By Level' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_5A3C8F5A83804926BD5165F0F23EA69B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Match Preview' type='sheet' worksheet='Team Role' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Match Preview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_6EC4C4E3E4F440B99F1DFF0164781A9B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Alliance Selection' type='sheet' worksheet='First Pick List' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Alliance Selection' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AS Algae Scoring'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column caption='RANK_PERCENTILE(AVG([Total Algae Scores]))' datatype='real' name='[Calculation_441915768765501440]' role='measure' type='quantitative' user:unnamed='AS Algae Scoring'>
              <calculation class='tableau' formula='RANK_PERCENTILE(AVG([Calculation_1113796536793362455]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='PERCENTILE([Total Algae Scores],0.75)' datatype='real' name='[Calculation_441915768765607937]' role='measure' type='quantitative' user:unnamed='AS Algae Scoring'>
              <calculation class='tableau' formula='PERCENTILE([Calculation_1113796536793362455],0.75)' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1113796536793362455]' derivation='Avg' name='[avg:Calculation_1113796536793362455:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_441915768765501440]' derivation='User' name='[usr:Calculation_441915768765501440:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_441915768765607937]' derivation='User' name='[usr:Calculation_441915768765607937:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_441915768765607937:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Action (Team #)]'>
            <groupfilter function='level-members' level='[Team #]' user:ui-action-filter='[Action3_6EC4C4E3E4F440B99F1DFF0164781A9B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[Action (Team #)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='79' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_441915768765501440:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_441915768765501440:qk]' />
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6388E9C4-2A62-452D-992D-623BB829BDFC}' />
    </worksheet>
    <worksheet name='AS Barge Ability'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Offensive Picklist Calculation' datatype='real' name='[Calculation_441915768766627842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: SUM(IIF([Drivetrain] == &quot;Swerve&quot;, 50, 0)) + AVG([Calculation_1113796536768524290]) + AVG([Teleop Coral Scores (copy)_1113796536767520769]) + (AVG([Calculation_1113796536777392138])/2) }' />
            </column>
            <column caption='Deep Climbs' datatype='integer' name='[Calculation_441915768767492099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 3, 1, 0)) }' />
            </column>
            <column caption='Shallow Climbs' datatype='integer' name='[Deep Climbs (copy)_441915768768069637]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 2, 1, 0)) }' />
            </column>
            <column caption='Barge Parks' datatype='integer' name='[Deep Climbs (copy)_441915768768135174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 1, 1, 0)) }' />
            </column>
            <column datatype='string' name='[Drivetrain]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536777392138]' derivation='Avg' name='[avg:Calculation_1113796536777392138:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_441915768767492099]' derivation='Avg' name='[avg:Calculation_441915768767492099:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deep Climbs (copy)_441915768768069637]' derivation='Avg' name='[avg:Deep Climbs (copy)_441915768768069637:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deep Climbs (copy)_441915768768135174]' derivation='Avg' name='[avg:Deep Climbs (copy)_441915768768135174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_441915768766627842]' derivation='Sum' name='[sum:Calculation_441915768766627842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768135174:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_441915768767492099:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768069637:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768135174:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768069637:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_441915768767492099:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Action (Team #)]'>
            <groupfilter function='level-members' level='[Team #]' user:ui-action-filter='[Action3_6EC4C4E3E4F440B99F1DFF0164781A9B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_441915768766627842:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[Action (Team #)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_441915768767492099:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]' value='' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768069637:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768135174:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AE3C43D2-24B0-412A-ADF9-1832B7C716F5}' />
    </worksheet>
    <worksheet name='AS Coral Scoring'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Offensive Picklist Calculation' datatype='real' name='[Calculation_441915768766627842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: SUM(IIF([Drivetrain] == &quot;Swerve&quot;, 50, 0)) + AVG([Calculation_1113796536768524290]) + AVG([Teleop Coral Scores (copy)_1113796536767520769]) + (AVG([Calculation_1113796536777392138])/2) }' />
            </column>
            <column datatype='string' name='[Drivetrain]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[pcrk:avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance aggregation-param='75' column='[Calculation_1113796536768524290]' derivation='Percentile' name='[prc75:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_441915768766627842]' derivation='Sum' name='[sum:Calculation_441915768766627842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc75:Calculation_1113796536768524290:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Action (Team #)]'>
            <groupfilter function='level-members' level='[Team #]' user:ui-action-filter='[Action3_6EC4C4E3E4F440B99F1DFF0164781A9B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Team #:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Team #:ok]' member='340' />
                <groupfilter function='member' level='[none:Team #:ok]' member='639' />
                <groupfilter function='member' level='[none:Team #:ok]' member='695' />
                <groupfilter function='member' level='[none:Team #:ok]' member='1511' />
                <groupfilter function='member' level='[none:Team #:ok]' member='3015' />
                <groupfilter function='member' level='[none:Team #:ok]' member='4611' />
                <groupfilter function='member' level='[none:Team #:ok]' member='6911' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_441915768766627842:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[Action (Team #)]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='79' />
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='21' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536768524290:qk]' palette='sunrise_sunset_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536768524290:qk]' />
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{45BCF6CD-CBDF-44B3-866E-071680936096}' />
    </worksheet>
    <worksheet name='Accuracy Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Miss]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Algae Net' datatype='integer' name='[Calculation_550283640097263617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: sum([Auto Algae Net] + [Teleop Algae Net])}' />
            </column>
            <column caption='Coral Accuracy' datatype='real' name='[Calculation_550283640422367234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536768524290]/([Calculation_1113796536768524290]+[Auto Coral Miss]+[Teleop Coral Miss])' />
            </column>
            <column caption='Auto Coral Accuracy' datatype='real' name='[Calculation_550283640422907907]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769]/([Teleop Coral Scores (copy)_1113796536767520769]+[Auto Coral Miss])' />
            </column>
            <column caption='Teleop Coral Accuracy' datatype='real' name='[Calculation_550283640423051268]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536766529536]/([Calculation_1113796536766529536]+[Teleop Coral Miss])' />
            </column>
            <column caption='Algae Accuracy' datatype='real' name='[Calculation_550283640440823813]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_550283640097263617]/([Calculation_550283640097263617]+[Teleop Algae Miss])' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Miss]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Miss]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_550283640422367234]' derivation='Avg' name='[avg:Calculation_550283640422367234:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_550283640422907907]' derivation='Avg' name='[avg:Calculation_550283640422907907:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_550283640423051268]' derivation='Avg' name='[avg:Calculation_550283640423051268:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_550283640440823813]' derivation='Avg' name='[avg:Calculation_550283640440823813:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Match #:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Team #:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640422907907:ok]' value='p0.00%' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640423051268:ok]' value='p0.00%' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640422367234:ok]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640422907907:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640423051268:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640422367234:ok] / [federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640440823813:ok])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{10714FEE-C03D-4D69-9A0F-2D4A24C76F4D}' />
    </worksheet>
    <worksheet name='Algae Net Vs Processor'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column caption='Algae Processor' datatype='integer' name='[Calculation_550283640097263617 1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: sum([Auto Algae Processor] + [Teleop Algae Processor])}' />
            </column>
            <column caption='Algae Net' datatype='integer' name='[Calculation_550283640097263617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: sum([Auto Algae Net] + [Teleop Algae Net])}' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_550283640097263617 1]' derivation='Avg' name='[avg:Calculation_550283640097263617 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_550283640097263617]' derivation='Avg' name='[avg:Calculation_550283640097263617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640097263617 1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640097263617:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640097263617 1:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_550283640097263617:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{5DFF850C-048E-44B4-8260-CC1C63BA8955}' />
    </worksheet>
    <worksheet name='All Comments'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='string' name='[Comment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Scouter Name]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column-instance column='[Comment]' derivation='None' name='[none:Comment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Scouter Name]' derivation='None' name='[none:Scouter Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Comment:nk]' />
              <groupfilter function='member' level='[none:Comment:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]' value='44' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]' value='752' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Scouter Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok] / [federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0F915CF0-E6C2-42CD-8B8E-AA837E072069}' />
    </worksheet>
    <worksheet name='Average Points'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Points' datatype='integer' name='[Calculation_1113796536774176771]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #], [Match Level]: Sum([Teleop Coral Level 4]*5 + [Teleop Coral Level 3]*4 + [Teleop Coral Level 2]*3 + [Teleop Coral Level 1]*2)}' />
            </column>
            <column caption='Auto Coral Points' datatype='integer' name='[Calculation_1113796536774799364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Coral Level 1]*3 + [Auto Coral Level 2]*4 + [Auto Coral Level 3]*6 + [Auto Coral Level 4]*7)}' />
            </column>
            <column caption='Auto Leave Points' datatype='integer' name='[Calculation_1113796536775335941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #], [Team #], [Match Level]: Sum(IIF([Teleop Coral Scores (copy)_1113796536767520769] &gt; 0, 3, 0))}' />
            </column>
            <column caption='Auto Algae Points' datatype='integer' name='[Calculation_1113796536775782406]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Algae Net]*4 + [Auto Algae Processor]*6)}' />
            </column>
            <column caption='Auto Points' datatype='integer' name='[Calculation_1113796536775974919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536774799364]+[Calculation_1113796536775335941]+[Calculation_1113796536775782406]' />
            </column>
            <column caption='Teleop Algae Points' datatype='integer' name='[Calculation_1113796536776224776]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Match Level], [Team #]: Sum([Teleop Algae Net]*4 + [Teleop Algae Processor]*6)}' />
            </column>
            <column caption='Teleop Points' datatype='integer' name='[Calculation_1113796536777318409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536776224776]+[Calculation_1113796536774176771]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Total Points' datatype='integer' name='[Calculation_1113796536779051020]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536775974919]+[Calculation_1113796536777318409]+[Calculation_1113796536777392138]' />
            </column>
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536775974919]' derivation='Avg' name='[avg:Calculation_1113796536775974919:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Calculation_1113796536777318409]' derivation='Avg' name='[avg:Calculation_1113796536777318409:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Calculation_1113796536777392138]' derivation='Avg' name='[avg:Calculation_1113796536777392138:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance aggregation-param='75' column='[Calculation_1113796536779051020]' derivation='Percentile' name='[prc75:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777318409:vtsum:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775974919:vtsum:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777318409:vtsum:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775974919:vtsum:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='3'>
            <groupfilter function='empty-level' member='[none:Team #:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='false' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' value='60' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='Match Section Breakdown'>
              <formatted-text>
                <run>Match Section Breakdown</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oijtqs0y37ubd17adrdr06iia96].[prc75:Calculation_1113796536779051020:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>([federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values] + [federated.1oijtqs0y37ubd17adrdr06iia96].[prc75:Calculation_1113796536779051020:qk])</cols>
      </table>
      <simple-id uuid='{DF3A32AD-5BC3-4D90-B7E2-B364B2554540}' />
    </worksheet>
    <worksheet name='Bad Event Comments'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='string' name='[Comment]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Egregiously Bad Event]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Scouter Name]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column-instance column='[Egregiously Bad Event]' derivation='Attribute' name='[attr:Egregiously Bad Event:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Comment]' derivation='None' name='[none:Comment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Scouter Name]' derivation='None' name='[none:Scouter Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Egregiously Bad Event:ok]'>
            <groupfilter function='member' level='[attr:Egregiously Bad Event:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Egregiously Bad Event:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='777' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Scouter Name:nk] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok] / [federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{E4C50CE4-DEA9-49BF-B8FA-301740C2D599}' />
    </worksheet>
    <worksheet name='Cards and Bad Events'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Egregiously Bad Event]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Red Card]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Yellow Card]' role='measure' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Egregiously Bad Event]' derivation='Sum' name='[sum:Egregiously Bad Event:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Red Card]' derivation='Sum' name='[sum:Red Card:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yellow Card]' derivation='Sum' name='[sum:Yellow Card:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Egregiously Bad Event:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Yellow Card:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Red Card:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Egregiously Bad Event:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Yellow Card:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Red Card:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' value='65' />
            <encoding attr='space' class='0' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' field-type='quantitative' max='4.9581707506640562' min='0.18544333569842614' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='22' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='Bad Things'>
              <formatted-text>
                <run>Bad Things</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{F5D221B2-2D74-44F7-A8FA-7C3E1A132509}' />
    </worksheet>
    <worksheet name='Coral Points Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Teleop Coral Points' datatype='integer' name='[Calculation_1113796536774176771]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #], [Match Level]: Sum([Teleop Coral Level 4]*5 + [Teleop Coral Level 3]*4 + [Teleop Coral Level 2]*3 + [Teleop Coral Level 1]*2)}' />
            </column>
            <column caption='Auto Coral Points' datatype='integer' name='[Calculation_1113796536774799364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Coral Level 1]*3 + [Auto Coral Level 2]*4 + [Auto Coral Level 3]*6 + [Auto Coral Level 4]*7)}' />
            </column>
            <column caption='Total Coral Points' datatype='integer' name='[Calculation_1113796536778932235]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536774176771]+[Calculation_1113796536774799364]' />
            </column>
            <column caption='AVG([Total Coral Points])/AVG([Total Coral Scores])' datatype='real' name='[Calculation_1113796536787365909]' role='measure' type='quantitative' user:unnamed='Coral Points Breakdown'>
              <calculation class='tableau' formula='AVG([Calculation_1113796536778932235])/AVG([Calculation_1113796536768524290])' />
            </column>
            <column datatype='real' name='[Cycle Time]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536774176771]' derivation='Avg' name='[avg:Calculation_1113796536774176771:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536774799364]' derivation='Avg' name='[avg:Calculation_1113796536774799364:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536778932235]' derivation='Avg' name='[avg:Calculation_1113796536778932235:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cycle Time]' derivation='Avg' name='[avg:Cycle Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1113796536778932235]' derivation='Avg' name='[pcrk:avg:Calculation_1113796536778932235:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[Calculation_1113796536778932235]' derivation='Avg' name='[rank:avg:Calculation_1113796536778932235:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_1113796536787365909]' derivation='User' name='[usr:Calculation_1113796536787365909:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774799364:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774176771:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536778932235:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[rank:avg:Calculation_1113796536778932235:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536778932235:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_1113796536787365909:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774799364:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774176771:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536778932235:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[rank:avg:Calculation_1113796536778932235:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536778932235:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536778932235:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='on' />
            <format attr='text-align' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='center' />
            <format attr='vertical-align' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='center' />
            <format attr='text-orientation' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536778932235:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536778932235:qk]' />
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BAB9C263-3199-4220-839C-EBC76CAC614C}' />
    </worksheet>
    <worksheet name='Coral Scoring By Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1113796536766529536]' derivation='Avg' name='[avg:Calculation_1113796536766529536:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teleop Coral Level 1]' derivation='Avg' name='[avg:Teleop Coral Level 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teleop Coral Level 2]' derivation='Avg' name='[avg:Teleop Coral Level 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teleop Coral Level 3]' derivation='Avg' name='[avg:Teleop Coral Level 3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teleop Coral Level 4]' derivation='Avg' name='[avg:Teleop Coral Level 4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 1:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 4:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Level 3:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536766529536:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' field-type='quantitative' max='14.612573547718759' min='-0.061280095110731292' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='58' />
            <format attr='border-color' value='#72b966' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='bold' />
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='#606b76' />
            <format attr='font-size' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='10' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</cols>
      </table>
      <simple-id uuid='{9238B899-2AF2-4249-8B6E-6D0959164579}' />
    </worksheet>
    <worksheet name='Coral Scoring Percentage'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column caption='Coral Scoring Percentage' datatype='real' name='[Calculation_1113796536794533912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536768524290]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536794533912]' derivation='Avg' name='[avg:Calculation_1113796536794533912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='ASC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536794533912:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536794533912:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{EC9C3E80-E8FA-422E-BF6A-B37C09D9EFB9}' />
    </worksheet>
    <worksheet name='Coral Vs Algae'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536793362455]' derivation='Avg' name='[avg:Calculation_1113796536793362455:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='3'>
            <groupfilter function='empty-level' member='[none:Team #:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='false' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' value='64' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='Coral Vs Algae'>
              <formatted-text>
                <run>Coral Vs Algae</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{AB0032B2-32E9-4C1B-970A-3106AEA1C30F}' />
    </worksheet>
    <worksheet name='Cycle Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column datatype='real' name='[Cycle Time]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column-instance column='[Cycle Time]' derivation='Count' name='[cnt:Cycle Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Auto Coral Level 4]' derivation='Sum' name='[sum:Auto Coral Level 4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Teleop Coral Level 1]' derivation='Sum' name='[sum:Teleop Coral Level 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Teleop Coral Level 2]' derivation='Sum' name='[sum:Teleop Coral Level 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Teleop Coral Level 3]' derivation='Sum' name='[sum:Teleop Coral Level 3:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Teleop Coral Level 4]' derivation='Sum' name='[sum:Teleop Coral Level 4:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 1:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 2:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 3:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Teleop Coral Level 4:ok] / [federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Auto Coral Level 4:ok])))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{75AE5644-8387-4E70-9632-A7B0AEA32EA1}' />
    </worksheet>
    <worksheet name='Cycle Time Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column caption='Offensive Picklist Calculation' datatype='real' name='[Calculation_441915768766627842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: SUM(IIF([Drivetrain] == &quot;Swerve&quot;, 50, 0)) + AVG([Calculation_1113796536768524290]) + AVG([Teleop Coral Scores (copy)_1113796536767520769]) + (AVG([Calculation_1113796536777392138])/2) }' />
            </column>
            <column datatype='real' name='[Cycle Time]' role='measure' type='quantitative' />
            <column datatype='string' name='[Drivetrain]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Match # (teleop.csv)]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Was Defended]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536793362455]' derivation='Avg' name='[avg:Calculation_1113796536793362455:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cycle Time]' derivation='Avg' name='[avg:Cycle Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cycle Time]' derivation='Count' name='[cnt:Cycle Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Match # (teleop.csv)]' derivation='CountD' name='[ctd:Match # (teleop.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Was Defended]' derivation='None' name='[none:Was Defended:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='25' column='[Cycle Time]' derivation='Percentile' name='[prc25:Cycle Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_441915768766627842]' derivation='Sum' name='[sum:Calculation_441915768766627842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc25:Cycle Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[ctd:Match \# (teleop.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc25:Cycle Time:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[ctd:Match \# (teleop.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536793362455:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_441915768766627842:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='132' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[ctd:Match # (teleop.csv):qk]' value='N' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok] / [federated.1oijtqs0y37ubd17adrdr06iia96].[none:Was Defended:nk])</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A4959EF5-392D-416E-8020-06F0A8182BF6}' />
    </worksheet>
    <worksheet name='Cycle Type/Time Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='real' name='[Cycle Time]' role='measure' type='quantitative' />
            <column datatype='string' name='[Cycle Type (teleop.csv)]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column-instance column='[Cycle Time]' derivation='Avg' name='[avg:Cycle Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cycle Time]' derivation='Count' name='[cnt:Cycle Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cycle Time]' derivation='Count' name='[cnt:Cycle Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cycle Type (teleop.csv)]' derivation='None' name='[none:Cycle Type (teleop.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Match #:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Team #:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Cycle Type (teleop.csv):nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='font-size' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Cycle Type (teleop.csv):nk]' value='14' />
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Cycle Type (teleop.csv):nk]' value='bold' />
            <format attr='display' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:ok]' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:qk]' />
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Cycle Type (teleop.csv):nk] / [federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:ok])))</rows>
        <cols />
      </table>
      <simple-id uuid='{467DBBCC-D633-4954-9E0E-3994B04098E1}' />
    </worksheet>
    <worksheet name='Endgame State'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Offensive Picklist Calculation' datatype='real' name='[Calculation_441915768766627842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: SUM(IIF([Drivetrain] == &quot;Swerve&quot;, 50, 0)) + AVG([Calculation_1113796536768524290]) + AVG([Teleop Coral Scores (copy)_1113796536767520769]) + (AVG([Calculation_1113796536777392138])/2) }' />
            </column>
            <column caption='Deep Climbs' datatype='integer' name='[Calculation_441915768767492099]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 3, 1, 0)) }' />
            </column>
            <column caption='Shallow Climbs' datatype='integer' name='[Deep Climbs (copy)_441915768768069637]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 2, 1, 0)) }' />
            </column>
            <column caption='Barge Parks' datatype='integer' name='[Deep Climbs (copy)_441915768768135174]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM(IIF([Endgame State] == 1, 1, 0)) }' />
            </column>
            <column datatype='string' name='[Drivetrain]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536777392138]' derivation='Avg' name='[avg:Calculation_1113796536777392138:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_441915768767492099]' derivation='Avg' name='[avg:Calculation_441915768767492099:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deep Climbs (copy)_441915768768069637]' derivation='Avg' name='[avg:Deep Climbs (copy)_441915768768069637:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deep Climbs (copy)_441915768768135174]' derivation='Avg' name='[avg:Deep Climbs (copy)_441915768768135174:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_441915768766627842]' derivation='Sum' name='[sum:Calculation_441915768766627842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768135174:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768069637:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_441915768767492099:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768135174:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768069637:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_441915768767492099:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='3'>
            <groupfilter function='empty-level' member='[none:Team #:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='false' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_441915768766627842:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_441915768767492099:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]' value='' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768069637:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Deep Climbs (copy)_441915768768135174:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EEB36227-19AD-4922-A7ED-E20AD8A5A3D5}' />
    </worksheet>
    <worksheet name='First Pick List'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Offensive Picklist Calculation' datatype='real' name='[Calculation_441915768766627842]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: SUM(IIF([Drivetrain] == &quot;Swerve&quot;, 50, 0)) + AVG([Calculation_1113796536768524290]) + AVG([Teleop Coral Scores (copy)_1113796536767520769]) + (AVG([Calculation_1113796536777392138])/2) }' />
            </column>
            <column datatype='string' name='[Drivetrain]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_441915768766627842]' derivation='Sum' name='[sum:Calculation_441915768766627842:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Team #:ok]' />
              <groupfilter function='empty-level' member='[none:Team #:ok]' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_441915768766627842:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_441915768766627842:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{775F5B93-1F8F-4BC6-BB16-3716025870B0}' />
    </worksheet>
    <worksheet name='Min and Max Coral Scores'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536768524290]' derivation='Max' name='[max:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536768524290]' derivation='Min' name='[min:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[min:Calculation_1113796536768524290:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[max:Calculation_1113796536768524290:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[min:Calculation_1113796536768524290:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[max:Calculation_1113796536768524290:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='3'>
            <groupfilter function='empty-level' member='[none:Team #:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='false' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' value='39' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='25' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='23' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='Min + Max Scores'>
              <formatted-text>
                <run>Min + Max Scores</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{6BEC393D-9ADF-48E9-9EA7-8AC73AAE4475}' />
    </worksheet>
    <worksheet name='Pit Scouting Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Defensive Specialist Game Piece Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Defensive Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Coral Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.9'>
              <calculation class='tableau' formula='0.9' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Algae Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Non-Potato Scoring Element Threshold' datatype='integer' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
            <column caption='Algae Specialist Game Piece Threshold' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column datatype='string' name='[Autos]' role='dimension' type='nominal' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Team Role' datatype='string' default-type='ordinal' name='[Calculation_1113796536792510486]' role='measure' type='nominal'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: &#13;&#10;IF AVG([Played Defense]) &gt; [Parameters].[Parameter 2] and AVG([Calculation_1113796536768524290]) + avg([Calculation_1113796536793362455]) &lt; [Parameters].[Parameter 1]&#13;&#10;THEN &quot;Defensive Specialist&quot;&#13;&#10;ELSEIF AVG([Calculation_1113796536794533912]) &gt; [Parameters].[Parameter 3] and AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 5]&#13;&#10;THEN &quot;Coral Specialist&quot;&#13;&#10;ELSEIF AVG([Coral Scoring Percentage (copy)_1113796536794886169]) &gt; [Parameters].[Parameter 4] and AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 6]&#13;&#10;THEN &quot;Algae Specialist&quot;&#13;&#10;ELSEIF AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 5]&#13;&#10;THEN &quot;Hybrid Robot&quot;&#13;&#10;ELSE &quot;Potato&quot;&#13;&#10;END&#13;&#10;}' />
            </column>
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column caption='Coral Scoring Percentage' datatype='real' name='[Calculation_1113796536794533912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536768524290]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
            </column>
            <column caption='Algae Scoring Percentage' datatype='real' name='[Coral Scoring Percentage (copy)_1113796536794886169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536793362455]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
            </column>
            <column datatype='string' name='[Drivetrain Motor]' role='dimension' type='nominal' />
            <column datatype='string' name='[Drivetrain]' role='dimension' type='nominal' />
            <column datatype='string' name='[How To Feed Robot]' role='dimension' type='nominal' />
            <column datatype='real' name='[Length]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column caption='Floor Algae' datatype='string' name='[Pickup Floor Algae]' role='dimension' type='nominal' />
            <column caption='Floor Coral' datatype='string' name='[Pickup Floor Coral]' role='dimension' type='nominal' />
            <column datatype='real' name='[Played Defense]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Team number]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column datatype='real' name='[Weight]' role='measure' type='quantitative' />
            <column datatype='real' name='[Width]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1113796536792510486]' derivation='Attribute' name='[attr:Calculation_1113796536792510486:nk]' pivot='key' type='nominal' />
            <column caption='Comment1' datatype='string' name='[comment]' role='dimension' type='nominal' />
            <column-instance column='[Autos]' derivation='None' name='[none:Autos:nk]' pivot='key' type='nominal' />
            <column-instance column='[Drivetrain Motor]' derivation='None' name='[none:Drivetrain Motor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Drivetrain]' derivation='None' name='[none:Drivetrain:nk]' pivot='key' type='nominal' />
            <column-instance column='[How To Feed Robot]' derivation='None' name='[none:How To Feed Robot:nk]' pivot='key' type='nominal' />
            <column-instance column='[Length]' derivation='None' name='[none:Length:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Pickup Floor Algae]' derivation='None' name='[none:Pickup Floor Algae:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pickup Floor Coral]' derivation='None' name='[none:Pickup Floor Coral:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Team number]' derivation='None' name='[none:Team number:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weight]' derivation='None' name='[none:Weight:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Width]' derivation='None' name='[none:Width:ok]' pivot='key' type='ordinal' />
            <column-instance column='[comment]' derivation='None' name='[none:comment:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='3'>
            <groupfilter function='empty-level' member='[none:Team #:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='false' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='300' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='26' />
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team number:ok]' value='108' />
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Drivetrain Motor:nk]' value='128' />
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:How To Feed Robot:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='0' />
            <format attr='text-align' value='left' />
            <format attr='wrap' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Autos:nk]' />
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team number:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Width:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Length:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Weight:ok] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Drivetrain:nk] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Drivetrain Motor:nk] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Pickup Floor Coral:nk] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Pickup Floor Algae:nk] / ([federated.1oijtqs0y37ubd17adrdr06iia96].[none:How To Feed Robot:nk] / [federated.1oijtqs0y37ubd17adrdr06iia96].[none:comment:nk])))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{0E88722A-093D-4645-BF2D-45017B3FEE0B}' />
    </worksheet>
    <worksheet name='Team Role'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Defensive Specialist Game Piece Threshold' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Defensive Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Coral Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.9'>
              <calculation class='tableau' formula='0.9' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Algae Specialist Threshold' datatype='real' default-format='p0%' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.5'>
              <calculation class='tableau' formula='0.5' />
              <range max='1.0' min='0.0' />
            </column>
            <column caption='Non-Potato Scoring Element Threshold' datatype='integer' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
            </column>
            <column caption='Algae Specialist Game Piece Threshold' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Teleop Coral Points' datatype='integer' name='[Calculation_1113796536774176771]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #], [Match Level]: Sum([Teleop Coral Level 4]*5 + [Teleop Coral Level 3]*4 + [Teleop Coral Level 2]*3 + [Teleop Coral Level 1]*2)}' />
            </column>
            <column caption='Auto Coral Points' datatype='integer' name='[Calculation_1113796536774799364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Coral Level 1]*3 + [Auto Coral Level 2]*4 + [Auto Coral Level 3]*6 + [Auto Coral Level 4]*7)}' />
            </column>
            <column caption='Auto Leave Points' datatype='integer' name='[Calculation_1113796536775335941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #], [Team #], [Match Level]: Sum(IIF([Teleop Coral Scores (copy)_1113796536767520769] &gt; 0, 3, 0))}' />
            </column>
            <column caption='Auto Algae Points' datatype='integer' name='[Calculation_1113796536775782406]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Algae Net]*4 + [Auto Algae Processor]*6)}' />
            </column>
            <column caption='Auto Points' datatype='integer' name='[Calculation_1113796536775974919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536774799364]+[Calculation_1113796536775335941]+[Calculation_1113796536775782406]' />
            </column>
            <column caption='Teleop Algae Points' datatype='integer' name='[Calculation_1113796536776224776]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Match Level], [Team #]: Sum([Teleop Algae Net]*4 + [Teleop Algae Processor]*6)}' />
            </column>
            <column caption='Teleop Points' datatype='integer' name='[Calculation_1113796536777318409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536776224776]+[Calculation_1113796536774176771]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Total Points' datatype='integer' name='[Calculation_1113796536779051020]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536775974919]+[Calculation_1113796536777318409]+[Calculation_1113796536777392138]' />
            </column>
            <column caption='Team Role' datatype='string' default-type='ordinal' name='[Calculation_1113796536792510486]' role='measure' type='nominal'>
              <calculation class='tableau' formula='{ INCLUDE [Team #]: &#13;&#10;IF AVG([Played Defense]) &gt; [Parameters].[Parameter 2] and AVG([Calculation_1113796536768524290]) + avg([Calculation_1113796536793362455]) &lt; [Parameters].[Parameter 1]&#13;&#10;THEN &quot;Defensive Specialist&quot;&#13;&#10;ELSEIF AVG([Calculation_1113796536794533912]) &gt; [Parameters].[Parameter 3] and AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 5]&#13;&#10;THEN &quot;Coral Specialist&quot;&#13;&#10;ELSEIF AVG([Coral Scoring Percentage (copy)_1113796536794886169]) &gt; [Parameters].[Parameter 4] and AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 6]&#13;&#10;THEN &quot;Algae Specialist&quot;&#13;&#10;ELSEIF AVG([Calculation_1113796536793362455])+AVG([Calculation_1113796536768524290]) &gt; [Parameters].[Parameter 5]&#13;&#10;THEN &quot;Hybrid Robot&quot;&#13;&#10;ELSE &quot;Potato&quot;&#13;&#10;END&#13;&#10;}' />
            </column>
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column caption='Coral Scoring Percentage' datatype='real' name='[Calculation_1113796536794533912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536768524290]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
            </column>
            <column caption='Algae Scoring Percentage' datatype='real' name='[Coral Scoring Percentage (copy)_1113796536794886169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #],[Team #], [Match Level]: SUM([Calculation_1113796536793362455]/([Calculation_1113796536793362455]+[Calculation_1113796536768524290]))}' />
            </column>
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column datatype='real' name='[Played Defense]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536792510486]' derivation='Attribute' name='[attr:Calculation_1113796536792510486:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1113796536779051020]' derivation='Avg' name='[avg:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='3'>
            <groupfilter function='empty-level' member='[none:Team #:ok]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='false' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]' value='58' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='26' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]' />
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]</cols>
      </table>
      <simple-id uuid='{9322875D-E731-4419-9D2A-A16A66A63516}' />
    </worksheet>
    <worksheet name='Total Coral Scoring'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536766529536]' derivation='Avg' name='[avg:Calculation_1113796536766529536:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Teleop Coral Scores (copy)_1113796536767520769]' derivation='Avg' name='[avg:Teleop Coral Scores (copy)_1113796536767520769:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536766529536:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Scores (copy)_1113796536767520769:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536766529536:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Teleop Coral Scores (copy)_1113796536767520769:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]' />
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='16' />
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='#aa007f' />
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{D7EBBAB7-0D90-4C00-895C-C851D4B62974}' />
    </worksheet>
    <worksheet name='Total Points Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Points' datatype='integer' name='[Calculation_1113796536774176771]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #], [Match Level]: Sum([Teleop Coral Level 4]*5 + [Teleop Coral Level 3]*4 + [Teleop Coral Level 2]*3 + [Teleop Coral Level 1]*2)}' />
            </column>
            <column caption='Auto Coral Points' datatype='integer' name='[Calculation_1113796536774799364]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Coral Level 1]*3 + [Auto Coral Level 2]*4 + [Auto Coral Level 3]*6 + [Auto Coral Level 4]*7)}' />
            </column>
            <column caption='Auto Leave Points' datatype='integer' name='[Calculation_1113796536775335941]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Match #], [Team #], [Match Level]: Sum(IIF([Teleop Coral Scores (copy)_1113796536767520769] &gt; 0, 3, 0))}' />
            </column>
            <column caption='Auto Algae Points' datatype='integer' name='[Calculation_1113796536775782406]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: Sum([Auto Algae Net]*4 + [Auto Algae Processor]*6)}' />
            </column>
            <column caption='Auto Points' datatype='integer' name='[Calculation_1113796536775974919]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536774799364]+[Calculation_1113796536775335941]+[Calculation_1113796536775782406]' />
            </column>
            <column caption='Teleop Algae Points' datatype='integer' name='[Calculation_1113796536776224776]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Match Level], [Team #]: Sum([Teleop Algae Net]*4 + [Teleop Algae Processor]*6)}' />
            </column>
            <column caption='Teleop Points' datatype='integer' name='[Calculation_1113796536777318409]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536776224776]+[Calculation_1113796536774176771]' />
            </column>
            <column caption='Barge Points' datatype='integer' name='[Calculation_1113796536777392138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Team #], [Match #], [Match Level]: Sum(iif([Endgame State]==3, 12, 0) + IIF([Endgame State]==2, 6, 0) + IIF([Endgame State]==1, 2, 0))}' />
            </column>
            <column caption='Total Coral Points' datatype='integer' name='[Calculation_1113796536778932235]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536774176771]+[Calculation_1113796536774799364]' />
            </column>
            <column caption='Total Points' datatype='integer' name='[Calculation_1113796536779051020]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1113796536775974919]+[Calculation_1113796536777318409]+[Calculation_1113796536777392138]' />
            </column>
            <column datatype='real' name='[Cycle Time]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Endgame State]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536774176771]' derivation='Avg' name='[avg:Calculation_1113796536774176771:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536774799364]' derivation='Avg' name='[avg:Calculation_1113796536774799364:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536775335941]' derivation='Avg' name='[avg:Calculation_1113796536775335941:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536775782406]' derivation='Avg' name='[avg:Calculation_1113796536775782406:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536775974919]' derivation='Avg' name='[avg:Calculation_1113796536775974919:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536776224776]' derivation='Avg' name='[avg:Calculation_1113796536776224776:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536777318409]' derivation='Avg' name='[avg:Calculation_1113796536777318409:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536777392138]' derivation='Avg' name='[avg:Calculation_1113796536777392138:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536778932235]' derivation='Avg' name='[avg:Calculation_1113796536778932235:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536779051020]' derivation='Avg' name='[avg:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cycle Time]' derivation='Avg' name='[avg:Cycle Time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1113796536779051020]' derivation='Avg' name='[pcrk:avg:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance aggregation-param='90' column='[Calculation_1113796536779051020]' derivation='Percentile' name='[prc90:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536779051020]' derivation='Avg' name='[rank:avg:Calculation_1113796536779051020:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775335941:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775782406:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774799364:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775974919:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536776224776:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774176771:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777318409:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[prc90:Calculation_1113796536779051020:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775335941:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775782406:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774799364:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536775974919:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536776224776:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536774176771:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777318409:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536777392138:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Cycle Time:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536778932235:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536779051020:qk]&quot;</bucket>
              <bucket>&quot;[federated.1oijtqs0y37ubd17adrdr06iia96].[rank:avg:Calculation_1113796536779051020:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Match #:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Team #:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</column>
            <column>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='111' />
            <format attr='font-size' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' value='16' />
            <format attr='text-format' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]' value='' />
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='48' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='on' />
            <format attr='text-align' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='center' />
            <format attr='vertical-align' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='center' />
            <format attr='text-orientation' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='0' />
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' value='normal' />
            <format attr='font-size' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]' value='16' />
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536779051020:qk]' value='normal' />
            <format attr='font-size' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='16' />
            <format attr='font-weight' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='bold' />
            <format attr='color' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='#aa007f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1oijtqs0y37ubd17adrdr06iia96].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</rows>
        <cols>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{AEC0AF9F-FEB8-4438-9C7B-0CF1391E4DE3}' />
    </worksheet>
    <worksheet name='coral score sum'>
      <table>
        <view>
          <datasources>
            <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
          </datasources>
          <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
            <column datatype='integer' name='[Auto Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Auto Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Teleop Coral Scores' datatype='integer' name='[Calculation_1113796536766529536]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Teleop Coral Level 1] + [Teleop Coral Level 2] + [Teleop Coral Level 3] + [Teleop Coral Level 4])}' />
            </column>
            <column caption='Total Coral Scores' datatype='integer' name='[Calculation_1113796536768524290]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Teleop Coral Scores (copy)_1113796536767520769] + [Calculation_1113796536766529536]' />
            </column>
            <column caption='Total Algae Scores' datatype='integer' name='[Calculation_1113796536793362455]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Match #], [Team #], [Match Level]: SUM([Auto Algae Net] + [Auto Algae Processor] + [Teleop Algae Net] + [Teleop Algae Processor])}' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Match Level]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Teleop Algae Net]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Algae Processor]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Teleop Coral Level 4]' role='measure' type='quantitative' />
            <column caption='Auto Coral Scores' datatype='integer' name='[Teleop Coral Scores (copy)_1113796536767520769]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE [Team #], [Match #]: Sum([Auto Coral Level 1] + [Auto Coral Level 2] + [Auto Coral Level 3] + [Auto Coral Level 4])}' />
            </column>
            <column-instance column='[Calculation_1113796536768524290]' derivation='Avg' name='[avg:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1113796536768524290]' derivation='Sum' name='[sum:Calculation_1113796536768524290:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113796536793362455]' derivation='Sum' name='[sum:Calculation_1113796536793362455:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' direction='DESC' using='[federated.1oijtqs0y37ubd17adrdr06iia96].[avg:Calculation_1113796536768524290:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' value='25' />
            <format attr='height' field='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]' value='42' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536768524290:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536793362455:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok] / [federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok])</rows>
        <cols>([federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536768524290:qk] + [federated.1oijtqs0y37ubd17adrdr06iia96].[sum:Calculation_1113796536793362455:qk])</cols>
      </table>
      <simple-id uuid='{A73751BB-3CB2-4EF9-8EA2-89157E2C7EA9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Alliance Selection'>
      <style />
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' preset-index='11' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98118' id='8' param='horz' type-v2='layout-flow' w='98546' x='727' y='941'>
            <zone h='98118' id='6' type-v2='layout-basic' w='98546' x='727' y='941'>
              <zone h='98118' id='3' name='AS Barge Ability' w='30818' x='727' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98118' id='5' name='AS Coral Scoring' w='27180' x='47455' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98118' id='10' name='AS Algae Scoring' w='24638' x='74635' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98118' id='12' name='First Pick List' w='15910' x='31545' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='61' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98118' id='3' is-fixed='true' name='AS Barge Ability' w='30818' x='727' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='12' is-fixed='true' name='First Pick List' w='15910' x='31545' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='5' is-fixed='true' name='AS Coral Scoring' w='27180' x='47455' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98118' id='10' is-fixed='true' name='AS Algae Scoring' w='24638' x='74635' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DBFCE075-B9A5-4CDB-800F-6C762B7C5ECF}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Match Preview'>
      <style />
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' preset-index='11' sizing-mode='fixed' />
      <datasources>
        <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
      </datasources>
      <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
        <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
        <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='94353' id='24' param='vert' type-v2='layout-flow' w='98546' x='727' y='4706'>
            <zone h='94353' id='20' type-v2='layout-basic' w='98546' x='727' y='4706'>
              <zone h='71160' id='7' param='horz' type-v2='layout-flow' w='98546' x='727' y='4706'>
                <zone h='71160' id='5' type-v2='layout-basic' w='84001' x='727' y='4706'>
                  <zone h='23756' id='3' name='Min and Max Coral Scores' w='41999' x='727' y='4706'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='24454' id='9' name='Average Points' w='84001' x='727' y='51412'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='23765' id='10' name='Team Role' w='42002' x='42726' y='4706'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='22941' id='17' name='Coral Vs Algae' w='42002' x='42726' y='28471'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='22950' id='49' name='Endgame State' w='41999' x='727' y='28462'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='71160' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='14545' x='84728' y='4706'>
                  <zone h='3176' id='8' name='Min and Max Coral Scores' pane-specification-id='3' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type-v2='color' w='14545' x='84728' y='4706'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3176' id='11' name='Team Role' pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]' type-v2='color' w='14545' x='84728' y='7882'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3176' id='18' name='Coral Vs Algae' pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type-v2='color' w='14545' x='84728' y='11058'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3176' id='13' name='Average Points' pane-specification-id='1' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type-v2='color' w='14545' x='84728' y='14234'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5765' id='12' mode='typeinlist' name='Team Role' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type-v2='filter' values='database' w='14545' x='84728' y='17410'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='23193' id='16' param='horz' type-v2='layout-flow' w='98546' x='727' y='75866'>
                <zone h='23193' id='15' name='Pit Scouting Data' w='98546' x='727' y='75866'>
                  <layout-cache fixed-size-w='1077' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='3765' id='80' type-v2='text' w='98546' x='727' y='941'>
            <formatted-text>
              <run fontalignment='1' fontsize='12'>Qx - Alliance</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='92' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98118' id='91' param='vert' type-v2='layout-flow' w='98546' x='727' y='941'>
                <zone h='3765' id='80' type-v2='text' w='98546' x='727' y='941'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='12'>Qx - Alliance</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='194' h='23756' id='3' is-fixed='true' name='Min and Max Coral Scores' w='41999' x='727' y='4706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3176' id='8' name='Min and Max Coral Scores' pane-specification-id='3' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type-v2='color' w='14545' x='84728' y='4706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5765' id='12' mode='checkdropdown' name='Team Role' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type-v2='filter' values='database' w='14545' x='84728' y='17410'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='194' h='23765' id='10' is-fixed='true' name='Team Role' w='42002' x='42726' y='4706'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3176' id='11' name='Team Role' pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]' type-v2='color' w='14545' x='84728' y='7882'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='22950' id='49' is-fixed='true' name='Endgame State' w='41999' x='727' y='28462'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='187' h='22941' id='17' is-fixed='true' name='Coral Vs Algae' w='42002' x='42726' y='28471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3176' id='18' name='Coral Vs Algae' pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type-v2='color' w='14545' x='84728' y='11058'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='200' h='24454' id='9' is-fixed='true' name='Average Points' w='84001' x='727' y='51412'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3176' id='13' name='Average Points' pane-specification-id='1' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type-v2='color' w='14545' x='84728' y='14234'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='23193' id='15' is-fixed='true' name='Pit Scouting Data' w='98546' x='727' y='75866'>
                  <layout-cache fixed-size-w='1077' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{50199279-996B-436F-9D47-C3F2427F5D75}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Post Match Review'>
      <style />
      <size maxheight='850' maxwidth='1100' minheight='850' minwidth='1100' preset-index='11' sizing-mode='fixed' />
      <datasources>
        <datasource caption='full+' name='federated.1oijtqs0y37ubd17adrdr06iia96' />
      </datasources>
      <datasource-dependencies datasource='federated.1oijtqs0y37ubd17adrdr06iia96'>
        <column aggregation='Sum' datatype='integer' name='[Match #]' role='dimension' type='ordinal' />
        <column aggregation='Sum' datatype='integer' name='[Team #]' role='dimension' type='ordinal' />
        <column-instance column='[Match #]' derivation='None' name='[none:Match #:ok]' pivot='key' type='ordinal' />
        <column-instance column='[Team #]' derivation='None' name='[none:Team #:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98118' id='8' param='horz' type-v2='layout-flow' w='98546' x='727' y='941'>
            <zone h='98118' id='6' type-v2='layout-basic' w='84001' x='727' y='941'>
              <zone h='49059' id='3' name='Cycle Type/Time Breakdown' w='40546' x='727' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49059' id='11' name='Total Points Breakdown' w='84001' x='727' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49059' id='16' name='Accuracy Breakdown' w='43455' x='41273' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98118' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='14545' x='84728' y='941'>
              <zone h='83295' id='9' mode='radiolist' name='Cycle Type/Time Breakdown' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type-v2='filter' values='database' w='14545' x='84728' y='941'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12235' id='10' mode='slider' name='Cycle Type/Time Breakdown' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]' type-v2='filter' values='database' w='14545' x='84728' y='84236'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2588' id='12' name='Total Points Breakdown' pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536779051020:qk:4]' type-v2='color' w='14545' x='84728' y='96471'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='47' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='83295' id='9' mode='dropdown' name='Cycle Type/Time Breakdown' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type-v2='filter' values='database' w='14545' x='84728' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12235' id='10' mode='slider' name='Cycle Type/Time Breakdown' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]' type-v2='filter' values='database' w='14545' x='84728' y='84236'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='3' is-fixed='true' name='Cycle Type/Time Breakdown' w='40546' x='727' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='16' is-fixed='true' name='Accuracy Breakdown' w='43455' x='41273' y='941'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49059' id='11' is-fixed='true' name='Total Points Breakdown' w='84001' x='727' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2588' id='12' name='Total Points Breakdown' pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536779051020:qk:4]' type-v2='color' w='14545' x='84728' y='96471'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4A6B3D69-D892-44E1-8BE2-1C67DB20DAE3}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Total Coral Scoring'>
      <cards>
        <edge name='left'>
          <strip size='267'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='1' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6131BA7C-307E-40A7-B055-E00CC3242104}' />
    </window>
    <window class='worksheet' name='Min and Max Coral Scores'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card mode='typeinlist' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C6CDBCBA-8A3C-48C8-90AB-120039CA833A}' />
    </window>
    <window class='worksheet' name='coral score sum'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21B77C7A-7019-48A4-A880-D59C48CA8ADE}' />
    </window>
    <window class='worksheet' name='Coral Scoring By Level'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='1' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1CF9A03A-AB16-4576-A8E7-3FD69BD7CAB7}' />
    </window>
    <window class='worksheet' name='Coral Points Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536778932235:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{62426E02-E867-4928-98B2-74B3874C6AE0}' />
    </window>
    <window class='worksheet' name='Average Points'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A7A3DAC2-7825-4CD9-B556-00F4D3E86E25}' />
    </window>
    <window class='worksheet' name='Team Role'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='142'>
            <card mode='typeinlist' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{26F3791D-A082-4B99-B32A-B0CDF6F843F6}' />
    </window>
    <window class='worksheet' name='Endgame State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5530ADDD-CA96-46E3-ABE4-9DB3AD34E679}' />
    </window>
    <window class='worksheet' name='Coral Vs Algae'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9ED56214-9EAA-4057-9FF1-350CB30B2BF2}' />
    </window>
    <window class='dashboard' maximized='true' name='Match Preview'>
      <viewpoints>
        <viewpoint name='Average Points'>
          <zoom type='entire-view' />
          <highlight field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Coral Vs Algae'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Endgame State' />
        <viewpoint name='Min and Max Coral Scores'>
          <highlight field='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Pit Scouting Data'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Team Role'>
          <zoom type='entire-view' />
          <highlight field='[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Calculation_1113796536792510486:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{7A3404A0-7C70-423C-8EF5-D9CDEE515FD9}' />
    </window>
    <window class='worksheet' name='Cards and Bad Events'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{21840578-7132-45B7-9450-BC4FF7503E31}' />
    </window>
    <window class='worksheet' name='Pit Scouting Data'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='48'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Autos:nk]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:comment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4B93E6A-D62A-4B60-AE53-902C3DF7F2DB}' />
    </window>
    <window class='worksheet' name='AS Barge Ability'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EBEE7186-CCC9-483D-AC65-7FE17A02B058}' />
    </window>
    <window class='worksheet' name='AS Coral Scoring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[pcrk:avg:Calculation_1113796536768524290:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2BC28539-8AEB-4FB9-8F6C-0D140233751D}' />
    </window>
    <window class='worksheet' name='AS Algae Scoring'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[usr:Calculation_441915768765501440:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7649D0AD-F63E-4917-ABF9-0F91CC3A7A0B}' />
    </window>
    <window class='worksheet' name='First Pick List'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1EB48EC-0F46-4BF6-9221-D7317BF3D63E}' />
    </window>
    <window class='worksheet' name='Cycle Time Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Was Defended:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F033365-73BC-4CF2-85F0-B7B341E234D9}' />
    </window>
    <window class='dashboard' name='Alliance Selection'>
      <viewpoints>
        <viewpoint name='AS Algae Scoring' />
        <viewpoint name='AS Barge Ability' />
        <viewpoint name='AS Coral Scoring' />
        <viewpoint name='First Pick List' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{33B7A670-BF53-4E6B-8F29-2C0F8543F1FA}' />
    </window>
    <window class='worksheet' name='Bad Event Comments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[attr:Egregiously Bad Event:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Scouter Name:nk]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA26D2A7-3E5D-4FA3-90BB-0D6080017824}' />
    </window>
    <window class='worksheet' name='Coral Scoring Percentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D67BC296-D5AA-4A44-94CC-739F6DAD65FD}' />
    </window>
    <window class='worksheet' name='Algae Net Vs Processor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[:Measure Names]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15620FB4-1945-4DC8-83EE-6DB99ACEB295}' />
    </window>
    <window class='worksheet' name='Cycle Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD86B3D6-B7CE-4DEB-AA36-F3893E7F11CB}' />
    </window>
    <window class='dashboard' name='Post Match Review'>
      <viewpoints>
        <viewpoint name='Accuracy Breakdown' />
        <viewpoint name='Cycle Type/Time Breakdown' />
        <viewpoint name='Total Points Breakdown'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E59C5AD2-F0FD-4C35-B4CC-95B5B2387107}' />
    </window>
    <window class='worksheet' name='Total Points Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{F34641BE-3B56-4AF0-9D16-A4CD93134B84}' />
    </window>
    <window class='worksheet' name='Cycle Type/Time Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[cnt:Cycle Time:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Cycle Type (teleop.csv):nk]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8295933-F685-48A9-AB28-26DC3B8C6774}' />
    </window>
    <window class='worksheet' name='Accuracy Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Match #:ok]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA66CE91-0236-4EC1-8E8E-6E6D683128C6}' />
    </window>
    <window class='worksheet' name='All Comments'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Comment:nk]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Scouter Name:nk]</field>
            <field>[federated.1oijtqs0y37ubd17adrdr06iia96].[none:Team #:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA9F314A-97FC-42B1-8751-B1E1343F2072}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AS Algae Scoring' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d2Ad1Zn//Zl2e5Wurrqs3ixb7g1jMMb0FkoCgZDels3mzaZsyW+zfZPN
      loTNQrIkdLJLCYEAxmBMMe5dbpItWb1flXt1e5uZ9w8JV8Fikl1ro/v5SzNz7syZ0XlOfb7P
      EXRd18mQYRYiCIIgXuxMZMhwMckYQIZZTcYAMsxqMgaQYVaTMYAMs5qMAWSY1WQMIMOsJmMA
      GWY1GQPIMKvJGECGWY18sTMw09ETvbz44M/49bthvvDwj7ksS/gt7+hn4z//Nf/V5CMSjSMa
      zbg8eXzij/+FK8umeb6eJOSPY3I5MLxfdRXt4fmfbkS55gZumFt4qlbT1SS7H/8O/7DVzpf/
      6Mtcs6AI6QOzn6R963M88IsXGdbMmOx5XHLj3dy6bh7DL/0F3366A5dFAcCz4G6+95Va3njg
      QV480IdkUHCVLuHjd9/JispshKSfQ2+9wLOv7mA4YWXJNZ/lnitlnvjrB9jhi6CIAuBm3X3f
      4sa8bh78iwfh+q/xhx9bgSvWy7PPvYZxyUp47SGePzpKOJJAMpnJ8hbyiW98G/3Vn3DA+0m+
      daOXrc++QG/ecj62vgELQLCFh77/IO/0+JElEXBx2Re/zr2XVKCc8w0zBvCB6ER7OzgmFrC2
      YTvb9o6y5uocfjsTcHPtt37MteOtPPTYBjxX3MHNC4qQ3ie1mmriga+/xpX3f4+lWe+XTZVo
      KIIxpZ51Wkv7OHY8wKKyEro7+onNK8Qmf1DuddLJCAWX3MOffPJG5IF3ePDJl9hTUkC+qlLx
      se/yo7sbTicPdxALe7n5z/6Q22od7HvhIV56/R0q824idPBlfrXNzw3f+CeWFxoZ6R1G1wJE
      Jkq576dfZ7XdfOo2ox1tGG0pjh5soXP1XBZa00QjYfSkg9v+9CfcPHqcBx57jeKrP84N8woQ
      GWZDOEjYngY0EpEI0USKU05teppIsIjP/+jvWed1fOB/I2MAH4SeYrCvH7utiFU1i/nhzj2M
      rb8ec/dOXulycOvauSixQbZuaqXoyuXkhHvYvmU7HeMpHIXFVFYtZXmt50M+TCXQeZi3t+9j
      OGaieullrKjQ2fLiZo76Wog8+gB9K6/iykY7e1/aQKs/gWgtZO3N11KlTH/H9PBB2tTLuHol
      bDrWSSS2CJv9fRKfiyCSlVNGcfYBxsIRcv+b5KLBSXF5GVrvKLFYjGP7duJZ/kcsLc9CEaCg
      qhz8B97398aCWi63RnjnSB8LV5g+XB5/B2TGAB9EMkx3xzCyu4C8JYvwdmynbRQUYZydz2ym
      PQnhniZeOdqJFg7w7m+eYv+YhfrG+aROvM47reMf/lEjbbz40usMGwqpLTaz+9Wn2dmRorS+
      jByrh+rGxdQUZSGpcQzZFcxftJDc4E5+8frx971nz56tROsWsKS8BLWnl65Y/MO/u64xOtxO
      vz9BrtOBlIpy5Pl/4r777uO+++7jr547fFZyNT5OW3MbiiUfk1FnIhQlJ8+L8bwG5zg/+9Y3
      pu7zQzZ3jkyeFqzUr2skvmUnHckPn833p41Hv/vtqed8n43HB1GnSZVpAT6AWHCMlr4eDF4I
      hLx43B0cbu5j2ZpLuLLoN2zZP8iS/nYKahZj1wbo7I2z6nO3sqZURmh+lr4P7WiuMdZ/koDi
      4for1lNpmyDV0097V5Al11aQa22jbtEK6rMgOtzHkS2/Ym//BFH/EMlLrwHs598y3cOOrT2U
      XOPAr0fIj7ezpznIcu80ac+h7Y2H+f/efR6bp4z1t97D8ko3XU1m6m64h3+4ow4AQTFDugfo
      5Jm/+RbPpWO45l7PH9y3nhyLgCzDRDiMpnsQzzKCSj79V19mhc0EiBgtZoLdk1cM3pVcP28j
      L75Vwwd3XD4M5dz5Z5/hshw7IGIwm6at7TMG8AEER47S1TyKGn+R7p0QSthxHD7K2OprWLSm
      gbc2bkDzilStLsGkBBCFNNFYHE0zEounL+BJAorBiJqIMRFNkDbECERjKEYjEjoQJ55Ioeky
      gzue52D2LfzzX6xi9NV/5K97p2/EEx1NbAu6yN72CP+xDVKqn96dR/ji5YX8dx2MqvWf51N3
      30yu9cwsCshGC3b7GQYUBijjE9/7NnX9G3hhf5pwJILudVFdXc9vDu6mY1EeZXaRyER4ahAv
      Y7bZsJ8xBjiNQu1Vt7Dpe89wPDefpRfwBc9HmnrOBxt8xgA+gJHW41jWfJ4//srluASNvqYX
      ePylVobH11E59zI8D/0dza4buLwwB4vNSk1VFm889a+cKC4lNRiFImDkKE+9cozFt32Cuvet
      1gRcxXOZl9PCa0/9hLdFSFkLua6hBLMYpaR0jJf+48cMrruZZfnlGDa/yROP9uEK+Eibp2tm
      knS1NGNZdid/99XLkYFE+2/41g+OcHJ0EcHdWwmVrGRNmYU9m19GqlnPirq8Dy4M6TgdW/6T
      fx2eHNM4yi7nzvWuqYsidWs/SSL5NC89+zzGT99J/WU30vXcyzzzs/sxmSwUVKzgqksloJvf
      PPAT9hhkwEbj9R+j8YxhiexqYPHcR/jnd4ZZeu2H/U/5OfDaM4y3voMnv4Gr1uYBfWx46AEO
      WYyAlYarb2J53ghvb+ykbv3V5I+9PfnlM4qw9yfk62JcyKE4x4qITio2wfBIEKe3CKuSZrD9
      OFFzPsUFORhIMdrbxoA/gU6CbU//FONN/8KXFgmc6Bonp6KKLMMZN0/FGPKNIzs9ZNuMCGjE
      J0bp7R8iqsq4c4vI9ziQBZ2JwZP0jkSxeOdQ7Ibekz1ERTMuq0BEzqE2z4ivfwwhKxuPzYSA
      Smi4F7+YQ0nOVDWeDtLdPo6rJJfo8AApex4FDpnh3i4EdzF5bgsiGtGAj/G4gjcnG8MZU1MR
      XzttA6FTxwZHIVVz7Pj7xhA9HrKtBtToBH0D41jzi8ixSEQCPvoHRoipEq7cEgqzBQY7exmL
      JKbuouCZU06uOcHISAhHbjE2RSMy3kvHYIq8OUV47CaEVJTBYT8Gdw5ZVgMCScb7+ggZcinx
      GAgM99E3PIEKGCzZlJRkMdHfy2goPjUzJJNVXEaeNU5fdxB3cTHWeD/G7FIhYwC/I7REiN0v
      /DtPbDpORDew8Lqv8LmPLcL5gdOOGS4mgiBkDCDD7CWjCc4w63nfcU9vby+hUOj9Lv9eowOZ
      hnF28L4GUFxc/L+ZjxnFj5/ZwlOv7bvY2cjwv0CmC5RhVpMxgAyzmo+0EKarKRLJNMgGTIoE
      uo6mpkmpKqJkQJFFdF1H11RSqRSaBqKsoCgyIjpqOkUynQZEZEVBlkQEITNd+EFIkoQs6CTS
      2lnnRUnGeMZUq67rpFJpVESMiogoCICOmlZJqjqCIKAoEiKgptOkzr7djEEQBBRZQhRA01RS
      aZ2zR2WT7yELoKoqKXXyuiCIU++nk06lSU/9SJQkDJKArmukUhrvvfaFG4CWoPONJ/nBY8+Q
      uOKHPP6lhUR9rezavoOXtuyi5sY/5atXlqGlYhx56yl+/cZhfKEk1uLF3PWFe2k09fPas8/x
      2qFOUqqZsjW38qVbLyHbnFmUfj8Um5sbb1rHHdZ2vv7LQ/iip0tt/ZrL+cNTftISLkuSR3/2
      PG85GvnJxyrRdAFIcOid3TxxYISiuY3cs7aCHKNOx95d/PTtPkIzbLwvyEYaFjRw28o55Jo0
      2o4e5smNHYycTkFWcQWfua6BGqfIcEc7T206RltIZ96KZdy9qhiXmOLIju38YrsP1ZbNjVcv
      YX2Fg0TAxyub9vFOVwS4YAPQiY+d4N1WjStWVLNx6mx4zEfCXcOismbemzfS1DRpQz6f+Oad
      1HhFNvzom7y6Yw0VC8MINdfy/c81ILa/xV/+Yg+taxew0uz87b/c7yUCJWXF2PUJun2x864e
      fXszX3l7KqW7nD9cK3FgCPJKjBx6/Q0eaAqcSmswu1k818Hbz77M9oCV2+9YwhrvABuGZ1Yz
      4PLmsrLcyBu/2siu4QQmi8JZnlUGO2vme+jevpV/b0twxdoG5pdnM9gKq2tknnvsBZpVD5+5
      vYHGQ1uYaJhDkf8kf/7jHjwNc1lfWcjRwVbgQscAaoz2phZSudXMLXadOu2tv5SrL1mA6wzf
      V9lkZeFlNzC3wIGsRvBPxLHZLNjmLOL6yxpxyBCJhFAlGZP0fnKQDKKcxcp6M4cP9TCS+qCq
      WmHhqiKGd3cxgkC2I8XgyNkFWxGcONRB9g/ESUTH2HIohLdoOqe0i4mAx+EiNtLLwaEYqqYR
      CSdInJnEZsMaC9DUFyCZiHC4ewxZNmJ1ezGPtXNoLEU0MMhrbQI1eWZKTGn2dY4QSKbo6PQx
      oQoYzZNl7oJagMhoNweOd1N19bVktb75wa8hiIikCfcd4dnHnqS16G7++NIiFElCS8dp37+B
      J5/Zx8Ib76Um23KhX2l2IEg0rKkntX8PhyNFXFH6/v8uxVvMZeIgDw2mAAMWxcX1n72Jm0gx
      1t3BLzcd4WTcgBCNEpz6TSqSwFZiAyL/G2/z4RAEJKuD+Y3FLF62GqeY5MDO3fxyWx/jU82A
      JEukkinS6UkP/2hCxOaVUWwK6kSE1NStAtE0Odk2Amqa3nQaHVATKQxGI7Iy+S0vyAA6tj3N
      jg43N/qOcKBthHCglda+MsqLXOc1JbqWpv/Q6zz57FYcaz7HX1/dgFES0JN+jmx8hJ9vFbj9
      y99idU12xiX1fbCV1HNvpcZvRgpYXpRLfp7EgvJR3j06xlnSFtHIsnoX7cc7mBweJNmx8U12
      bARRMlCzdCE3LShgZE8K3WzGDgQB2WwgPBG+GK/2/uigJWK0HO7i+S39RIxObl6/iDVV47zY
      EgVATWsoioIsS4CKyaARjqRJhVNIVRZkJkgDDrPM6GCYRGEOLllGAESDTCKRIJ2atKYL6gIp
      rjIW1JrpPXaUE30BoqO99I2Gma4HmYoM8s7GzdhXfpJ7108WfoDxljd46M0Qn/7mH3J5pvB/
      IGYhwoF+jbqKfBqK3GRnuajKt2M4J53Vk0WRHuPwcHhypkSxMLcqlxKHgq5rhONJ0rpASg8S
      kvNZmGfEYHGzutHBaN/544qLi8aEf5SkyU22RULXVCLRJOqZSuxImKjFSUOBE4PRyvySLNR0
      koh/lLinnHlZCmZnLldVQdtQnN6EwqKSbJyKTGmpF5ekk4xPth4XVP5q132G2nWTfw+80seR
      gXVcscDMjqf+nZf2nqC7p5X49h/QtnMNn7/Hw4F3jzLY8XNOvi2DYmf+FR+jxt9MT08zT/3j
      d/glAOXc+eefYcV/I16ejYx0dfCfXR2TB/kV2BfKPLe9h6Q7m+vrcmhpPklHUKCiwEMyOspw
      aKqPoKlo1jw+eedScs0SydA4m985yVgoyoHjEe68/Vo+pmh0NzXx6AwbAAOMjY5wMpjPp+65
      Hqek0nPyBM91RvDUL+QmYwePHAyx9dg49155Cf+0XmC0t4tn9owSjsOOtjLuuOcGrGKa47v3
      cjCURj3Wy9yrFvKX9zWSDI6y6a0ORqea0I/sDaomwoRVI06LSDx8jipfNGK3y8TP6I8hiBhM
      FgxCimgsgXYqsYzVZcckzZw1uRnpCiFKWGSIJ1V0UcSkSKRSKdIaKLKMiEoirZ+RXMZqVlBE
      UFNpIvEUaX1yPtxiNmAQdGLRBDF1hs2BTiHJMlaTgixAIpEgktQQFQMWIUU4qYMgYjEbMEkC
      yWSSSEJFZ/K9bWYDkqARi8aZquhRjEZsRhEtnSYSm/wW+x/7lvCReyCS0cZ7E5cmmwOT7fw0
      huzpxHdGjOZpEmf4YDSV6HticU0jljhdc6fS58svNTVNKDzdeZVweKZ1e85HTacJnpN/LZXk
      1IhF14hG40TP+Z2mnv87gFQigT9x3umMK0SG2U3GADLMajKTMNNgE2RyxP+94EwZLh4ZA5gG
      AWHKiSzD7zuZLlCGWU3GADLMai6oC6Sl44wPDxGIJNAEBXdeER67ASEeoLN/hOSUr7riyKXE
      aycR9DHoC07GZBRlHDmF5LuMJEMj9A4F0BUbObk5OEwKmR7HdAhYHDZyHIbJuETRKIP+OOdO
      3ctGI9luKxZZIB4OMRxIoiFgslvJdRoRtTTj42HCmoHCXOvpf7quEQoEGZlm2nBGIBnIz7GS
      Ck4wGj17wU4ymcnPsmCQBEAlOBZmLJpCNprIybZiFFT8oxMEEjogYHHa8NoNpBNxRscjp9YH
      LsgAosGTbH7mVTpiSdTEBJr3Mj7/2RvwtL3Cd36yh8YyLwDu+dfw2XXVNL36cx7ZMkFJiRvJ
      5KBx3ce5oSrFpqeeZNtwCoMuULzseu5avxDb+wa/n8UIFhaurGNhrgUBMBLlzdebODh8Onqs
      qBiZt3Q+qyqtSKrOSFcrv9k6SNrt5Zq1lZTYFDQtzMF3T3AolsW6tWW8twrjzvPQ//YmHt4b
      nPbxFxcBT00tn7mmkokdb/DgrrMDNHgb6vjMwmwmEikgxtHtJ9jRGaZuxQIuL7eAKBLpauE/
      3+wn7c7hqitqKLXLCFqcw7uOsbV18p0vyAAM1nzWfPyL3JrvRIwc4h+/+SDHfDdQO9SPee61
      /L8/Ph3LTov5GQ+qLLzlC3zxujqMU+d9Ox9hw2Aef/Gn92Dq3MyPnttL+9IaGr2ZxbHzSdFx
      6BgHRqLEdYnadStZ6lXOMgCrK5f5c3Te/s12jgfSGE0SCRTqF5WQPdzNL17sIy5JGHSdRDrE
      o09MRaIV7Fx/WzXtLTOx8IPsyuHScoFtx8aZd95VkSyHysE39rKh67TeQbHks3BOig3Pb6Fb
      dXDjbfNpcA4zUZeHeaCTn+8dxFlbzRXFXty9wak7XQAGQxZ5BQ70+BhHXn+NwYK11OWlmfAH
      cdmspNNp0qqKpuuoqkogGsJkNiKm06iqhq5H6TnZRW79IgosBtzFpeRF/HRNzPyVyYuCnmRw
      KEJSkPAUFbE0J87xwdRZSQxeL2JvJycn0ggCxONpNMVGtSnOtpNjJBBA1UiktbMkha66agqG
      2mmbYc6gAAgG6qo9xPsGOTGemiaBAaeQZjSlIYnCqejTgiML2ddDe1AlGfGzrU2lxGsiV07R
      PBAgmlYZ7BkjmAbZ9BH0AKgRDm96goef3U3a28gdn1qFW04yYc5DePtRvrT7USTbHNbdfg83
      NrqxakHeeuJv2fZLiezCJdz1pVtJpVUMlkl/RsFqI9uQJDQxXeT2DACilMdXvr2S/MAYO3e3
      cjJ4dn9dcNiobZjHny91YZM1Oo8e5Vc7w4gmB9fdupY8pxEtOsGud5rYeHScpAaCKYsrapNs
      3hCaNmb+xcZVmEOxOUXTER+J+krO3z5HICU4ufFTNdyuqwQH+3n1zWM0yxJqNHnKOzme1HC5
      rfg1jYg6VQGkNUwmA7L8EfQAyDYWXPcH3H/VFwj07uWB+39E8ms/4Jpbvsb9t+ho6TDHXn2E
      +9/ZxfqFn+DWb/+CWwE1OcaGH/0lL7w5n5ssRkLhyeZHD04wlDJRnfUhdy2ZhWjqEA98/0WM
      NjsNK+u4ujrKfx093W3Rg2Faj3Xxy21jJDBy6c2rWVFwhGQiyDsvHaSpP4Z9TiWfWeTF1h5g
      PAK5lV4M/aMMpGZe8RdEiYaF82j0jCPL8zAV51BKGfN622nuj0wZbIy9m3ewdzMIkoGaZfUs
      rfDSezKF7LKiMEEKyHIojHaFSMzxkKVM6gEkk0IqkUJNfgQ9QKTnKIf7A6iCjCMnF4vqJzQ2
      SvORFnr9cUBAU9NIkkwy0UvT7pNMxFUQdNJpFVmxUlZXw0TTTloCMfpbj9FvcVPhmGmyvBmC
      y82SUhdmWScZjeFPGCnIObuySA4NEs0upNA2GQFCFFUSoQlOTkjUFTmRRQFREkglVXQNMNuo
      cQsc7w2QnHme0KBr9Le3s6slQCiSIJJIk0okiZ8ZvsLmYFFDEaXOyW8hyyK6pqEGfUTcZczP
      NWDJLuSKyjRtQ3F6whKNVR5cRoWySi92USUe+wh6gGSkn5cf+Rn3jwRRJRuLrv0aVzQ4Gd2z
      nV888m90jsex5M/l1rtW4zIJHDr8GA//vJ2JtE5J443ce20dHms5X1n7CP/6jS+Dq5JrP3EP
      pe6MAUyLJpK3cB4fv8uDTJpAfzfPvRLEmO1h3Xwvxw+10hnwcbDHy+2fuxGvQaVl517+qy9O
      wtdJ7lWL+Ic/WUl6YoTXNzURiut4ShxYSdIyEmMmOkLruk5ncxudU8eOuJt8pY82X4zsxsXc
      ZDrJo/tiTMhzuO3exRTaBEa7Onlx8zD+SJodTWE+cc+NfFKOsO2VnRyPaWhHOjmxfjF/9s1G
      IgO9vLSxn/GpeYRMdOhpePjZHfx6U9PFzkaG/2Feffi+THToDLObjAFkmNVkvEGnQRAyNcNs
      IWMA02ATZHKljB5gNpCp6DLMajIGkGFWkzGADLOaCxoD6LpGPDRKb0cnAUsZy6on3Z8J9rHj
      UBvRxOTqmjm/hqU1hYjpCMO9nXT5jTQursImiaCnCfQcp6l9CIxuympqKMq2IWX0ANMg4szP
      pjTXiixoxMb9tPWFONODQZAkcksLKHROOswkY0HaW8aJigp5pTkUOGXCo356BkLEVTBYrZSU
      ZuMwaPg6huibmIFaAFkhrziHQvekz1giHKS7Y5zQGVmVTGaKSrLItskkgyG6e/2EEmAvyKU6
      b3L8pqUTdB8fZDwp4sz3UJZnJhUK0dPjJ5R8bwfhCyAe6mPbK5tpPr6Lo7l3sqz6CgAibW/y
      42c7uGFpBQA2UzHpRJT2XS+z/1gbrxx18cP55dgkkXjffh57ahNSXiFycB9bj/Tx2buvochu
      /KBHz05EM5Vzc8mTRVRdxF2fi/mdQ+zvP+0OLZuN1C+rIS80zFgSYqE4CgJZlXO4rNFFKKLh
      rHRj2tnGscEk5QtqWZCnEUoZqC8z8fpvTjIyw1yCJJud+gVl5GpBxmM6UTHJwJl9FdlM1bxS
      avINJBJgq/SQZdDZ3RqkZEEdiyyj9ARBTYoMiWDKzWPNykKEeBJjlReP8SS7mv2Tt7qQjClG
      N/UrrsAh9dEROL2A7Bvqx1y+knvvvebUOV1NUVC7ArfDzLbuoVPnh1t20GaZxz99+kbE7nf5
      yx9to2ViTcYApkOP07q3jUOhBGldpHjNEpZkyWcbgKSghYfZ8uoR+t9zlxFtXFploX3/CQ50
      xZizpJq6Aic9E0nKSlT2vnyEzrhM43XLmFfcwVtdM8spyGgUSPvH2LrnOH3nRr4C0FP4OvsY
      bonhj6h46kppNJsxykHMYozdbx7hsP+9xAo1S90kOrvZcmgUS0Upq4vdODonE1zQGEA22iks
      LyXLajxDwpgk4A9h1WN0dnbROzBCJJEGUSG7sJyibBuyeLp/k1ezgGx/J/ua22g6dhKxooJa
      WyY8+rToKqEJFWdeFtXzq1iZG+FQV/KsJJJgxW7WMHud5HntWA0CmE2YoyG6x2JoWpruvgii
      AkbFihIdpTusoqUTdLb4MeVaL9LLvT8Gg4zRrGBzOsnNsWEznlNM1TTjoyH84TQmh5M5WQYC
      ExESqgGnU0A2OcnLteOySICCW0vSPhomoWn4ByaIqiCZPoo79LRo2ArnU9rZxGOP7iOWkKm6
      /DY+dWUDJuW8oOnolkKWVRzk9WefQtcVChrXYTr3BTOcQhAdLL96LjnRKH09w0TOEQSn0xqY
      s1hzzeQ2Sf7uDt46mARNP7XXsabrGIwyoiwhpFOnNACCDgbjzHNFT8d0JIeLVVe7AZWxzh7e
      3dV7TmhDEVexl4byLBJDfTSdDKJKFlIJmQVXN7JA0EmOj/Dmm72T+9K95/Km65N7iImTZe53
      YAAmqtbexXfW6mhqjPY3n+SHew9x66W1mJRzA3kn6Nz+ItvjS/l/f7UGcbyJn9//Bvvm13Ft
      bfZvn5XfQ3RtnFcf3YpsMlO0pJZLakL8+uDEqevx8BAvPz7ZxZQtNtbctIhq+xGwGLEok/Hz
      7VaFRCw26RJtteEAJgBTloVkYAZtjjFFeNTHa8/4ADA43SxbXUmVd5A9vadHwc45+cwvttB3
      tJWOsanzapR3f7WVdwHRYKL6iiUsLRmgX5FxKzLdgGQxoKdVtI+yP8C0RIfZv+sA7SMR0FKM
      j40hCAaEaf3sRNA1xoYHSegCqeAEI/4oZLr/05OdzbLqLMyKgJpSkY1WXI6zv6uttpor5jox
      SgKC0Y7XmSLiD9ObtLG8zo3BZKWhxkUimiQSDxDQcplfYcHozOWShQr9ndNEjL2oCORUlrNy
      vguTJCCbTGQ7pVP++wAoNupKzAx29J4u/ICcU8z61V7sioAgGynIMRAORej1izTUe3GZDJRV
      52IRVGKRyXHPBblD+w4/y/f/+RVG9cktKUVHPuvv/CKXGZt56rlNHB9J4KlZzafuuYUah48n
      /ubv2OHT0XQQRCtzL72Tz392Ht0vPMVDrx5As5Vw5Sc+xc0rqjDLM2ce9Nlf7WHTG0cvdjbA
      7GD55fWsmZeDQpqRtjZe2NhB0OJm1TwP7UdOMpiwsvKqhayociAlArz1/G729CXBYOOSG5aw
      ptJI1/4WXtvagz8p4Cws5Oob5lFuT7Dr1zt5p2Pm6bEVm5NlV8xnZa0TIRZg28v72NUVxzm/
      kXXGTp4/IXPVtQtYWn56/DJ08CDPbRmmaMVi1i/2YBXiHNm8jw0HA2iCgepLF3DTCg/Bzk5e
      e/0EPUGNhx/6vJDRA0zDjDGADP+jPPzQ5zN6gAyzm4wBZJjVZNyhp0FGwMDMGZNk+J8jYwDT
      YBVEPB9996gM/4fIdIEyzGoyBpBhVpMxgAyzmgvq6KZioxzZvpWW/gAp0Ub96qtYUmYjMnCC
      XbsO0TuRxOqtYOWKxRRnmdDifo4f3E3TySEkxxyWrFlNZZZMsGsfG99tRnOWsHTlMspzbIiZ
      Mec0SGRVFlBd5kARNCKDwxxt8ZM8Yz9gyWKnojEfr8MAaoKegx30jOnYC3KoqDsKXZgAACAA
      SURBVM7CbhSIj43T1uJjIiaSV1fCnAIziqDh7+6j5cTMiw+qWO3Macgn12WAZJy+5m66h88J
      CpyTw7yGHCxGEUgyeLifzoEIhuxsquflYRcTdDV10TeeBiSyqgqpLbORHBunrXmYidjkN7yg
      FiARG2BgEDxFxRSaB3juP57g6FiCge4B4rKLkuJsJo5t4plNTUTjMY6/+yuefv0YSnYxOU6B
      WDiJNnKYx36xgaAzF2F4P796dTuB2AwUZcwERDP5RSbi/hBjowlcDRU0FJ3tX6W4XGSb0/hH
      ggTCBuatr8RjMJCdZ0FMxhj1RTEU5DO3Nguz0YSnwEBsPMT4WIKchfXUFsy8ToDJZsdp05jw
      TRBKKFSvqiTvHKdVZ5mXPIPK6NAEo0MhwrE0SAYqV1WRLcYIaXYWryvBDpiKC1gy30U8EMNU
      XEB9XTbGqQr3gloAi6uW9XfUoRhEUqFcDm15EF/IxGWLLqVckhFJkhfv4um+YSLBUXbuOUTl
      uu/wsdUlSKhoukD35rc4nr2EH91wNcKgix8+uIdm/3JWW1y/o8/3e4QW4cSOdtSUBqJMwOai
      ynJ2gY0PD7DPp5FSQTaasJY1YJUS9B7ppkfV0JHISivMtUro6QgtW1pRUxqCJBOwZVPukGBg
      ZukBwiNDHNqik1Z1DA47oqsSqxE45bcnYbOp9B0doKX/9MYZsqOYIquPra92EEEhedMyKnP7
      CFdYGWvu5dBxP4aiFEur7NisY5O/uZCMiQiEfW20nGjn5L4dxJd/jmUlIoqYpH3PAU70nqDp
      SIzlNy1GEboY7tEpjgyye1sPBmce1bV5DA+MUVRyDUZJhOwcCtNBBvwJKPwdfb3fK3TSKSMl
      8724nXZyXUGa9p2tB0DTMHiyKCtxkpXrRmlrpS+moyLjrc4l1+PEky3QeyBIPKWjWC0U1GTj
      8TjIsoyxf/t08fcvLroGpmw3+cVOsrxOpLEeWsbPTKFgVRTslV5qsuzEAyGGh0KkHRbUwUHC
      KkCKnu44y3NMaMkkw+HJraViYxGS5S4Ew0fZH0BXifgH6ezoI2rLJ18OEoxpOKwJRro76RsN
      Y8uyk04mSKdTJMMqI/1tpPUIQ52vcnTdXZSfeT9JRBJ11JnWCZ1BCIJCVqETp6oSCqlI54mn
      RYx2Kzn5VsRoiIm0ggyoyDi8TrIcMslwFFUXJsODG41k5bmwSwn84yqKAsy4Hujk/mbZBXYM
      0QjjMRFZgsSpcqIy2hPCUWonz2bDVJuD+3AXJ2IC50b8FeXJFvNMjzdRFBCmFF0XZgCSiZLG
      ddwz73LiE/08/s9/w665S7l9nocVt9/F0lSUrm3Pcf+O/SwprMZbZqd27R2sLZNp3fgAv9zV
      QcVcK8PDw0A9WnCCIawscs08UcZMQddCNL16BFFRcM6vYUW9lcHdE2ckUBnv6GF7p4DBYqFu
      3VzKB0Zp8cU4ue047ZKMvaKEpVVufGMxIuPjNL0xjmgwUNhYS+1cB759M22bJJXRjl5GO/sw
      OhxULZ3DnHE/zX3vWWqKoZYuhloAQSRrbjnzvTZMbQnkHAcGgiQBj9dI8FicpFvBZZAZACSb
      EREdfUoPcEEGEDj2NttCOczNdyJEW/EF7ZRp4+zZfhTR5SXXDj2DoxjkSqz2OTTU57Ln7bco
      EGpp7xrCWnU5Cxe5eONf3mHD4UJcJ7cznlNIvSuzP9i05OSwtEShdyBEUpMpyLfDiA6ShMko
      kU4kcddXkJsIMBRIgMmJN0uk2+KgdoGThD9IIArZXjtGQxI5J59FBSoDPVESukJOgRWxe4Y1
      v4KAu3YOc4QQfaNJJKuNnCwjg6qGaDRiFlNEFAfz53lIDY8xHBaZU2JD9QWJ+8cZkRaycF6M
      HjWbhbkBtr4eJ2FOc3ljIaHkMI66XKSwj2j4I0SFkJ0O/G++wqO+CTTZzcrP/glr59ro3XOE
      V17axFA4jbOwkc/cdgUup53l191BfMMLPP3wLjxzr+KztzTiMGh84wsRfv6rx1E99Xz89mvI
      dZyrHMsAQDBCwFTGymsqkEgz0d3LtoNhZJudyionQ239RMdiZK2qosapQCpG69sHaRuAfKeJ
      xtUl2IwQGR7m4I5hwgkj6foaVsw1o6AyfOIkuw7NMEWYrpMMJrAtr+AytxE9HqFt9zHaBjXM
      1SU0GgbYcTRIZ5+NxctqaLAJjLX3cuDYCLGETsu2LpauqWWVHObQq82M6UBbN/vtVSxfX0e0
      b4ADh4d5b9fVjB5gGl5/fj/b32i+2NnI8D/M3/7HvRk9QIbZTcYAMsxqMj6/06AA5oweYFaQ
      MYBpMCPgzvQOZwWZ/3KGWU3GADLMajIGkGFWc2H7A2hpJoZa2b1lKz3Za/jiVXUQG+Ct37zM
      zhNDp11KSi/lj+9YSahjJxte38lw0smq2+7m8mo3IpAePc4zz7xAp18ke/5a7l6/CIc5Mxw5
      H5nsxlJq6rMwiBrhzl6O7PWRSJ2xdCNIuCpLqFmSgzEe4PCrrQQSgGyiZFU1ZcUGAq09tB7y
      EUuC0eOh6pJSsqwqfVuP0dGbfN+nX3SsWTReWUL0cDNtnefk02ij/NIKir0So83dnDwyRkIF
      c34eNatKcEgxOrccp3c4xeR3LKeuwUVycJjWPT0Ewh9BDxAZb+W1597gZOdR9rcPTJ40ZNN4
      2XXceffd3P3Jm6m3JwgHE4QDR3n+ybdxL72JO64qYedDD7JrKI0ea+XJH/6YNtcabrv9RhaU
      uJCFzFrctEgmHPYEXTvbOPJuD/GiOVSXnh1H0uBwU77YzfiBdtrH7Cy6Mh8JkexFFcyxhmje
      0Y9YlE9JqQPJYKBwaRkGXy/HDwQpWl+Ld8YuwkvkLSvGanWQm3Our5hCwbI5ePUAzbuHMJUV
      U1hqRZRNlK4qRevsovV4isqryyf1ABXF1FWIdO7sYMLgoqzBy3vxmC+o2rV56rnz6/W0vfKP
      tA28l08j2fnFZKMT7W9iY8TG6hsbkQM78CXncNWSOqpN9aze/yZv7WqnxP02b8mreODuS3D8
      1h/p9xw1TOe2MACiyYTBlyDnnCRKcT6G7pO0nQjCiRCOu+eR54iSnZPk+O5+RkaTRAwmarIs
      WIbNuB1+Trw2TFgfJp21lDlVCr5jM80lWsBSVkQRY7R0yMw997LDgdcYp+1gP2NjKmmrgQKX
      HXPAhFvoZe8BHylGEApXUFJkJFKiMNDUz0BHCDEsM6/ejMn2UbxBPwBdS9PTsheflM81c7zY
      hAYqs57gpUefoMBtJeSDCfrpjA5hM+fy7rP/RVA1kD93KSvrizHNoNigMwrBRsWVxTgMClLS
      T+u5XRaTQmw0PHWQZGJEwuqVIZwgnpx0dItOpJBzRSRFgnCIyFSDmxgOIeVamIwVPXMQLVby
      iwwMt/WRyMmZXJg5E4NEKpIgnZjsdEdDaUSvgOg0oPrGmDRnncBQnOIsE8lEikAyhQ6o4QQa
      ZgRlUg/wOxsEa6kIRw8cJW/BSoqcMiZHJTfc+0lW1hXjzc3HIiWRZBE0DUUyYHZmYdeGef2p
      X7FnaKa5484kVGL+KOGxCCnJiNV8/p4LgnD2sa5NlfAzzmuaPukTf3ZiZp4rmIC9MAdjMoBv
      KMaH0aoJTIpoTh+d5tS3OOO8ruundAO/oxZAJ9q+iW3dJXz6C1WYRECXcBXVcUnJXPT0CI9v
      ilC4oopi9TDqqJdL1q1HUSsJHHmcnuEYFDl/N1n5fUIQkMQ4A/u6ESQJU30ty+baGdzmP50m
      ksSU50JsG0cTLWTnqoxsT2OqM2MzK4QmNBweI1oqgpqOo9uycMhDTKgCthIn6YGTF+/9pkGQ
      RIpW1TNvjkbt5Rqi1YI1ZSeYPMKxJv+kgD+RRrE5MVoMEFaxuQ3oagR1PIa01I1JDBJHIqfY
      RGhvnIRHwW0xMEYM2W1GFkGfah0vbJO8QDfNLQN0nhzCP9bKzr1Z5JXWUJaVYvtLr2Nb+x0a
      siQEIJ2M07LvHfy6nXjHNg4rV/DVZYWUqlezdOtTPP6akxq6aTcVcH3hzNumZ0bg8VBfYyM0
      kUDVRFxVVsLtSQSDAbvTQHwiQrJvgNi8CuqXWEhk5eEa6OZYJESsr4D5y+Zg7EmSU25h/OAw
      sWicsdESai4rxRcyUVwQ5NjWmSUH01WVY49v4NjUsWnhQpYorRxuiiC5nGSLEcbGgwwEc6lY
      PAfLUBrvHCtD+weJhVRGYguZu1rHrzopNg2zbzBJSomxeGkxutWBqSgLtb+fWOQjzAIlg4Mc
      a2rCZ6xmRQE0HW2hbzwGWhRr5bV8/LKqU901QQAxHaTt2FF6hFo+/7VPUG0FHDXc9Qe34/Kd
      4IRPYu3tNzA/JyOImZaJEL4gZJV4yCt1onV3cqw5iqAo2LOtGBSBVHiCjt2DCB43jqSPg1tH
      0NCZONbJyQEdT6GZwPE++nrCqKk0g/vaGdeseDwaHZtOMj6zyv95pIeG6B2YHPdIdjtulwyk
      8R3sptcv4sk3MXasm8G+GLqapGdHOxGDA7ctRsumHiJAsmeA5qNhbAVO9OFhOprHSL7XS8zo
      Ac5n5/MHOLT5+MXORob/Yb76s7szHl8ZZjcZA8gwq8n4H0yDAbB+qAm4DP/XyRjANBjQsZ0b
      YCbD7yWZLlCGWU3GADLMajIGkGFWc0FjADUxweG3nuO5jfvwpeys/9TXuWVVEUqsl1ce+QUb
      m3xk1V/OPZ+8gSLlKD/99kOceO/HioNF136Wz96cxaa/fYCXu3yT5z3L+OZ37qE+O7MaPB2C
      0Ur+ZbVkSUF6trURDJ193XXZCuYtOe1Gkp6YoPOlXQyJxSy6qRqrXQaSjG45TOuBMeTcfCqu
      qSPLkaZ/wx46T8b/d1/ow6AYyF5YTfmyfIx6nIEtB+k6Gj57WsLsouz6BooKZUb3H6d95xBJ
      FUxz5lB9dTV2OUL3y/vo602CoOBeNZfapR6SPb2cfLONiYnJu12QAQTHj3DkZBb3fvefKNaa
      +MFffB93wT9gff2n7JTX8/f/2sDRX/+Mn//nZr735ev4xk9/ig7oyT4e+u7fYi8sxjzSzO5m
      O199/K+ZD4CIPOWZl+FcjOSvrUYeGcQvm5Gn+W8Ftu5h+/apA0MWVTfnEB4F03wXiQP7aGqa
      tBhd1cBgJnfFHKI79tA2aqPm1ka8Q7vxhc+/78VDwJKTh8sVouXxEyQNTkouryNneC/DI1NJ
      RBP5l87B0NPKrk0Jii+rIK86Rn+7SvHqAsZf38aJlJe66+oIPnaYdG05Je4Qhx4+jrWxioLG
      AuI7+oALNACnZxl33WdAESE1YcUoaKRSUZJxE96KXGxmO1lZLvSxODoCikEBVIb3vsox43q+
      2+hG6xxn0Gomy2BgxmoxZgwJBl47CDYneXWm6ZNoGpoGIGJdUoR+oIWwBi6HRrRbRUufrjdl
      yYlZGaH7RJgUYboPFZFXZsB3ZCapwnSiAz28p7cSrAmi41G0M1027DZs6TCDbeOkgiq+znFy
      zBYUpxlTpJuO7hgq3XR3FeApMBLL1vEd8xENxYkf9+Gca0GZ2mfhwvYHUAyIaAS7D/DCM88i
      r7iLxcW5mG9YQ/PTz/IPBwVSaSOXX78Cm3GqVo/3s/nlo1Rd+z0KFYiEQyQih3n0+z/Aac9j
      yeVXsqquEMN5Yb8zXBC2LIryIvTtTwAyBqsF72WNOJIJEgPD9B4YIIkBIRzmvU5PaiyCXGAF
      ZpIBnEZyeShe7Cbe208gcMYFRSIdS6JNRXhORjQku4joNKCNjZza8ik6lqQg20wqlSY0lVaL
      JkGyndIDXJgmWE8xePgNHn5qCzmX3sIX1i0n2xCl6cARIvmLuWVxAd373uLEyS7WNRajiOA/
      sYftej3fWpKDCJhrrubv/2Yx8WQSX/O7/PrRp7H/yZdZ7LX/tt9rFiPgqMlG6xwhkgJQGd/R
      QtxhQJQNOGsLKJmfoOuoBpKICKf602pyZnrDGYoLmFNjZbx5AP9gBO3MZZlTLv7C1IGGltQg
      rYN4xryOAGosDeYzZBCCgJZST+kELmgWKNR/kCef2EzFx77K525chccqIUQH2Lc3yJyli5g/
      fwFXLK+lr/k4g/EEWryPN984SPnyyyi2Tm7bkNJkPAWl1NbPZeWlyylOpxmLz8wa6P8KgsON
      x5ZmuHdqhCyKSKSJDvkJdA7Tf9yPZDYiynFUqwenRQTZgKvOTXo4enEzPw2yJ5u8MjO+Pe2M
      DZxT+AFiCUSHDYvLBKKCI8+Krqmkx0IIhXlYjQKCwURupZGQL05MMuJ2W5FEAVOeHUUW0BMf
      YX+AidZtHB5IYT65mxd6dyNbXNQvXsDi5dlseP1lnm22M97XTUHdJeSbZPztx2mesLNmfjGy
      KABpRk4eYFfLIEgCoaFuAsXFlDssv6NP9/uGiewlBTiz7ThybaRzFOxdQ/R0JnHlWYgNjROP
      C9gL7aiRCLHAlLZXNuKsK8JpE1FVAaPbRLSti0Q4RKC/mML19WQlFKyKj/beGbY/AAIWTy7Z
      lRYMgkw2oMWijLUOEDPlkC37Ge4LMTLopWRxNY4aFZNVZ2jPBKmoxthoEWXr64nrJsyRPk6M
      pdDaAnhWFVPu9SI7jMROdBGPTT7tggzAVXE5d91dfepYMptRFBc1192B8fBhukZjeJbPZe68
      WqwGCd1Tzg23FVNR6JwSpBnIq6ynPinSOxLG0bCGS+vnUup8nwHerEdHTaRJBUKMBSZrdy2l
      ga6jpbVT2/4kfQFG9Sip9/o1ySijx4bQy9yYzCLR/iHGuwKkkzrjB9vQKzyYDSqjrYNEZlr5
      Ryc+OoLvmP1U90RPpNE1HV1VUSeVvQSbu+lLerHbBfwtY/iHEug6jOw+gVqehVH0M3R8eHJ0
      MzRM1x4NT4GFdM8Q/q4AakYP8P4ceX4/Jzdn9gf4fefWn2X2B8gwy8kYQIZZTcYAMsxqMgaQ
      YVaTMYAMs5qMAWSY1WQMIMOs5oIWwqL+E/zmZ7/gnVYfCcHCstv/iE+vryLRsY0nHv8VB4fS
      lC+9jrvvWE+FS+PgKw9y/y8PoJkVBEsWl975Db6wOocTmx/jx8/sRs+u4ca77uGqBcUZZ7hp
      EVCysii8tAq3FKTzreazncIA99pVNC57Tw8gQjpM61NbGDBVsPJjlRiNIpBi5O0mTuwfw1Ba
      SvXVVTisKr4399F6YGLGyf8FxYijupCCZeVIh7Zx9MDZmgXZ66Xq2vnk5imAgGiQCO1v4vBb
      /djWrGbBEiuqCumon9YnduGLWchb20BVYxapwQFObmphdHhy1fyCDEBQjMy/9uvc9O08lLHt
      fO9P/o2dJX9E69Pvkn3zt/j5fBNvPf44G7bm8oX11fhGEiz+zP/jy9fP5b2o9qGjz/FvG6N8
      7V9/hv34Czy4cTM1pXdRlW3+XXy73zMU3A1eEic7GbZaEaepI/xv7+Cdt6cOrF5qr7bj94F5
      oYXAOztoaTqtoBFNVrwLcxh95V0O+y1U3VZHbuduBv0zay1UcdhxuDR6D/mYo56ft7TPR8vj
      m2kBkAx4FhZjDIdIpwUUIUHzL95l0PdeahHbwhI82jB77j+IZX4VeXX5hMd7pq5eAGZbKXMX
      FGHW4wx2DSDkVuI1pYhrEkaDjGT0UFvrobu7i0g0yXh4ArPZfIaVJehsbsG+8BLmus0U18wj
      NzjKyYmZ55A1M0jie7eFwe74+Q5h5yHhXFpI6kAPMV3AaFeJjp79I1F0YGQEX08cLTRO/6EE
      tmLj+9zv4pEcG6V3exfhif/eU1V2WLHYJSIDQTRBRDGnSJzVShpw2FVG2sZIJFIE2kdJaiLy
      R9EDkA5z+M2neeLXuwgbS7nlK1+ittSK6YpiHnn0+7yjGbBLUVotS0ilUoT6DrFxz99y4MUs
      alfczF23LSIaSeB0TDbZgsNJvhxjzD/TNmj4P4jTQ6F9gva+yS2BjFYHJXdcQlE6SbSrl/Z3
      u4hpCkI0esr7Xw0lUAotwAyURX5ITLlelOgIoaAGihVXdQnlc7JIJWOM7jxG26EkclolOqUH
      0OMpRIP80fQASFbq197DXy6/hZETb/Czn/4Ux3f/nJVr7+KvVt1GWtPo2fok/37IgMnp5bN/
      92vuVkGND/LsD7/PfyhG1kki6fTUFgaxCOMphQJbRhL5WyHIZM91E20dZNLLN41v017G3hIR
      ZAOuhZWULPTScVAFg4IEk6IRSSQV/r9b+JHM5DRY8b92YvJ9UiGO3b8BUQDJ6qDo6vmUju8n
      JQhI0lRnRxJRE2n0KaXchUWHDgzhi+pYHNnMWXAlVdY2ugbCxGJJBMWEUfdz/PggxcVVyGKY
      EV8cyWjB7i6gtiKHWFQiv3IO/397Zx5dx1Xn+U+tb9+0b9ZuWZbiJbET2xg7ibMQEsLWEJYA
      OR1mmMNMw/Shh56eYU5D9zkcmjPTzTDQC90DTWDSYQtJIJCEeEniLd53WZIlWbuepLfvr9b5
      Q/ISWwHkTjoCvc9fVtWtctV991v1q3t/y2TPCabzOonxESadAZqCJW/Qfw1iKIBf1ohOZ+c2
      yCqeSjeyYKFn86RnsiBKIObQHRWEQjKCw015tw9t+ndXAGpHK66xAWKXYppdPvwVMramU0ym
      ScxqODw2OUuhrNqHLIu4G4KoMljFG6gPkJk4yY9fPI9hmthWAb3mfrY3q0yf2cPzh/pIZXMU
      1Gbue/tqVDvOiRefZyCZR7fyZDLV3PVwG421Fdx3/HG++bW/xmHo1G24h7ZgKR5gYTzU3tNG
      RZUPT8iJ2VlGzcAIvWfzVDb5SQ+HyWUFfLUBrGyGfOqSzSziqKul8W0+JElEFAziJ2YoprPE
      L5qsuP8W6mwROzrBhcmlNgcEjso6mu6owxEsp1zxsaYxxfTxi8SVGmqVaUYv5EH109gtMvHz
      K9WFBFmhbEM7K1QJZBEhF2d4JEd2OkpoexPdbY2AQezY4OV4gEW5Q+u5GBPjYdIFHVtUqahv
      pibkoBgPMzoZpWgrBKtqqa3wI6MTD08wHcugWwK+igbqa4Oogk0xMcXgWATb4aeuvo6gW722
      cs9bytJxh5Zx1/txOq6YiFYmTSJu4vIq6Jk8hg6yx4mIhnaVc7/gdOKpmKshYOZyZKM5DANE
      hwN3pRdFtihMJ8nnl54AJKcbb52Hy3dt6OSiaTTRhVvMk0maICp4yiSykavfYAJqmR+3X0HE
      ohhNkU0bgIAS8uENqli5PNlIFsOcc4cuxQMswNIRQIk3k1I8QIllT0kAJZY1JQGUWNaUBFBi
      WVMSQIllTUkAJZY1N1QiyTY1CkUdZCcuVQJTJ1fULuepEWQVpyJQzBevcrUVkBQVhyqBZaIV
      dWxJQVXlkgp/A4IsIQo2pn79nL0gS0hXuZLbtj2X+g8RSRW5tMcyTCzTBkFAVCREASzdmE+s
      u/QQJAlRFhAAyzCwrstfNH8fIlimiWXMDz5RRFLm7tvUDez5+xNkCVES5pIJX5VTafECsIoM
      vfh9vvrYjyje+VUe+9TNaD0/4ZGvPEdFYC7Hf/mmD/OZ+xw8/hePcQEAnanhSdY+/GX+7P31
      9B47xK5nXiRRex+f/ZP7qV70RSwXRNyNtdTeuoKAmGF451li8de2CGzZQPct/vm/ZFSPRv//
      3c2kv4Mt72qY/6F1ovvOMnAqjnt1B+3bGnCpNqkTZ+l9ZRp9ia0Eyb4gddtXUtMSQMEkcb6P
      wVcmKVz2mRRQG+pZeXc7oYBIbmScgd2DpNIQ2thN+23VqKJB7PAp+l+NYXkCrLi7i4ZmD1Yq
      zujuHqZG5paCFykAm0K0j739NndtWskv57fOTE3g3PAR/v5P3vma1p/7+80AWMlTfPW/fZc1
      Wzpw5yaYygVYf1sbR0ZuvJOWBxKOMoXkqUHyoYWTByf2Hmb/3vk/gvWs3iYSmQHXCoXI7kP0
      nr46HsBPRaeHyZ++wkzKSfN7u6munGF8ZmkpQJJlimMXOfliFFP1Ub99JaGySaam5xuoHmq6
      g2QOneD8kEbttnbKmgLkBgSqV0oM/cseEmaQle9pI3Qmid5Viyc+ytHnwji72qhrrSIenht8
      i7M+zDyDJ3rQq1fSvSI4v9EgEU8Q8Hlf5yCDwT1PMbziHWxt9kBFBw/cu43mkJMl5P2wRNGJ
      nxwmEtZ+i6gtmfJN1eSPTVFEwOE3yUVee5QoelHMCNGwhpVLET6Tw1W39BwRi/EI06cjaJoN
      soxo58lfXcTD40LJZ4lNprGKeWJjSQRZRQmFkGPjxGIGZjLC+KBAsFrF6zSIjiTQNJP0cAzN
      EJCcNxAPkI0Mc6x3jJX33U+of9f8Vo2CrhDf/U0eOfAdvHXreP9HP8TtXTXIooCV7OHZF6Ns
      //RWgiWv5zcNsbKaGmGWvrAByMiSl6aP3UELOoWxCQZ2DZAqyAj5ApcsCTuvo9S7gPxbeOWv
      gyThrGugdaOTyT39JLNXdgmyhKXpl12aDU1AqZARPQp2Kn85e7qeM3GWedBMi4wx9xFhayaS
      Q0FQ5ob+ogQwuPeHHBwKUhY+xdH+GdKJPvrGmln/sS/y+MdsLD3J8af+kb/76W7WtzxEucti
      8OA+Blds4w873KUn/puFqFLR6SN1YYK5MWEwu/MwszsBSSFwyyoa11RSOGZiuxwogA4IThk9
      uQQHv6LgX9VIdbDA0C/6KWivNdFsw0RUnQjyXKUDWbHQcwZWVkfwuRDIYAOKS6IQzmHWB1Hl
      uaevoEiYRR1bnxPEokwgtayVm7s8TPaeZ2AySSE6wWR4iqGBYabTRQRRxeP1oCgC2GCkRtl3
      bJI1G9fhlUtzPW8Wcrkfj10kPjMfWqo4CbaVzxXIsy2Mgo5tg2Vn0OVKyqtVRJef6ps8FKaW
      XjyAo6yMUMhg4ujkdYMfgGwew+UlVOtDVF2UrQhgmzpGIo5ZXk9ZSEbyl1PfZpOcKZIpylQ0
      BlEUCW9TGapsYxZuIB6gc8cjdO6Y+/fks2OcntzBnevrOPPyc3z7uycI/KvhpQAAFFxJREFU
      p4vgrGTHu+7B64Tp02e4WCzj3avqkeYjuicP/4hvP7WPkdExwiknI+OHefA/fpYHVpX963rt
      9xIfzR9aQ221F4dXxdraTO58L8cP5ajvDJHoHSWdEvDVBjFzCfKZ+blCy8T2lNP+gW7cbgkj
      GWdi7xjFTIFoX47W926lRbFIneqjf4l9AIOAs7aexturqF/bNpcMPRFnZM9ZEoE2mtRx+k9l
      Cfckad+xjs07BPJjEwyOJNDzMD3QQOuHt6OIBrHD54hlTOzzYXI7OtnwqQ7MdILxl8YpFOf/
      txt1hzaLWbKWit8pY+oFcvkihmUjyg7cbuec/W8UKWg2DpdzvkAGmMUcmXzxqiBvEafXi2sJ
      VYpcOu7QApJbufzwAMAw0IoWkiLOzffbczaxgHVlLhxAlJCdEqIoYBsGRnGuLaKI7FTm1hUK
      GuaSqw8AgiyjOK8aD5aFUdSxBBlZMDH0ufUMyakgiXPrGYY2/8EvSShOGQELI69fXucQVAVF
      FbENE6NoYNtz7tA3tBAGIDk8XJp9llQXPvX6tCaS4sSjXHucm4CjFAH222Fj5jQWGqOmdmWr
      bZhc9xSzTIzcAkdaFkau+EZe5BuObRhomYUyQhhc3mrbmPkF+sY00Reo+mFrOtoClbhKhnmJ
      ZU1JACWWNTdsAv0+06ikKXNO/+aGJX7nKQlgAQRAEpba7EiJN4OSCVRiWVMSQIllzaJMINsy
      ySVmCEeS6LZKZUMjZR4ZwTbJpxPMxDO4QzVU+h2AjVHIMBMOkypCoKqB6pCrpLjFIkiIAR+C
      YGClMtjXzvAJImJZGeKleXM9izGTmTsuFER0idjZDGYyDzagOpFCPgTJxorFsApLMCBAEBG8
      XiSfE2wLK5nAyl0zLSqriEEfokOCYh4zkcE2bAR/CMmnzrWxNMyZOLYpIPj9SD4HFHJzbef7
      cVECKCQG+eVj/8KZpITDziM33s7DH34H3uljvHzoHAeOHaH5vs/z6btbsIwifQee5qmX+rAU
      Ecmzmg8++hAdJY+4RaAgd3SgtlYiCVkKB46gX1MfALcH5113oYoxLAOsxAi5nRew61txb2qd
      CwIpxigcPIMW0VG61+NcFURAwo70kd09sOSCYoRADc7NHcheFUEQsGKj5Pedx7y0fCE5kTs6
      cK6qRJQloIh27DSFkTTK5jvw1GQwc2AXk+R3HcZQa3Bt7Ub2SGAX0Y6fpDA415GLEkBy5Djn
      wvV85AuP0M55vvK5r3N48zZ2+NzUrb6VdbM9XIrX0LKTHD5wkpUP/Bfeu17hua9/mV8eeRtt
      9zRRksBvi42tpdHOxJCqFnYVESQZOzlMZuchjEtvB9GLc1UF5ukjZIayKBvXotSVY2QLKM0q
      xRd2o+UcON/xdhzVQ+SnlpgCjCJ672kK43FsxY9j0zrkwHnMmavapGbIv9SHmdCRVq/G4fcj
      ymkEO03u2Z0UY5caKsjddQjhC6RPjSO2deGsq0GcmBPAoiwSR6ieoCNGLJYlH5siK7ZQX+0g
      2HgTG7pa8SpXluy14iiRmWo62mtwOCro7qxmou8i6V9z/hLXYmBeHMWI/7qVWw8CGSxEuJQB
      2eFB1JNoM2kwi+jjSVAEBDmAoE2hxzUoptF644hVnn+TO1kMdiaKMRzDNkBwe5HULGbyqgZm
      AWM8jBkvguxAcitY+Ty2JSM4i1iZ+b4QABzIko42HcM2TMyJ2bnzOm7AHdpb0c66zqP85Muf
      49tFkds+/nlW+RbWkG0bWKaKLM+Jwhkox5VI/Q5nol+qOJDb1xJcuRb0IsVjB8j1C2AYXHa4
      MixElxNUGbTMFbcJ3UCodMNSfCw53ciNbThbIb/7GOZ1bgwCQrAMx9pOhFg/+b5ZkANIoQbc
      n/oQWBrGhR4yr0zMOQdesvNMC8GhIsg3UB9g5syL7Bmu4TN/859otMf41lf/Dy9U/AUfujl4
      XVtRdKM4UuTzJgQk0pEwxapuXi9urMSNYacGSf3tICCAtwz3/behThwFh2P+RzYQnApWPgua
      AS4fAnPfw4LXjZ1cgoPf4UJZ2YYsxcnunMBewC1IqKrFsbIWq+8o2vT8G9JIkv3eE2QBHD4c
      O7bjWjGFISuI8vxQdyjYmo49XzBjUSaQVUyRyhmYtgCihZ7LUNAWdid0OJuoqUlx6swQ2cxF
      DhwZp7VrJSU3uDcWoXElzpbA3C8pqAiKiZ1NY9gBHM0hUD2oLWVQ0LG0GJZQh6PeDZ5qnDe5
      MCaWXkCMGKxG9uYp9kxgGwssSEpe1JZyrOG+K4MfINiIc00VgiQAIoIqYOt5jKyEo6UaQVWR
      W2oRRBM7PzduF+UOXUyMsPOHj/HskSHyuNnwzkf56LtWcOq73+GH+84xm4phKAGCTXfw53/+
      MO7RA3z/ez/mXERk3T2f4JE/eBsVjqUfF5b62UvkXjryVl8GUI77Y9txVfkRFBnbKGL1HiJ+
      IIVrdQ16zzlMKnHtuA1ngw/0FIU9e8n1xsFfg/veLbjqHOgXzpJ95TxmzkZq7caz4yZkt0Zx
      9ytkz8y+1Td5DSLy2m34729FmE8DYcenye56Bd1/C25HL5lBB94HtuGoc8J8ET3j9AHSh2dQ
      t7wdV2c5oqChHT1M5tAItuTHcfsWPF3lWOFhcruPo80WqP3an5bSoy/E0hFAiTeT2q/9aSk9
      eonlTUkAJZY1JW/QBRCwEa6PsSrxe0hJAAugyDpu59KbHSnxxlMygUosa0oCKLGsKQmgxLJm
      cd8Atk0hNcNAXx/hpI6vto3uzma8skVqqp/TPeMURCf1K2+ioy4455ulxeg5cY6oUc26rR34
      bYP4yHlODoSxHSFaOztZUeFFWvrrY28JlqkxGp1mxnKwsryK0DVpZmzLYDoxzZlIkqwt01Hf
      wmqvglCIs3MsTFI3AZmmmgbWhTwYxRRnJieZ0mVWNTTTeW3emiWAbVtk8ymGohEINLHWf/01
      FrMR9k7OkNQtwMHKunq6Ai6K+Tgnp8JELCdrGhppdclgm8zGJjk0m8blLWd9dSXlyg0kxzXy
      MQ488z32TUg01FcSKMrUtTTjmDnBY//0JLmqVdT6QPM20loTRBItZnv28PQzO+kd6uILWztQ
      x47x3cd/hVq7Ail5jH3nxnn04XfS4HO8EX33e4bGqYGznMpqpCwJ2Xu9ANLpMX7WN0VRBGyd
      vmge923rqIwO8KORHDf5FEDBX2ZgmjqnL57ihQgEJJ2TM0UefdtNrFhS/uk2qcwsLw+Nkc9M
      cKGmdkEBTE8N8NxklianC3BRpZuYlsaRvuPszTnwUuBk1Oazm9tQk2P8qH+YAhLF6QhRQ+Rd
      TZXAIgWQmj3B4RNptvyHz3Fnhx9bK2ArOc49/TMG/G/ni3/4DoKKQVGXUCSws1PsOxph9ZZ1
      zIzO+V5M9x5gwL2W//mJBxFHXuZLX9vH+eTtJQEsiERDdRM1mPREFnZZcDrLuburijqfG9XW
      2XNsPyMaCBmD2zrX8u8aQpfb5gsz9EwrvGfTrdyk6rx87CVeia7m4aolpQCcDh+3NK0kmLH4
      lrGQlW4QyShs67qZ91SUIcxbD8XCKEfi5Xz87WtpEPI8c/AVjmRWEBqL4a/q4NGWalLhfp6M
      RohoFcAivwEyA+cJK00EHXFGhkeIZC1EY5qz54q0d9SQnBxmeDxCwbLA1hk+e5hZpYpbVzdd
      NnFqOm+mIjHE4XN9HD97AbG9nU5vyUVuYSQqg+XUOqTLP/K1KKqPloAb2SwyGR+jlwa6XSaz
      WQHZiHM+MsvFVJa8aWGQIeesY7VTRpJcdDVWk05kFj7xW4aAQ3XTEAzglV/PLtaYtcBMpeiN
      RhjN5ChYNnY+gVXZSJMqISsetje4uZDIExZdrPH5cQoSVWXl+CQJQ5vzBl3UG8DMp5lOhNnz
      5DS5VIqC1MRDH3sbOc1ipmc3TxxPk0zkCW58gH9/bxPHjvRTvukT1HhPz5/BxnbWsrHlBLt+
      8gS2LVO7djVOR+lb/EYRgFwuybmpEY7lfHx0YzshwSQakOg9f5rDloDbFWTbqjVsDVpYonr5
      YWQDOV3/dadfoohUOA129Z5kFxI+Tzl3d3azSTYRJGk+Db+AgEBa0zAFAVkQQABBEMgbBuZ8
      8bBFCUAtr6atxsNDf/RBVggpnvhf/5W9F9ZR71Xhtg/w6LYG0md+zheeOMtATR9P7zxC1YzN
      BWGMC+Esz/10F+u14xwo3sr/+OJ2xNhJ/unrL3JkbRf3d5a/8f20DND1AmfGhoh6G/hIUwV+
      UQBkVrXdyl+1bcSyTGYmzvKdaIx1fhUlnyJuQ4UAuWwKj/d3MULDyYauTWzoAsvSGbh4ll2x
      CF11TvRkijxBXNhMp3OsqPfgSU8RMXQsG8xiAVkSkebjAxb16PU33UK1eI7TfREMO0cmaRAq
      a2Pj5mpOvXyIiGaSTacQPG5qO+7lv3/5L/jkhx7kwbtvoSbQyrqNnQQUi8j0FEVbQE8lmY3n
      EErm/w2Tyo1zTqtke20lAXm+KqQW5/m+AU4nC2BbTKdzSIKARw5RoYyyO5whn5vgqfManVW/
      g52fi/KLgQHOpItgG8ykC1i2hMNVS03+HK9EC6STgzwx7uWWoJPVfp3dE5NE9SJnxqfIGBK+
      eatjUe7Qtq0TPvcyjz/2E87GBbZ+8PN84t4WVIr0PPMtvvHsScSK9Xz4kx9la3sF0iXDNXqQ
      //31cd73lx+g0Yxz/Kn/x7d+cQzL28Q9H/k479nUjnMJzYMWfvkr9H0H3+rLAGL88zMv8Fj8
      StRWoONOfrDGx9Oj06xt6iI08yqfePk8xnz3+X3lfGbH+7jVGuSbB4+yK1aks2U9f7yhmw6X
      RDQ2zD/s38e+jI9H77qXD1Z5Xvf74q3BYnTqNF954TDnmY9c81TxyS13cp95jm/rXfxZm5ep
      cD9/e+QEB5IGN6+8lc+sX0WTQyA808fX97/KaaOa/3z3Du4tc4Jd5OS5/fzliRFqGtfzx7et
      pcMpEfirL5XiARZi6QigxJuJ/ytfKsUDlFjelARQYllTEkCJZU1JACWWNSUBlFjWlARQYllT
      EkCJZc2iXCESvbt5cv/FKwd7yrh5232srbXoP7CHA/0xQq3r2HpbN2WqydjZfRw6O0ZaE6hd
      tYXtWzrwihb52BjHDp5BK+9k0+Z2ll561qWDaeTpmRhmxHSxsaGZGvW1+y1LZyR8kZfGZ0jY
      Krd1rGNLyIGYneafzw8yW9QBBze1rOKumiB6LsJLAxe4UFTZvGoNW4JLbyXYtjSGp0d4eWya
      mOBkU0sXmyrcrxmslpHh8EAf+xMGnQ3t3FFXjkewSabD7BwYZNz0cntnF+t9KtgGo5MX+Plo
      FG+ogXtaGqmbXwle1BtA8dfQ3t5Oe3s7bdUZ9vxkL7OmyPSxZ/juzgHK64JMHHyO5w4PkSvq
      TI1P4KpqpKXJz8mn/5FnT87C5Am+9+OdnO45zN59/Sw1X8SlRYGD545zNFFgJh1jcoE6t8nE
      ED8bTuLzV9Duk9h/6iT9OqRjw5zRXXRXVtNdWUG9WwVL49jQaXoMD60eg+eOnmFgyRXKtgjH
      x9k1FMPrL6fFLXDswil6cle30ekZ7GVvyqLVr3JmtI9DkSyGVeRA7ylGxQArHGl+eHyAWSAd
      HeKJ0TgVgSCF6Bg7R6fJzC//LuoN4Knr4vY6wC7S96Pncd3xATbXxdj1/R7qtz3K/Xc2MuGO
      8Y2TJ7l/YzO33PMQoqyCkSF39iXOhdOwtpsPf6SD8f2P87Ozb1Sn/b6isqFzA7foGV4NL1y1
      0u9v5pENIl5VRrJ0PLlXiRo2SsZmXXMLD9ReSVycK0zRHw3yB9vW0CJarLB28fK0TnvdUooK
      E6gINvDQhhW4HTKCnuXgwFmiVzutFmIcyCvsWNnBzUGZcxd66UlFiXt0TuSb+NSGVZQJBqHD
      L7I/0UrFRJZV9Su5f0UFheggT4TjRArVwA1+A+iR4zzxfIp3vXsTnlyCiWiA5jY/kihTWVVN
      IRYnaRoYuQhnDuzkmR/8A4cS63hwazPITgI+L+rr+nqXuIKIy+HELQnzue6vR5IdBB0yVjHF
      qcmLjKlN3OQyiWZ1ZmeG+MWFfvZNRYjrJgY5NHcVjbKIKMrUVVVRSC21d7CAIqn4nTK2nub4
      5BQzVNLtu9LC0jQ8Lg8hpxNRUFgRcGJiUsxmkCtqqJBERFFlbZWX4VSeqOKi1eVGEQT8Pj8O
      QcI0biAeYI4CFw++ymzbXby9UYLUa/eKkoRg2Zg26PkUU6MjzOQ81NbIpBM57ID39X7LEjeC
      bZPKRDg6NcmMUMH7b6rDh0lNbQWesVnOZ9LoU1OMaau5qwLsa7RkLLX6SADYZNOz7A/PkCLI
      XasaCImv3S+85j5sDNvGtu3rHhSGZc051F3eImBaFvaNmEAAZmSIXUcTbHjnewkAuL2UeVLM
      TmvQbJOIR5ECXoKyTKCui/s/2olRTHPoib/ml3svsKbp5lKK9DcQTctxcnQYqjp4d5kf13w8
      QGP9aj5d34ltWyTDvfzdbIpcSEXOJYjYK6gRIJWK4vR2vdW3cB16PsnRqTCiv4kHqvy4rrFT
      RFkhVUiRN3RsJGI5E4fgQHW70C4kyBLCg81oIkNDkwtfokjY0OiyPRiFHLbIfG2xxVaJtDUu
      njvGqKOOR9tr5zbKdWy+vYa/+dXz3Oy/mZ59/TS3PYhkDrH76Sg1a+rwigUGpxL417ghG2Mq
      niEcSZHJRJkcncRRVUXQWUpSdz0GsWSGeC7BVDpD1hGlTPDS6BRJ6QZOxUkqNcj+tJ/31RpM
      JWNIkky5avHKxUkcvjKaXQL9U1H87iYCjkqavOd5uj/Idl+GJwccPHiP+psv498S22IsGaY/
      LrG53GAyEUOUFCo8XlxWnpjtpMpVxjqGeWH4IlQ62D0dpbmxjpBLpoOXePKig/XSND+I1PBH
      6124iyLfGBkiKNYRHp/AdNVT5pxT1f8H3/PMCL0Y2zYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AS Barge Ability' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3xc5ZXw/50+o6nSqHfJkmwVF9mWC65gUwKYXkLZ9E3ZXbL7ZpMtv/fz
      7oZ93002jSSQbBJCCB1MsbFx70W2qtV7l9VH03u99/eHjG2wAzIGksX6/ifNmeeee+Y+9ynn
      POdIRFEUmWOOaxCJRCKR/rmVmGOOPydzHWCOa5q5DjDHNc1cB5jjmmauA8xxTTPXAea4ppnr
      AHNc08j/3Ap8vMRoObEHX9IyVhenX/G3haiX2sOHmAxIkKv1LL1uHekGxdWpFPXTVl+DV1vI
      soWZXHFrYpSpvjbqOs+iS5vHsoXzmR7sRJtZSIpefcXqhLxjVB7qoOiG9WQZVFf8fb9zmKpj
      jXilCtIKFrOsJBPZFbfyXrzTg9S19lO0bCMZxit9JEXsZ9upae4jLEhJyC5medk8NIrZvds/
      UyOA6O9l96sH2LrvNMGP4N6LRR2cOFaNMS2HxHA3z71ejf8qdfJbh3jn9DGOv70Le0C44u/7
      xtp5cddpkrOyCLtGGbe4qT96gD6b7yNoIzLZfJAd+3dwqGWSj+IBdU50UNViJTNVR8PuF3in
      dgThKl2pnaeOcuLoPg43jX6EtgTGmg7R4YwjNyeTll1bqR+xz/rbn6ERQMTRVoN8092UtdXQ
      5RBImqhnTJbFigXxNB0/QVL5JpyNb3OibRqdIZtND95EuvK9JlAbEikuKUMQW8AiI+qzsm/n
      NnptULbhVq5fmHlFWllHB4lPvwHl6CFGrR7kvmbaKWFdgY7a03Xkli/B3VHJ/toBzFl5rF6z
      idykC2/mSMCN3RsiLb+EivJyJEKE5liA1uM7adodZv29X2Rh6ixHAtFPZ9M4dzz4OY6facW7
      Kp2WU8cpKF9HimyCQ9VeVqxI4tSunQz5ZCTlV3DfDQvf14gUQ0oOSyo2kGOK8vTuU9xYdiut
      x/dQ2+9h1a33siI/4QosJNA7McXqDatobm0lstJI/ZFWim5aj8raTfOoyMqCOPa+c4DRoIri
      knJWrylD875WknMWUFZqomG/BBki011VbD9Sh0SXza33bCFDd/lx6rMzAsS8nK4cYsnyVSyc
      D2eazyITXRytPENoqp3DjR5kUwd5sSrCrXfdTLCrDUs4ekkz1p5afvnjH/DsCTtrV+QgI0ac
      MZUMQ4Q3tu7BfUVKCfR1dZA8bx6FqSY6B6Yw6kSO76lk0jFObVMXjt4aXj8xwb2PPoxy/BQD
      jvB7WjDmr+BLN83nlV/8kJ/+9g1GXGEQBVLmr+a+5Tq27mkgNEttIpYB6p3JLFlTTrKtgSFr
      lPBQO9X9k5yt2kOvREfzzmcZNa3kjlV51LV1fGB7SqOZqM9KZ+U7HGyxkWWOsP2ZrYzOViGA
      YA/D40aKFizFb+/ELciJTlZyqtNFb8NpJjwCe7e+TDhnNQ9vSqfySM9l7/fUm7/mP3/wS7yp
      C8lK0BBBQXpmDpLJOt461kXsT1z+MzMChFw2Gvv6cP3xJ8hsw0QKm/n8F5egn9rBiTM2Ehev
      Rm49gaZwNVmJJlTyy78REotW8OBj38EYquEnPz+I+c4UTnbbWJVvQCp4/6QhL4cYHqfudBtj
      rU+j8g7hnyjggfWbyZb8kvZ6P7L0ZUjCgySkF5FqMqJWSC5pQxCl5JbfyHfL17P76V9wuLmM
      OLmW5NQkUiJGopHorKcyY4OdDPRW8+sfjjI8OEzq8BSbyufx+7oGXPYQ679lpv9ZL0VrSjBx
      BukHvR7FGO6xYeTx2QScw4hqEwnp2dxRmIhx1q9Vkemm09T3teJ/eoyB9iGaJiUsWbmYl2tO
      4PXZKL07m9oWgbXzsjCqXEhE12VbWnPf3/Lo2jQOPfcLapqyof0E4fxFxBs0OMJ/2kafmRHA
      MdmHZtH9/Ne//xuP/79/x+zpxi1PZmNJgGf3W1lRkk580UqE2tf4w2s76Bp3QtRN7ZH9DF9k
      U+doJ2+8+gIvvXAIQ9kC4hQifscU0y4fggCELBw/dJQpT4yqQ3sYdQb+hEYi3v4WQosf4kc/
      +g9+/F//RoG7lwFfHGVFyezaUc2ydYtJy8zHN3CYZ195i7YRDwC1R3YzdG6O7xhp4ZVnn+aF
      l1+nO6CjLCfpkiv5LF0cPNmCa3qEg0eqCP4JjXq7x7jr7/6Nf/+37/O/v/k5hjr7SCheganz
      KGf0uRRrdRSU5nP45V+x7WA1Dn8U3Gc5cKQG5/mBKcpI83Gef/YZXj08xE1brmf+4kXIbEP0
      DQwxPmUj7Bth/8Eq7A4Hhw8cxh39E6+NmJeaymG+9eMn+b//8X/5z2+t5UxDP/qcZSgH36Rb
      uozidA2LMxPYvvUl3tpXQ0AQ8U11cvBkK+GLmm09tp3nX3iR2rMx0lKNiEKI6akpfIGZUd7S
      V8OJxiE8Y+0crmrn3duRfFaiQSNBL96wDJNeA2IMh8OFzmRCGvYw4YqQmmRGHrFy5NBpPAEf
      Dd0u/uYfv4TS60ZtSiFOAaIQYXp8nEAMJFI55pQ01NIw1ikLolyDRKogMUGDw+ZGl5CIzz5F
      XHwSGsXlRhORaMCDO6ogQa8BMYrL7kRlNCONuLE5QpjTkhG9Vs7UVGHx+BnsGeGWr/0vUmIW
      1KYk4pRyhGgIp92GJxBFo4/HbNLhdzuQa41oxADTfikmTQyHRyBer8DhCmBONl92Z8bjtCGL
      MxKnlBMN+XAFBMwmHW7rJEG5gSSjFvtQI6dbzuKZHmJSv4Tv3FPBlCNIfGICSilEQ14skzYi
      EilaQwJmkxZiEVx2Ky5/BLXOhNkox2YPEG/S43Q4iU9KQiG9dHRDjOGyuVAnxKOSShCCHuxB
      GQkGFW7bFFFVAol6JRM9ZzjTPU5wuodR42a+fnsBXq9AotmIVCIS8jqx2N0IIijjjCSZDUS9
      DqZdQTQaJVKVgTiJD29UjVEVxeGHRLMBmUQi+cx0gNkgRhycPnIae1ROdkk5C3OTkEou88N8
      ikR8DprO1DDhFskuXsrCeSlXva14NbhGO6hq6kfUmClfvpRU45VvtX6siCLTw600tA0TVSWw
      et0qEtQfj4Uk11oHmGOOi5FIJJJLFsHRaJTR0dE/hz5zzPGpMzcCzHHNMncibI5rHtn3v//9
      73+wiEjI78Pr9RGKCsgVCqSI+L1ufIEwUoUCqQTEWASvN4BULkcmlRAN+3G7PPgDAaKCFKVS
      zqe33BQJ++3UHdxB1biM0twkhGiIiZ4G3jpcTWpWIbrzCymRiN9B/eGdnB6B0rxkhFiYyd5G
      th06TXJmAXoV1Ox6lq37m0ibvwh9xEJt9ySZKVfi8by8npNdp3j+jy/SbpUxLy8TlXzGSkLE
      R/2+rTy//TgRUwa5yXosPdW88McXaLVIyc9Nxd5+mF8/vwdpSh5ZCSp6GmsRTBloL+NPuBQB
      99lmnnn6WU42DZOQnY9J6ubQWy/y6o4j+DWpZKfFI5NIAAHvaCvPPP0HjjcMYsrKx4SNPa+/
      yFv7a1Cm5JGigyOv/Ya9DZNkFxShcPfTOBIhI1F3lTaaIRYNcLathj3Hz5CcW4xOCdaBel78
      4wvUnw1RUJCDWj7zPo+FXFTtfo2X3jrARFRHYU4Sw/X7ee7FN+i0SsjPTUctl/L4448/PosO
      4ObEm9s5VF3L8cNHCccXkhLu4Fe/20pLcx19bgNFqUpOH3qHZ5/fjrZoMdnxcTTufJrfvXmC
      4cFepiMmCvKSPsXdDQFLfxeCWo8jpqY4O4mQx0HPuJsEnYDOlINR++7yR8Qy0E1UpcMZU1Kc
      nUzY66R7zEGCXkBryMEk6+N0dwp335xCY7MbZWQciSmHZOP7HfJXSMzKvncauf7RL6MZrmZU
      kUqueeaBsQ3XUzth5kv3r6BubyVpi9Ko3HWG9Y98Bf1IDcMh6BsJ8ODdS6lrmCI3zkJvOJPi
      TMPsXjRRG2+/VcstX/06K9JjHGkaQeMcxJW0jC/cv5mhmr3EEkpJ0ssgauftN6u56ctfZ1WW
      hGMNg+AaQpl7PQ/etpT2o4eJGcJM+RexeoHA6LQE99QwSTn5GDVXGUx4jqDbQv8UJKkcKJMW
      YFL7OPr2UZbc/2Vy7WdojiRTlKIHYHKolk5bDl/54ucIt+xlVGOivcnPA199mDRHCw1+I4Up
      eh5//PHHZzEF0rH6zs/zN3/zTa4vMTAxOUHd3kpK7v46f/ONL2HrOoQjqmLJdTexJN903uNm
      swZYdf8Xeeyxx7jn+hKUH4sZZouMtAXLKM028+72s9qYxMqKZaguuWMpafPLKctNPO8VVBnM
      rFxRgVp27ssKPVL3EO1dZxFxMuHTIvOMMjLtvbpAMO84sYxlZJk0LF2UzZT9gpM/6pwirWwp
      ccZMVufD8Og40bRyckxqlizKZdoDWtFLa2sfMVmE3qkYyVIb3UNTzCrkTqqjIENJW0sTbQM2
      0tNSSExJwj89SGNTC1FlKgnvRmZKtRRmqmhvbaatf5q01FTUMgnjQ920dgzhkfhxuqSEprvp
      G7EiBMbwSBJxTwwx6Qzwcawy40wZrFpRhvzdH1SwENSUUZCoY/7yYjyTF4JUdPpUFOFhmppb
      sYhpZJtV4J2krbUFWyzI0IDlghk+/NIyvKM1/Ow/vs+RETPryjOxWGWkZ8ShUhvQS8EZFYmP
      j+fiCFS3c4B9L/6WH/3yj/RY/R8p8vAvBnkW161KIywkkWpSoYidpbaxk+NHj+AIXnmE53mE
      GBLFzNRQJpcRjV3Uliggk8kACXKFQDQsXJCVSYnK9KxbXYY3rGNxuhwx4uRUUxf1B3fR55nF
      tSUS4rRavJYxpmxOBFGCXKVFHvEwOjZOQJRy/smVSNHodHgtY0xaHcRECYVL15KfIDI6Pk0o
      FEGhK2BpmYE4fRoSUYPg76KlsZEDp84Qvdpw0csiIMrlSAGJXI4Qu+AWlslVKMUgY2Pj+CMx
      BHkWm28qwTM1jtPlI3yRPrNaBCcVree7/+ffuT7dyr6qLtSqGAG/SEyI4hci6GSXhhTd973/
      5rc/+398aZ2O5363m8tHcPzPIX3BSlYXGwnLE9ERomTdbWTFC4SCVxId9D70aYhDTUx6Q7S2
      jZBqvhAFKjUkMdHVRsg3RV2vhJy8VCRnW5jwhmnvGCE5XkVccgHXV+Rh82vJUUfIqLiBTaVa
      xpyzuLZ3kuqRMDfcchu3bVhIX18fXb2dJM27jjtu30K81ML45Lme5JuiaigwI3v9EoYGeomg
      pqRiAzetWYA0piE9zURB+XoKEmXoU9OQREVWbtyIQRrhE9lolCahcrcz5Aow2NSFNsV0/iP7
      cBPBtFVs2XI7ixLtNA960KYUcuMtN2OQSCkpSj0v++HBcO5xTvVMkRxvICKVI5XEsWRFGm8d
      PoW+IExIPQ+9IsrY2TGsTjeMjWE1Szjb0oE6JRXfhAtdYs6VHwS5KiJ0Ht3B9qMNWAIizc3l
      PHrjfI5s30GvxYlC18L19zxMaqQPVcZiol2H2X64nqmAQHPLEh65qZRjb2+nx+JErm1i412P
      sKnMSGe/h+KVpYhjFl5/40kMZTdSob+KeEJ5CssXqnj1qZ+gzl7JAxsS8fad4IxYzpqshSTW
      v8ZPnvSzaOMWUlXJLF8Ux2tP/RhV1goeWJMCwMjoOBl5JcQbjdif+yOvKefxxYpZXFubxvUL
      ennm5z8kIk9g5U1bKEsOsHvn6xx420fu4utZmqLg5KlKyhYvZXOp/pxsPCs2byFqH+LNt95m
      zKfhhnseIlUrgaidYYuUhatTcHjj2f7Kq2Sv3YJMdvXbH87xRl5+5h1GPHZkJ/r53P1fZMny
      VLb99gkkSQt54MFEYhMN7JvKYFP+MqRvb+cHRz2kzivn7rVa2g8+y4HmaVIWrObeeRfiqT7c
      DxDx0Fh1ms4RC5rEeaxbu5zEuBhnDh+gzyln9eYbMcfGOXb4JDNTWCWFFetIiw1S3zJMTJPM
      us3rSdN9uquAOeb4MOZCIea4pplzhM1xzXPJBFYURaLRS09KzTHHZ5HLdoBIJPLn0GWOOT51
      5qZAc1zTfGbOBM8GMeql/uQJ3IpUKlaUY1Be2J5zT/ZS19hHfEE5iwpSkcd81FeewClLpmLl
      UtQhC2fqm4nLXsLC/GTCliFc+hxS465ui89nHaa+oR11RinlC7JRntsyFIUI491NNJ/1sqB8
      OfnJevy2EerPtKBML6W8OIfIdA+VzRMUL68gx6zFOjaIKjkX/WxigUJu6utrmbDPHOmMS1vA
      DYtTaKyqZcwVQBOfSkVFBcZzrgkh7Ka+shKvOoOK5YvQK2KMdTXQNOiiZOVack1yepsqmYgk
      smzZQuIiNka8CnKSDVdlnw/CMtBIY9ckSQVLZn4z6bu2CzPa1UTriJ+SZcvJTdThtQ5zpqEd
      dUYZ5Quyztt5FiNAgPo9r/Gzn/yIJ37zIl0TM86RkLWPZ3/+n7x0tIdINEj7sTf5rx/9mBd3
      nsYT+QvcWBIj9J3cz4gkGYVviBN1PcTeVTNq58ThWpSJyXRXH+Ws1UX/qf0Mi4mogmc5Ud3F
      QFcj7lgcfR0NOJ1WGjrH0Fzt60MMUHv0ODFDMmONlXRNXXAXeqf7qWwcIdkgcvTQafxCgLqj
      xwgbUploPkXn8BCn63pI0Iepbuwn4hmkbSjALPNBgUxJSno2+fn5JGmlTFisiM5hmqYE8vPz
      yU5PQXU+XjBCz8kDjMmSkbr6qGzoxz3SzokOC+kpSqr3HWXM0U9rT5ioZ4iuAStDfb34Qp/g
      WtLTy5HaSZIy0plorqbP5j3/kXuyh9MtY6QYohw5VE1ACFB7ZMbOo42V9FguhE3MylyZCzfx
      d9/5HjdkezjZMAhAR1Mdao2KCZsP93gbu5q9/O3ff4skWzWVPfa/vNCHqJsWm5HbNi5n9arV
      EJi44KK3dOPJXsvaiqVcX5zGmH2cFpue2zYsZ/WqNchCE/iDEdLy52NQSbCNDKPPLsKovEoH
      j38Iq2oJ61ct4+YVmZy1XEjD5bcMkLhkM8tWr2e10cOAdRiLciEbVy3lphU5jE46CUi1LCjO
      Qxr00tc9zfzFBRfilz4MuZqsvCJKS0swqKIsXLgYvztIemEhpaWlFOVno363g0cctDsTuG3D
      ctasXEHYN8nwpIPShRWUL9tAaW6YqQkHqsR55KYnEPGOYPHpyEuLvzr7fBDeaQK6bErLFrJm
      QRw9YxcShXktw6SWb2bp6o2s0DkZsg5iU5fP2LkineGL7DyLDqBBH+en7thejncJLC3LIuxo
      p3EojhVLcgBw2aeITypEr9ZTmJ/GyNDYX14HiEWR6OJQAXK5jHA0hniuA8RCIeIMeiRIiNOC
      xxVGoo1DCchkMiKxGFl5RbQf2UpAEY/TH2W8YSc/eeJ3NI3OJu7gTxAKITMakCMhTqvG7b0o
      n0MkjFqnQ4IcnSGMy3qxrAp3NI4185Q8+/JxUlI0hCVh9j33a37xu9exXEFenrC9iz5fDiWZ
      ccTkCoaOvcaPfvxTXnrnJM7QudikWAyJTosSkCvlhMJRwlIJWuXM/EiiVCNT5mH0HuNokw1Z
      UEBkmN//4ue8cbyN2CcRC5RSwWJFM7964me8frieSftFmfKiEdRaLRLkaPVh3NYQMtOM7bRa
      NS7PBTvPagSQSKQoFFqSjHIsVgt1u46iLS1BFgoSCvhngove9aeJwKcY+T9r5EpkLgfOqEAw
      EEAmlSE9N2eU6fR4piaJCjGmrWFMCRpkLifOqEAo6EcqkWJILeKhr36TUrOUeIOWSPIi/ubO
      MsatHyVF4TnidMQsEwRiAtZpNwkXH0BXx+GenkaIBZickpOUriNmmcQfE7Ba3cQb40hcsJZv
      f/N+9DERU8xH5s1f5KElUrqmZ3d5UYzR0zFCXnEOCglo04v56t/+E9/7x8fIlI0xOnXuTalQ
      InPacUUF/D4fSrkcrSAy7fMgClECTjdqk5l1d3+N+zeVITPGI/rC3PHwQ2hC9k+mA0jlLN78
      eb7z3f/F9YtLKMy8aK2hUuO2WhFifqamFZjTdUSnZuw8Pe3GbLpg5w+fxfqdWKM6lq3dQKJk
      nJ2dQyyPN+JsOcI7U90MOF34y5dgn+7FHVhEd/8omStv/svrAnIja0pUvPzsc6ilULj6VvBO
      0jAZYen8UnJcr/DH52uJyozcszib+aWjvPbc86ikIvNW3opSLiFoG2bMp2FFWSI9HQfY2hWm
      eFPRR9dJnUe+9jQvPd9FNBbH5+4zERhvpVecR1FGCb43t/F8sxzBvJAvmXLx6at4+fluojEN
      N9+zCoDRzg6kqQWkaWQc2f0OZ2NSNpXN7vKxkI0xh4zVK2cCyazDzVRW9xAQBVDGUxwvp7W9
      jbx581k5X8rLf3wOpURC8drbyEv28vauA3TXCigSFnJnkgKiHro6z5KzYj1WRzNH9+xFlV12
      /kXz8eKndu8e+uw+fBIz96804RttYUBaSEFmMc5tb/F8gxxJ8hL+ypSPM+40Lz3fSTSm5db7
      LwTOXRIKIQgCweBFQ3Fgmn3v7KJ1aAqlMZubttxOcfpMb/P0HGfXRDr3r82i7/RedlT1kVm6
      jjtvWoluVqeSPl1EIYrdMkVEGoc50YQsFsITEjHqNIQDbuwOD0q9GZNOjVSMYpueIiLRYE6M
      RyGVIEQCBGNKNCoJQY8DRwASE+NRyj76bnI05MNmdyKLiyfBoEEMefCJWvRqCQG3A4cvijEh
      AZ1acUFWYyLBGIdUIpkZoeRqFDIRp3WakExLUoJ+VkO7KITx+QS0ejUSQIyFcdod+MIx9PGJ
      GDRyPF4vcXE6ZJIYNouFqEyL2WxEIRHxu+04vFFMiYloVXIQo/j8UeK0KmIhPzaHB43RjF6t
      4OPPPiPgtk3jCcbQmRIxxCmJBd34JVr0Kgl+tx2nP4YpwYxWJSca9GJzuJDHxRNv0CCVSNBq
      tZfGAl3SAeaY4zOKVqudiwWa49rmkjWARCJB8mfOljbHHJ8Wc+HQc1yzzIVDz3HN85ntAKIo
      EPR78AbC7/6DWCSE2+O95JD2jKz38rLn4iVCPjcOp5uoAKIQIxj6eCJmY5EgTocdty+IcNFg
      LIoCIb8Hu91J4FwhjxlZ23nZWNiP3e4kGJk5lxwJBa/oALoQC+N02HE4PURiIqIYw+9xYbPZ
      8Yfem1NfPC/rnpEVYvg8Tux2J6GogCgK+D1OnG4fMWEmT1TwMgVIPiqiKBINB/F4Z9oHiEVD
      uBx2XN7AJbYL+tzYbXa8gTAiEA35cdgvtfMsolki9NefpLp9GGVyEZvWryBBIzLQWkury8Cd
      6xfhnGzn4J4aPADyOJas3UxqpI/Kum5CymQ2fe4G0vVXXpDtoyMw1VNPVc0ZJuMr+NaW5YTc
      VqpOHaNtws3tdzx6URkiAUvfGaqqzzCmL+dv71pJyGuj+uQx2iYc3HL7XzEvKciu555jTJSw
      eNMXWWKaom4oyubVpVepZ4ymA69yss9FTGrm3kfuIzdhJtdQyDPBjldeZyIgos5dxV/fvZKW
      w1s53u0gJk3grgdvZapmH3W9FpKX38pD1yVx6lgbCzeuxzwrU4foPLKLwz1TSKIiuatuZG2K
      n50HKvFEQJOQw5Y7byM5TgqE6D62mwNdk0hiIjkVm1mZ6GTP4XoCopSkrGVs3pjOO8+8ikOT
      wPW3PUiKv53eaCZrSzOu0kYzBNxjVB6rYsTqZNO9f02uCTpOvMnhZitRUcuWLzzE/EQtAH77
      ADte34sjKkGqSeLOh2+l8+2tdDrCSGUmNt27hflJMzmEZpEYy8fY2QC5ZcV4WvdQ70oiM9LH
      6eYujvXYufW6RcjkGhJTM8jLMdNy5BCGRRvRBqYx55eQ4Grk9cYwKxfnfKqhpwqNgdz0eKZD
      ShZkJyGVK0hIzUWDB0NC7kWJsd6VTcAakrMgOxmpTEFCWg5xEi+6+BxMkkE6nIXcdVMeg73T
      CAEXmaWLMKquMtVXcIDjjXIe+vL9FMrGaPMbKUyZ8bHY+k4zFb+RR+9eS6i5hki2npZmCZ//
      0v0UKSZpm47gjqi5/66V9HVa0YVtqAoXk2VUzc4JGXFyvGaYLY88SkWeju4xN9qQDVn2Ku6/
      fSPBiU7kCQWYdXKIuDlaPcDtjzzKynwjvWMOJAELqWW3cMeNq/CcrcEVjRLTr2ZdWRw2ZxCP
      08/80gWzrtb4YUhlKpIz81FHptCkLMCktnD6mI0tX3mEZQk2qia0lGYZZ2w33sG0tJiH7t+M
      3t6BVaFhxBLPQ4/eyUKTjcpRFaVZptkmxjJQtnIx2SlGvL4Y8UYNScVruX1dObpzWaYUaj1p
      mZlo/KM44pdSkW8gf9EKCjPMBD0+TOb4TznnvQSV1oDuIgeMVK7EaLicg0iCKk6PTqM4/+BI
      5QqMBsP5pFpoc1GP7+O//3gAhUrEq1Bw/MUn2V0zRORq9hD8LmRp2ejkMtLT47E6LlSbEQNe
      TOkZyOQ6stMjTI64kKVloVfISEtLwBZUkief4udPbSWmk2MTpPTtepan36wkPBuV5PGsLU/h
      tV/9kF+9UU1+/jxy55fgbdvFf/zwZ0wp5pFuPpfIQG5k/bJ0Xv/VD3lyayXZ+QVkpZip2vF7
      /vO/fsnB9nHCQhLullfYerAdid9BRCXyxjO/4UTH5HumHB8VmUKF0aC7sEMZcxM1ZJGgkhGf
      kY7feiEmy5w2H631JD/40S8448umJDuLBG8NP/vhD/j9O5X0D0xcMMNsLm7tO82Lrx1GTMhn
      U5rxsjKiKHDyeC1L138VvRQ8o5289uZ2bLF41iw2/89ebEj03P717/C5sJuGxl5k7mHm3fI1
      /F0HmHZlkm76iGObUkXM5SaKSMgXwqC/KNWiXEnQ60MkDp9HhXGBitHec7L+IAZDGkuWP8iS
      zUF66huI+G0IKz7PzZaDVE+sZf2HlUkOOahvn+aeb/0LuukWtre0E5cSQr/wdv7Pwykc3rmd
      s5YiitPjIOykrnWSu771Lxhs7WxvbGPJHRv5u39aA4hU7X4BbXIeD//D/0fQOZ2NC3MAACAA
      SURBVEZDn5vYdAs3bNlCc1srkaIUVB/38C9TIfWPExJB7veiMVzI9eMY7caXuo5/vTeXlr1v
      0TRVwS1f/ja3IOLvOcpbk4kXzPyhF4qG0WRW8A//ezVdR15kf007S7LXXSIWcbbROpXAV4tS
      gRgyUx5feexf8PQf5lfba1hYchemS1v/hBDw2qexDI9imYjRP5JAmlmLfWqK8Ykpgsph4tTZ
      qMQAUpUO0WdnangUy2SQ/rNm0hJ12C0Wxiem8ErPoovLJkEnZ7KzEWnaMvQTo0yODxOJyK4u
      501cLvH+1zndKMXRNkL2xsVE/Q7coh5Nch6WI4doCydSbYvjoaQcJgOvc6pBgatjmIy1M+sP
      +1AP0+o0FhuCtI6NMuaMoZ1VBhqBSCjExMgAaredUESKIITxWCYZHArhCsXIEGI4HA50qhiR
      cJiJkQGcXhuhSIyAa5qpaQch+wAdnkzuT1KCEGGou4fEvJXY7K1Mjo0RQf6xhEFEQm4mRqcZ
      n7TgNg5hVCRjVh+gstaE0NdN2uoixJAba0iFKITx2q0MDsux+/2oozFG+zvxx6CxcoDSG5ee
      b/fD1wCeMd584w0OH6+kbchBybJViAOneGX7PprauhizBMkuyuLs/peZyLubG8oSkRLgyNbn
      2X3kNLVN/WRUrKV8XvKnOA2KMdnTTHXHGPKoj1FnhPR4OS011ThDEpwOO6qEDATPGBGFAf9o
      O9XtI8hjAUadYdITlLTWVOEISHA5bCji00k1ybD6VMzPS8JgMDHR3YR5wXoK0vR85FgviZKU
      FD29zc3o569mWWEaUWsfQ0Ej2WnJGEQbTQMeVt2wgTSDnpQUA33NTWgLV7F8fgZyqQR3wE9q
      aibGtEyC/Q3YTQtZsyD5w0dcuZa8zDiaauuYCum4fuN1zMvNxjfZTXP3CPPKN1GWrWdwaAi9
      OYsFuQaaa2uZCmjYsHEtRqmfloY6ht06br5tAwkqGQh+nCED+VnxJOjV9PYMU1S+klSj5qo7
      QcA1QtWxGlwxBW77NNqkPEqL0hlua0aas5zrSjKRekbpsCkozMtD6R2koWOY+AUbuK44GdtA
      E2fahslZfj1L85ORSuDxxx9//MMdYaJAKBgkEo0hkSlQq5UIkRChd0tPSmTExakRIiFEmRql
      XAKIREJBQpEoSGSoNZoLSU3nmOMvhLnEWHNc08x5gue45rlsXqC5cOg5rhUu2wHmZkVzXCvM
      TYHmuKa5ZBv0crlBhWgI6+Q4FrsHmUqDgjCT42PY3AFUcVoUkhj2qQkmLFYcLg9SZRxqxZ+z
      3jnExur40W9e5lTlKYbdSgozNOx/9Y9s23uY+pYukguWEn/O7xQbP8NPfvMSlScrGXIqKMhN
      wdJ1iudfeJ2GXju5xXk07nyWbYebiM8rwxCdpLZ7iqxU81VqKXK2+Sgvv/IGLeNh8vKyzocO
      xEJuqna/ytZdJ/Eok5iXbmKs9TgvvfI6zaMhcnLTmGo5yB9e2U/YlEWuWUl7XR1ScyZx8o+6
      4yZi7a/npRdeoq7PRXpuLvpz4R6iEKbxwFZeefsw42Ed83OScA418NLzL1Lb6yAtJwdv/yme
      e3knU9JE5mfo6WuowW/MfE8Cso+PGGPdjRzbuwNPcgXp+gufRIIuOupOcPRUD6mFhcTJY4z3
      NHFs9zZcSSvIOCf7gx/84PFZ+OdEuk9uY0ejnbyMVAqXX4ei9zgnx8Po8KLO3MBdq0288Ps/
      YJq/gDiFlvLVCRjjPt2SGO/HPjFFxb3fYHPBjOc65hzGl7qEf/nCdZfIOiYtLLvrr9lcNJPH
      JmAd5HDTNH/12HfQEoZIH9Oq6/jiAyK1bf0ozA7ik2Z58vyDiE1T3+zirr/+NtOnd9E6YmN9
      0UzhC8dYGxOqxTz2zVR2v1GJZZGe+iY7d37t77FX76K1pxu3NY5vfv1W9p8cw6WZwG2YR4n6
      Kh62mJO66iE2f/kfEDqP0dw1SPqK+QBEHZ20uXP4+rc+x7E39jC2Io2Oqn5u+NI/IOk9QXNb
      B/pQgHseuZeq6n68k1Em5Wms0X5S298RfEEFS0vS6HlfGphIxIfEUMy8xGYiAkAUb1DOstIM
      Ot4n++FToNAIJ05OcPsXv8EDD9zNkgw1jV0TrPzcXTxw711Mdh1iyuLErkrh8w88wAN330Zh
      6sdTGvOjI2C3BrH0VXHydD1TnjDBQITgZBfHT1TSPmghdpGswxZkqq+Kk6fqmHSHcXmn0UlV
      tFZX0tI3iaAyI7W2U1XbgSjxMBXSExhppWfMeSG73EfBMwGZi0jTqygrycTiuPDrCG4rKQvK
      UOlSWZ4vMnx2EiFjIel6JSXFWVi9UgwxJ5UnG4koogw4RHSefs50nOUjF20K2AgkzSfPqCJ/
      XvaF8HBAmD5L/MIKdFoTq+ZrGBi14U8sIt+kIjcvG39YQCuL0FhTh18mZXjSjiFipbqp7z01
      uT4+1BQtXkRC3KXv8Dh9OmWlWVxw0qsoWrSIBO2lsh/eAZxWBj1ujmx9ip8++RzNk2E2XFfE
      oed+zVNPv0GX1Yc/GEbmaOMXP/4Jf9h6AKs/9mdOjCUhvXwZhfFGCE5z5PAJwtoUViwqQSkX
      6aneR9t48Lxs6uJyiszxELZz9PAxnOEokbCIXKVgqvc0Nb1y1tywiJT0BSTrlSjDwwxaQ7TV
      V+IIXEWRPCQXNhxE8ZKjqO9+JoozR1XF8w+SiEShZ/WaChLTClicIkMadtA64cfSfILuj5yr
      S3LRNcVLvbfCe/VBFBHf/VumYOGyVWRl5bAqU4k/LNI1bsXddZrW6b/cbOMf3gHUapJNOdz1
      lW/z8JoEdh5pIGfFbfzzv/4rj33jLnLUSkzZZfz7D5/in/7x78gNtrC3fvhTUP0DECLYPTEK
      Fy5n5fIlyMNOXF4nKlMBK1etJD9FgcN57m0rRHF4ohSULWNVRTnKsBOVIgVlkpby5SspK0zC
      b/eSkLWAomSRsDoFrTRKdukKkrQCkfBVdAB9GtKxZsbcIVraR0mOvxDEIzUkMdXVStAzQd2g
      hJysVOTjLYy6Q7S1j5BoUqEypbMw14Q1rCdLEyOhaDFLspXYP2qurjgzWms3/Y4Q/X3DaDUX
      Fe1LzsXRWoPHa+d0d4D8TDNaWw/9jhCDA8NoVEqU+iRKCjKZ9MopSpChzShiRaEBm+8vd1fx
      w9cA+nyWF53k5KFKkoI2stIWMT3cxdlpD9PdtZhKr0fiH+R4jQV9vJSzTshK1H9os58oEjl6
      hYdtzz6FPRLH+jvuI9UgULV/F2++biNn0VpuKzLQ1XQKZfpi4hVedjz3a6ZDatbfcR9Z2UZk
      7rM8/Ysn0GYt4a67MpHGvPSNQ9nSVGKWIt7e/nuMi26hQn8Vi31ZIiuWJfHOH54ibt5a7sxO
      xDtwiiZxEauzysjueJtfPVPL8k23k6Q0s6IilR3PPokmbw135iYDMDFtIzd3PiaDmdDLr7FT
      M59HV31EfaRGVqwtZNsLv4TUpdxxex6B0Wbq3CmsW7CAJYnbeObpJgpX30K6Oh79ugW89eIv
      EZKWcMeWAgAc9klSsvLRp4Jmx1u84Dbz6KOfxEkQK289+SI9LgdBSRsTa+9iS6aVNmk5CySt
      vLT1GI6AH1XLELfcfxeDb79Fl8M2I3vdHfzVDSXAbBJjAWGfldaGZtwyM0uWlKD0jlLX0o9E
      l8zSZYvQCB762to4a/ORkDmfRcXZfCIL/znm+BiZS4w1xzXNXGKsOa55LpsYS6H48+7hzzHH
      p8VcOPQc1yxz4dBzXPPMIi3K/0QEnCMd7N61l9rWPuJS8zBIPNQd3sP+k7VYwzpyMxPOOUEE
      XKOd7Nm1h5qmHtSpeRhlXs4c3cu+EzVYQnHkZprpr93Dgao+0vILUUeddI3YSYq/su3ekM9K
      48lDuLT5JOlkIIQZaquldtjHvIzE98iGfTYaTx7CrsklWS8HIcxwRx01A24KMpOIBd3UHHyb
      5gmBzIwUpO4heh1KEvWzn76GJ9t4bus7NDa24pCYyDMLHHtnJ0dO1dAzZictO593I1qilg7+
      +NpOGhtbsWMgN9WEfaiRt3fsY9glJT09gfbj26nudpKenYXCP0GPJUqiUfPBSlwFU7217Np9
      kH47ZGcmo3i3wGAsRF/9EXYdbUaVmE6SXo1rvIu97+zmrF9DVpoZuVTC448/PptYIECMMnj0
      DR7f38d3H/t7ShJCbHvpeTomQ+Qs28S9G8sYbj3F9n1N3PLVr7M8K57pwSaOHDiCLWENX7t/
      JbM6p/1xIcZwB2Dhyg0oYg5OH9qLbvNqtKkLuLFUS2/VPurSs1mVpQRRwB2A0hUbUIkuTh3c
      g/7mtWiS53NjsZa+qn3UJoqM9igpKxWpqRtkcbINv/hhaRfeT5DO2nrkgotua4ySFAXWvmYG
      HB4s7vfvGQfprKtHKnrotcUoSwNbfyv9VjcW94zjzTrRgU3MR+0fYngkmcDoMMmLUi+97Adg
      6zmDcfEtrE6ToNbHI9q7GJSkc8st+ciUagzKi2Xr0S++hTXnZMOT7bx9coA1GzahlcuJuLvp
      s6aQkeqko2eC+GAf0vSFV2ijKyA6wqEjZ1l60/W4m49xoieDW0qTALCPtlEzEOW68jSO7T9B
      5hc2UnmoivTla5huqKI1LYnl2QnALMOhQ64xDnQGWZQuEo5GGDj5Br2aVXznX/6Z+zcuQikR
      kOrTyYiXEjiXpk9ASe68VEKu4KcfFiFRkF1UQn5WCvKoB7k+FZM5ldKF8zGpBPyCiXjduVuX
      yMkqLGZedgqKqAeZPhVTfAqlC+cTrxYJxIwkaKOICgPmBD0x/wQj0zLyc5KICQKzX0GpWXL9
      LZTnJyI9F2OQWFTBDRWl6FXvf2urWbzxZpbmJ50/cG8uXMYNKxdiOCcrCFFUugT0GjkexwiR
      uAwSNXKEWcfdxLBOqygqTiY5JZl4vRqfO0RyRgrJyckkmeORn/fxCUxblMxfcEF25Owk8xaW
      My8zjbT0VFSSMHJNPCa9mqh/FFsonnSzlpggXoGNrgBBjkIjw2ROJj4+Aa36gkMyYB0hvXw9
      BaUrWJ3kZ2hqCLdxOctLCrmhIotR6xXVCBPoqj1O8uKNmBVSiAVobZ7CoLRxcPceOsddSDUG
      iotL0F/k/UrJKyE/5fI5hD4d7Oz83W/ZXjtFUVE2SmmUgdM7+c1L+5An55EUJ3uP7K6nn+bN
      qjGK5ueglMYYqt7Fb17cA8l5JCeUsChtiG37BklN0CBTTPDcL3/KH948gntWWag+fpLTy5BO
      HaLPpUbwiXgsNTz50yfYVtUzyxYEFAlSdj/5E372xK/ZU9ePqNEycfotfvqzJ/jD1v3Y/O+G
      1cVQmuXseeon/OyJX7G7phdfzE33wZ088dOf8tRzbzAVKyKNWqq7/MhCEkShi98+8TNeOnCG
      2CfRAxTxFKTG2Pr0kxzsDZB2cX21WBR1XBwSZMTFhfDYQ8gMOmRI0MSp3lOM8EM7QHi6nX2n
      JjEbw9jsLqamnYhSOcakdPIzjex67RVGnYEPa+bTRRDw+9Xc8bd/zzfuXUd/SzUWR5D0FXfw
      vW9/hUzFKE3dthlZcUb29m89xrceuIGh1iqmHAFSl9/Od7/9VfLU45zptFG8/gG+9uBaYqjR
      hHysfejbzI/34vN/grVwPwCZxsSm+7/BhiITuiQjAcx89St3IXo9s2tAgLTyz/G9f/5XHntk
      ExMjQygScnn4r7/LP3/v75mntTE+fa5IniAhZfHNfO+f/5Vv/9VNWEaHMKpTKNx0K9/9539i
      XYGKiUkfq7Z8hTvXzkOZkIjoF7jnC1/AKHquYFS6AqZbafbn8fV/+C4PV2g53Tl5/iOJWod9
      bJRo2MXguILU7HhiY4O4I1FGRmwkJ1xYl3zoGiASU1G8KIvR1jOMTFhRjbrYWJbKEbeCgopi
      DEeqiFxVTPAnQCxE5+ndnGwdQUBGUsFyotMdvPpKNc5wFKU2iRvv0dHdUoUyeQHO9kMcbzmL
      gJTEecsQbF289tppHKEoSo2ZzffqIOajrb6TjFU3Ihsa5603foMmexGLLxOOe3ncHH35TRq6
      G+mPtTK1agO3ZXvZfrCSjhEffb293HfPBroHJti8uoDKrduo62igP9rI+Mr13JkfZPv+k7SP
      eOnr6+Oez99Bnt5P15CPig3F+IbqeeGFdjLX3DY7dYQQfWcOcaplkIigYMH6W3FPdrL/QA0W
      f4T4jAUsTpBTXVtDcfF8BhqPU9nUT1iQM3/t58gq1NG6ey9PndiNKiGXLUsSIOqgo3OS+es2
      MG2vZ+crrxBftuGTKZJnysNsf4PfPHUMCUpWblmFZ+A07dLFLMkuxfvqVp44CUml17PRkIsj
      4QRP/+IJiMvmwUcv1C++Ij/A8f1vkVV+C3lmCSfeepFTA27Kb7iXFRl+tr2yjRFXGIncQMWt
      96Hq3srp/gCRmIS0ghV8/vO3zTJr8ceAKBKLRgiFI4gSCUqVGplEJBwKERNEZHIlKqWCWDQM
      UjkSITojiwSlWo1cIhJ6n6wEgUhUQK6QgxAjFAwhUahQymWzTPokEApcSF8ukSlQycQLKcQl
      UtQqJdGYgFIhIxIMEvkAWdU5PSNREblCihiNEAzHUKhUKGZVtE9EiEUJBsMglaFSqZBKBMKh
      ENEY59uJRCPI5QoQ3icrBSESJhiOIlOoUCnk52x0Tp9YlFAogkypRiGTfgJF8iB2Lj8VMgVq
      lQJiEaISBQopRCMhwlER5bn7EGIRQqEwErkKlUL2biWkubxAc1y7zDnC5rjmuWxaFEG4mlNO
      c8zxP4fLdoBQKHQ52Tnm+MwxNwWa45rms90BhAi2yTGcgXMOHVEk4LYyNu3607IX7esHPFbG
      LDOybtsYQ2fHCcZmCsa5vP6PRcVIwM3I0ADjVvd7HEaiKOCxTTIweBanP/w+WRcxQSTsszM4
      OII7EDmnr4vwlW5Jx0JMjY/jDb1rIwGvbZKpy/l2Lidrn2TS4UcUBOyTZxkZnyYcAzESwO3/
      ZGcSsUiAyZEhBobGCUQv5MIQhSiu6XEGBgaZcvgQgZDPwdnBAYbHLIRjF6b4s+oAQfcEJ995
      leqBGSdLxD3K9hd+x9MvbGfUHQFRwDPVx7Y332HoI5/I/vjxTvay84VfcqDTDYCISO3u3/Lf
      b9VdIuubGmDXCz9nb8e7jiSB+j1P89Qb1SDaObx9H5Un9lLdacdlGaS5c+Rj0DBG0+HtHDpZ
      xc5tuxi2X3jogu4x9u3YQdXJQ7y+r44YMVqO7uDQyWp2btvFgGWa2mOHOH3iIPvq+iEyTW1N
      J4EryokiYu+t46WXnqVhZOba0YCDI2//Ny8d7L1E1tF/hldfeoba4ZnOHw26OPb2b3jxQDfh
      wCj7397P4aMH6Br1MDnQRveI4+rM8yF0Ve1mz5FTnKlrZfqiFC6u8Vb27D3Omboqdm/bhyXs
      4OQ7+zldW8exPduoHbig1yy8OEE6apuxTrTjSLiBVVmw66W3MN5wHyvoZ9ur7/DIfdfR0NyL
      ZaSXcfd15CZoP4n7vTLEAM1NvSypWMbMTyng6DyGJ3kNeUr1JbItTV0sXlFB57uyXSdwmVdT
      IFOBfwJJxhpuXy5Q2zrIsDfC/EUVV69jYIDBYDEPPVKBr/0wtWNO8s1xALhH2zEsvZcbF+lp
      fHsHfY5BBvxFPPTICvydx6geHCWmSOOue7LYf3ySgVYXWcsWX1EWtljYSU23k+vKC5kZQ2IM
      tdYRv+A64m3vPewvRD3UdtpYtXQ+/nOyI2216Iuuw2yTE/NPYSq+mZLUSSZsZxkNwvzlyVdv
      oz9FdJyuIR13P3wPpvdlwjOklnHvw4tQEKbhwEG8UQPr774XuUKGs+MYDdErGgHULN18C4uy
      LhQ4kkpEgoEAEnUKPu8AIVk8mzffRKr+06wD+QGIAtNdZwinLSU/ecbtHXFPUjMsYePyLGQX
      e2VEAWtPI4GUJRSkzDx8EY+FmkGB9RXZM8mV4vIxOk/w7CsnUWukhJQiB557ip2neghdjZs/
      4EOelIxaKiEhQY/DfdFZ7FAQXUICUqmKpKQo1gkfsqQk1FIJ8fE6nGEV83VOfvP7HciNStwS
      CS3b/8DvXz+CbzajgBhlrLUOY/F1JOpmAuyCU730+pNZviD5vZUmxRjjLTVoF6wh+Vy4ddDS
      R5fHTEVJChIJKA3ziPRtZ8eJfiQBLzFFgNee/i1HWkY+liJ5l+CbZtQ2ymu/foInn3mdwYtG
      T6lMjjQaoKHqBOGMRWTHyZDLwXq2iepRLeU5F2LUrvyJVei45cE72bvvBPuCEibdgU/mBq+C
      aMDJjr0HiOlz6XP20qOIYR6xUN8RxDLaSHNflFMLslhdkoEYcvPOnn0EtbkMunvpkEZImbBR
      2+pjarSZ5r4QlfOzWf/Q11kXctHUMojCO8mCW79KoPcIdnc+aR+1SJ5KRczpIopI0BvEqL9o
      ZFIoCXi9iMThcSkxLVAz3ntO1hfEYEilqHwL310doKu+FUnQjmr157nVdoTGKVj7IdHaQWs/
      W/fVkJQ5Qc1IB+4kLW5tC102HZZuJ83DRlqWprEoM4GgbZCte6swZ45zZrQDu/n/Z++9w+O4
      7nvvz/bFNrTFYtEb0QESIAB2EhR77+rVLbH93thOHL9xnrz35vrJc+2b2E5sJ05ubFlWVClS
      YifFXsQKEgCJ3nvHAlhgF9t3Zt4/QJGyigWRopQb4vMn8Htmzs7MmTnn/H7n+9XhMdVRP6xj
      uGWCqk4jhQVPsOVr38Vt76Omy4Vgq2XV1i3U1rUSzIlH/Xm/G9UhxMbns3FHMWLXRfZc7yB1
      /ZRvWsDjoPLqRUx5jzA3Wo8M6Km7SqM3mjXrMv/gob+nZsn0sWx+/Bkmuq8ysFdEF6KGL1kL
      7oMotCZ2PvctvAHwtKiQBQsomWskZ14A3F04lOPkJpkZHxlAERLB9me/hScAvjY1greA4mIT
      2cUBcHfjUI6Sl2xGLgboqr2JNmEh+v5BqpuqkHxyVPfjg6tLwRLcw+kLkzi7+8lZXUBgYoAR
      IjFaZzF64l2u2MJonAzj6cgkxoS9nLrgwdXTQ+YjU7X2w21NOE2x5KqD3Gyop37ST9w0/LvV
      Ycl89Rtfxy9A902JQXMey9ILKfIK4KjDcT2E1EgdA4ODhIXF8cI3voFfgL4qie7wPJZmFDHX
      GwRHPY7ratIsJhC9tDe2Ep25gFF7La0NjXjRPpAyCEJSSNDd5PIViZDJIazWDPwTA4zKzNBX
      TsOwkvzeRqqG1CSnRfDepS6SSvRUVVQQHp9BavTUZqZPl0XxDvD2q+9wq+YGQ6oUih/ZwObE
      SfacuIHLBwt3fIXCiFEO7D5ARV0zWms2q7Y9ypqilP8US0zB8V76RAtJEbd3dwSctA34SEs0
      M9jbjjI0HrNx6n/CRC89wSiS3y9aCjhpG/CSlhgFoo++/gms8RYE1yi1t2oISZxDRnw492MU
      6R7rpaqmCW1MNnmzYhDHOuiVYkmNVDLYVktDv5v0vDkkROrx2Puoqm5Ebc0mPz0GlVyGfWQA
      pT4Ko1aksbwMuyaeebNTPpMhoXOkG7cmhuj3d5P5x2gblpMWo6e9u5eYuERC1FNHnBzpYVJt
      xWr6UGx8GAhuegc9xMZF4LP3U1XXiSVjNilRxgfSCXyOIWqq63GpLRQXZKGY6KRfFk9UoJNr
      NV1IgEIdQn5BPp23Khm/XUtlzShmdnLEjC7QDA83M7pAMzz0zHSAGR5qPjIEmqmOnuFhQS6X
      yz5WGW6GGR4WZoZAMzzUTCMPIDDS00H3kB2FwUx6aiI6lUhPcwM2t4LkzEzCdUpkksRYfyt9
      dhUZeclogIDXTlNtJ9HZeUTpv0C90YCLcwdf5WL9MJIYxG9M4anlCRw7egUP4PZ4WPnc/8vq
      7HAIeLhw+BUu1A4hiUF8+kT+n+c3U39uP2XNo1jSCti+bTmVe39LpU3O+ie+QWbIENfaPDwy
      L/s+GyrSfOUQh85Xo4op5IlH1xJtmFqSDXhGOfvOm1zvdJGxdBOPlmbTXnaEA2duobTO4fGd
      K7HfOs6+i+0UbnicjQVmyi+Vk1iyDEvIvX7FRfprL/DW4YuI4Rls37WVVPNUJl0SvVx852Uu
      NtmxzlnB8xtLGGm8yJuHLiCEzmLbri0oui7y9skq4hZu5qnSNGqvXCW0oJQEw4N4zwZoqbzM
      zetlxGz8K5Ym3P2Pz97Pqy/9mj6XBkNoLi98dye+hkscevcSo0ELj379MTIipmy8pqEM56Di
      fDk2r4e6S8fpVyYR7SznpXfrkLs7udbkJS87CYXk4eCLP+Ltd8cp3jwPkyTRfvV1fv6Lw4TO
      XUa6+cEphH0EhZqUnGJKS5cxP9+CX4hh3uKFLFteyrKlBSgnIbs4H6NKBgoVydlTsQvnROMN
      WLEaxul0WPn6V3dhmqiiY8KPXcjhsQ3JNNbZUfgGMCRkYTbcp9xXsJ/TZ/rZ+rUXiB6vo4Mo
      UqOmEjSjHddp8mfxtSeW0n7hKqYcM9fP9bD5a18l1tlA26TAgEPJM48upK56GKvcxogxk4zb
      mc97QhjlzIl6Vj7/dbKUg9SOimQmTIlNBW03Od8Vzddf2MBo2SUUGXHcOl3H8ue/To5mhOo+
      Bz6Xi+Ub19Lb3E2iwU8XFvISwu+9PX+8sTgdAqnmIP2aHNLu7nPHbbcxrrTywgvPsmRBDjrJ
      wbkDlyh4/GtsW15AaIgGxW1luGl0zTCWbt3CxjUrmGXVE/COc/VkFQt2PMm2nU8QGLjCiMPN
      4I39eFO2kBo19aB7R+s5X6dl3dL0z5SU+VwRPdy82ED2wtmo5YAkMVxXhT8ph9gPvyVFD5Xv
      1ZGzuACLOZ4QbwN7395H1YCOjOw05H1XOXLiGqJ8kmEhlOFbZ6lstd2fSZ5jCFlSPtF6DTnZ
      cQyN3c2/iM5RojNz0egszJ0l0d0xDIn5WPVqsrPjGXYriQwOc+DAOfxqJcuUzAAAIABJREFU
      kQ6nDFlXGaevNXLPQi2uMfzWTBKNapJT43G6P2iS10NkfjH6kFDmZWvp6BrDG51BslFNUnI8
      Lr+ESenn7LETOJVKOobG0Iy2cvT8LXzCg9hhqCY5MwNTyEcHMb7AMG03bnLgwBFuddhgsoue
      gJ6uK8c5eqHibjk305wD2Jrf4+d/978oH4umMCOaSZcKU6gchVyFTq5iZLiVQxU+NpSm3B5T
      iVReLCO2uIjwL9Eu2NHXhs2UQuptCU+JII1dNjKTYz4S6xzoZEifTJoRvG4Hojaa3NxsIrVu
      Bsf0rNqxhvnzl2ExqNF62pnQxNBVc5GRyXv2ZASFAtEfQEQiGBRQKT9wsWRygoEAEiIBvxy1
      VoHo8yMiEQgIqLUmFj6ykpKFyyiKkqHyjtAmRqLquUbN6D22Ry5H8gcQASEoovyguoRCQdDn
      R0LC75Oh1sqRAgEEQBBElCo1s+c/wuIlSymNV+AXoM2tIHysivLBL1Y7KSw6mw1bV5GdaqH5
      zDFaXaBW60lIzyRW1sWxso67P3k6B4zKWMb3/8ffsjbVzcmyBgy6AA6HiCAGcIsBRqrPc7ny
      Jq/85hXKG65x7vRx3t53gsvv7uPQ1QrOn3yXwckH9ns/ka7ODlJmZd75keJoNTZVLrHh2o/E
      9nS2kjQrCzngGO/FJVnIyc4m2hSgZ8CBKSoBq2ocvyEenUIgKjEDk0ZAuJ9PgCEOZX85XXY3
      Fbc6iY64qxujDLMyUFuBa7yHyx2QHB+LerCSTruHm1WdRIVpUBkiSQiVMySEkagTMcSmkmJW
      4rzXRL4uCtNYHQ02D42NrehD7l4nefQsxm9dZNxh40Kjm7TYKMLs9TTY3DQ3tRKi0aLUhRFv
      NtIzqSYzQoEmMo70mBCc3i92ad091IPbFEtWVjphCi8ubTLxukl01lQykqII+O52yE+fBI93
      c+hSNWqVClvPOBGZsSzI9PPbfW8xbhWQW+axcMsSlmwSYLKFXzuvsWTZKnYtXo4o+bjw4m8I
      PrISyxe9RUAcwx1MIj/hfc/iIF1NbkqWz73jX1Zf+R7quCJmRfmZ9CeRlzT1qYhLLSGp8yA/
      +fFxEvKXs2uJBYRJ2kb1FM2NIjhSwL63fkN48Q7MpvsxyYuktDSdt3/3S0y5a9mWHMVk63tU
      SIUsTSkgp2U///xiFaVbdhKpimDZ8kzefukX6LNXsz1tSgh3aNxJxqwswkwxKF55mWOGAr6y
      /B7bIzexZE0Je177R6SEJexclIa7p5KyiRiW52axOK2JF//PG8xevZ1YbRhhaxew5/V/Qohd
      yM4tGQCMT4yQmJaFMRrM+3fzusPK14sfxAKIjbd+/hJNThcCVfQt3cWORBtV8iLmmSPoOPAq
      Bwf8zF21jfxQA8mleex/458Z087iiUeX3DnKp+sCCV6621oZGHOiNlpIn5WEQS3R1VDHsEdO
      anYOETrl1EQn6KKzw441PZ6pd4fAaE8PUkQc5i9yFWiGGabBjDDWDA81M8JYMzz0fKwukN/v
      /7jYGWb4L8fHdgBBuI+lvRlm+L+ImSHQDA81/0lkHD5vRMY6qzly8jJOycDyLY+SbnJz9dS7
      3OyeIKVwFRuXZt1J2tm7ajh68jLjQgjLtzxGRpiXslPHqOyaIHHOCjaX5tB88R2utMvY/NgO
      ohijtneS2emJ993S8d5ajr57AX1mKesW5aJV3jV6a752kjO1dhau3UhhciQTffUcPXaWkPRS
      1i3Jxdt1nd2nW1myaTP5caH0NlURkjSbSO30ig9EwU3ZsX1U9gaZt2YjxWlmhpuucuhUBRGZ
      i1n3yFz0t58QSfRy/dg7lHf7KV6zkaiJCo5fbMIPyIxWNm5Yx+jNQ7T4Eti04RGMvl7qx7Tk
      J5v/aBvuh/76i7x7vhpdSglbVhajV99+n0sCtubrvHO6gtC0heycF8ore04w6Z0Sf8kq3cW6
      wnhgOnuCCdBafomzJw6gWfE3PL/Qgr/1FN/5t/MkRxnRJxbw7Mb53Dyxm0utdkIt2Tzx9Cqu
      v/bv1I4G8Yx04ovZyN98fzOfzVPxPpCC9Hf1oDRFohFGOXG6kqWrl+F1+rFYjNSd3UNw9nMs
      SlKDFGSguwe5IZIQ7Jw4XsaidSvwT/iwRBtpOLcHT/pChmtczC+SqOmOJDfazoQmmfyUqPtr
      pzjOkdePMmvVemxXj6MqXMOClKkHxt5TwYnySVYviOHo8Tq2PLuCK7uPkLJyPWNlJ5Clz2Gk
      o48FhVbOVwfYPFfD9T4jSwsT7niQ/XGCtJ7aw03jAtblmBEVKlRjDey+PMymDUvRiAFCjGFM
      bQUO0n5mLzd081mfa0aSqzBoFQQCAhIerpy4QFJRMvXVStJiR3Eq0zF5O9CnFJBkNnxaQ+6N
      QCevv1LHyl3LmCg/Snv0StbnTd0Px0AD+880sGHLGpRBAWOYgaA/gCQJtJS9RyBlHkVJkdPd
      EinDZEmlICMaQZQACdtAL7NKn+CHP/whf/bUOoTRBipGI/nBD/6CAkMvl+sn2fiNv+SvfvA9
      VszOZN7yIh7QZfiEJiuJTU5AHXTT39WO1pJGeLiZWIuBsYFOhv0W4iIUd2JjkhLQim76O9tQ
      W9KJCIskNtrA2GAXQ14z8WYNMtGLy+1FEkYZGNcQqQen239/BnCuXrzmuaTHhDOvIJEh+10p
      wYB9gOjcEiJiZrEwTqBzsA93ZAEZMeEUz0nGNh5Aiciky4MkeWntdZNi1TDucE9PnyMwTvWw
      gQVpRrz+IGqVmp7+UdLSEpF5XaDUonz/6Qg6uDWoY9EsIz5/ELVajVyhRqvVEuivwxdbQoxR
      hRTw4PEFEL0DTAgRaCQfLl/wwZjkyQyEGgI4HE48GDGb7uaZnLZOIpLykbweZGoNCrkCrVaL
      Wi4w5JFItdzVuJrGEEiJJTEJZ937lY8iE+MT9Fac4pXJRgoWrcI4YSc0NB6tSktCXDQNfUNI
      RTF4x7u50iPnqzujHlBF4B9jkorTpxlQmcjMSkUhExhsLud0zRCxcUno/0DOxEXlmTP0Kgxk
      ZiajkAkMt1RyurqfmJgkDPo0CtM6uN4QZFZKGFKwn6P7y9BGJbN54yrCNPf464JB5Do9CmTI
      NSo8tz/RAJIgoNZqkCFHExJkZDKIPMRwO1aJBz0rC2I5dLmdrMx4hICTU8eOIAhq1j77LEm6
      Tzu3H59/gisnjzLp9qFOKiHf4KKnqoz2GpGAOpQ16zeRHKmFoB9/wMHVU0dxunyoE4p4ak0R
      csFFeZOL4uUWdJpoUiOO0W4PJTpUiSg0c+SdS+hSC3lsVTHKz3ujlUJPdBhcO3scFKHMz7/b
      ASSXnZamCkZaXIiShpWPPU2yUcZ4RxmSdR5hIXez9/cwCZYza+VX+etvP8XSwhj2vfE6Y26B
      oDh18/w+LwqtBgjSVX6R8DkriJy2j9bnhCjgcMhY+thTPL5hIb0tlQyPThKauZQXnt5Fos5G
      dfPonVinAxbvepInNi5loLWCoREnpozFvPD0o6SaRrnVOEJK0Wo2P5JJUG5AJ3iYu/4pUsJ8
      eO7HJM8QidjXwpg3QHvHMFHhd2uB5PpQRjrbp/ZUdMuJS4xA6m9h1Buko3MYc1gIhvh8Htu0
      AL9XjVXhI7F0O1sLQugam8a5tSbiwsOZv/lJnntsHYFxG1GGaOJKFvPcCy9QlKhmxDalqYrG
      SFxYOCUbn+S5xzciOGxIkoRzpIugPo7wEBUyhYr8ZVtZlG1Ga44Cn8SqLZsx4XlAJnl11PuT
      ePTp59lSoOdG0/Cdf6mtqeRmzuW5559jeZqCtiEPosfGjRY58/Mj/+Bl/OlPpiQSCATwB0SE
      oB+/z0tfdx8h1gTCTCbkUpCwyHic124wMJZJTfMAqaviwNnLuRtjLPl29uff+z8NMUBH5RnO
      3GghKFOTWliKzNHOO3suMDTpxxSVxoYdJhpvXUYdnYOr+TynbzQTQEVKQSkKVxf79p5ncNKH
      0ZzChh2hIExSX9ND4vxlyHsGeXvPrzGkL2SO4T46tyqOnNir/P5XP0NlzuHRRyOYbL/MLWk2
      8+JyUFzZzc+vBUicu5qVuljcCWW8/KufoozMZtejU3OFrrZWTHE5mI0h9L76MrWKGJ4smMa5
      ZXoKiuLZ88qvsfuVZC3egHVWKPXH3+WfTh8kLHE2W+bouHLtKjmziyksSWT3q7/G7leQuXA9
      crlAV00rcSUbUb1/f4N2mtsdZC/OYXRcxYHX3yCmeDWKB2GSF55OnGsv//JPJ1FqI1i+dSGO
      1kvUygspsaajvnmAf/r5QYxxOTy6UIetuxFtTBKhH9IRnYYw1hAHdx+k3T6l+hyWvYxtWQoO
      n7zMuKBj6fptzEkyMdp4hbdO1zBr3hpWzZ+Fq7eWSx0CG5bO+RKGPzPM8OnMCGPN8FAzI4w1
      w0PPx8qiKBRf4jauGWb4Apkph57hoWWmHHqGh57/2h1A8NLdXM+A43aCSZJwDHfS0DH0MbE+
      elrq6J+4m4xy2rqobx8EwNbdQGVVA5OBKQO4odGPMdq7B7yOYWoqb9DYNUzwA+vlkhhkpKeZ
      GxVVDNw2rPM6bdRUXqexc4iAKOEd66W8oprh284yjtFB3MHpftBFnMPdVNwoo6K6kXFPkIBn
      nOaam5Rdv0HXkBPxA7GTth4qb5RRUdWA3R0k4JmgpXYqtnPQgSgK9LVUUdPYiTcIos/B8Pjn
      YyT4xwi6R6htaMf3AdsjSfDR11rH9Rs36bZNeb5NDLZTcaOclt7R2xUNU0xDF0jCaevk9L7X
      6VZnkhqlRRqq5n//6recO3ee8i4nOSkWqk7v5T/2nsSptZIWG45/cogr7x6mYlDBrOSoL0Ua
      Zby7jiN7X6Y3dAH5sSFIUpCL7/ySfXUaVs9L+4PYid4Gju75HZ2mBcyJm4q9tO9X7K1RsqbE
      yNG3LuDw9jHkjyVc6qOh10tSbOT9NVAKcPXoW7RMiLTcqsGYPAuzfioZ5h7r5Ojhc3h941xv
      tFOYl0DFsT00jYu0VVWjt1qou3qZkdEBGu0q8uKCXLrWS2xyHJrpGBaIbhoqqhiYcDPW10rL
      iIRV7aS+uQe3z0VdVTVRqbmYNHIQPTRWVtE37sI+0E7zsEC0dpL6pm7cPhf11VXoLXquHC/H
      NtGLqEtAGG5gwKcnNvLBFcFIUoDm03v5/dUO5s6ejUEz9ZSNdldw4lwTctkkVWUtxGYaOXPo
      Ml6ZRGttI/qEZCJ1an70ox/9aBpZHB9tta0Inl7aRrysIpThtkqC6Rv4H4/OBaD92j4uDlj4
      q79cz9v/9huuWL5LjK0ep+ims9WGuPyBXYNPRpqksrKV4gUl1AEgMHTzJP7k1aQOfejDJ7m4
      WdFM8cL53LwdO3zzFO6ElaSrAY8NWUwRy+dLXKvqoMMtkl284P7b6GmhR5jLo4/NxV13hgt9
      E2RZpkoGnb11RMzbxbo5BqreeZumkTY6A7N57LFiPA3nOdfZj6i2sHpFIkfPDdJS5SR9ftGU
      2Nd0kOspKF3FHDFAd801yscgKnk265Lz8Uz0c/bstbtfJLmO2ctWki8G6K27znWbhDkpn3VJ
      eXgdA5w7cwW/y4Zp1lJyYwcZsHfR51WRv+ABmuQB9s5q6mUZLE0f/IO/+53jhGfOZ808M2XH
      TuMe6sRtncv2tVm4605xvnuc9NtFetMyySt4ZDXZMe8bi4nYx8YQnTaaW9oYdfpQ6/SIziGa
      O2yEGGQ0tw+QVrKCeenWLycJJgn03ipDkbGIlMipGibvWA/Xh42sKIz+iAFcX9V1ZLMWkGqe
      evv67H1cHwxhReHt9uvSifFf4XdvXMFgUBHU+Nj3679n98mbn2HI8TF4PSjNEaiQYQrVMf5B
      k7yAD31YKDJUhEf6sQ/djTWadEwEdRRavPzLvx/GYNbgkotcfPWf+cVLhxifZnVGwNfFi3/3
      E45Uj5GXmQJ4ubbvt/z8twcxJOUTbbz73RYCvfzu737CwcphcjPTkOPjxsHf8bPf7EebkEdy
      Qg7ynoMcvtyJzOtFVI7y0i//kUPXWv7A//hzI+iirnGAuXNzPvKMhSfmQPNRfvLTf6NHk0BM
      UiFJkxf52U/+F68du0z38F2NnnvK40dmLiPP08a1i0don4jmO1/byOZFZdTUNjI64kCZ8iCU
      wKZPwG1n38EDTKhucMnRQYdmAmPmCGcrJ2isFKnrFElIiWVtSQqix8GBQ+8wIo/j8mQXrSo7
      Edl2TpfbabgpUdcZJD45lrW7/oT5XjuVNzvQuIYp3Pnf8DSfYtyZhy78HhUvtCEER8YIkIx7
      wk2Y6YMmeRpc4xNISQbso2rCc0PoqR8jQCoeh5tQk5XkovX8sHgZ1Vdr0PrGiVj5AitGTnFr
      EJbHf/rpVZokvvHf/4bRzmqOVdaSsXExC3Z8g2LPBGfPnKY7Jo7M2Ck9G4Uqnq//979hrLuW
      Y5U1zIpZSsnWr1HoneD8mdN0xyaw8SvfY3Kkm9puDwFbN5ueeIKq6iYEIQ2F8vN9FY7Vn+DN
      d2+QVFVFZ1c3/cEkvrKjBA0w2HQDXdHj/HV2CNcP76FxopgVj/4JK5DovXKIKoPpznE+ewcQ
      ReShCazbWoDC1cs//PotJn0ykuYsYVbuCC/9opLM1E+xKHzAKHWRfPOvf4oogavuEEf8pawr
      DmP1TgkmW/n9iRFWFSYy3NOGIjSeP/mrnyFI4G04xD53KWvnhbNqhwiudn5/fJDVRcnIRR+t
      5dcxZq8kpGuIy2Wnkcvl5GruY3YTkk6C4mX27uvFbZtg6fb5+Eba6JHiiInPZWzf2xxsM9Dv
      j+Yb5jQcqlfYs68fr22chVuLAOirr8EXlUiGRuLS5UtcdHuYM3sa53aNcv5aGW6/DMFtR9Ck
      0FXzHtVdLjQqiX67jzSFRFtHOzHhRsorbjDplyF4xgkqE+ipvUhNpxONGgbGvCSqFCC4aapt
      JnbucmzjVVRcvoxXH/NAJPfDcrfwj/+wAQJujp08SXFpPqKtlTZZAnp9KJ0VFzjVp2FoTMYS
      jZtbF64wMOmio9/F1sfuzt0+PQ/g6Wf3S7u51ViLXRVL/tL1bEiY5OCZChx+kZSidWwpsXJq
      32s0DAZJmLuKxzcs4MobP+F8zQCDEwoKFq3iySc2Eqn5o2d6IAiTwwyL4cS8Xy8edNE7GiA+
      OozR4T4UBgthOtXdWCGcmND3Y930jviIt4aD6Mc2MkmkJQLBM0FbcytaawaJFiP3U+vldQzT
      0tqF2pxMWrwZ0dHPMFHEmeSM9rXTYfOSmJZOdGgIXqeNlpZO1JHJpCWYUcplOMZHUGrD0WlE
      uhrqcKgt5MyK/fRFBzHI6EA3HX02ZBoTKbNmoRPGae/oxukTiU7MINGiZ2BwmEizGfdIH+29
      w8g0xqlY0UFHexcOn4glIZ1EaxgKycvwiA+zxUTAYaO5fYCIxHRiw3UPxikSQBSwjY5gCo9C
      5uzHJosmxiDS197EwEQAc3waKTFGBlrr6bX7sSZlEB81dc9mdIFmeKiZSYTN8NDzsbIoM8zw
      sPCxHWCmHHqGh4WZIdAMDzUzHWCGh5pp5QECngk6mhpQxBWQFqmgu7Galn77lPyG3sKiuZm4
      B9uobh0kPD6T/AwzjVcvM+ieSogZI1MpKEzli1sFFbH3NnL1vYv0hpbwJxvnEnCNU33jElfb
      bGzZ+hSJZs3d2L4mrr13iW5DAX+6uYSAe4KaG5e42jrIxi3PkGwOcPSlF6mfkLN8+9fIMQxS
      1u5jxfycz9CmAB1VZdy8egHlsu+zJUeLa6iNy1cvUedO4M+fWvGB2CBd1WVUXL2AYvF32Zqn
      xz3cweWrF6l2xvL9Z1YxaWvlnTfewW5I47Gdm1D2l9OhzWd+augntuDDTNzcy//c10a0XkXG
      0k1sz5Pxz/+2Dzdgistg544dRN/2dZisfof/b28LVr2K9MUb2D4vlksnDlNW309Uxnw2rc7m
      9Mu/p19pZdOOx4lyN1DntrAkN+4zXKPPwEgjv3r1CG5fEM/IIClb/owXlk3Vd/nGevmPl/4P
      o0ED+tBsnvnWViarz3DkTCUuotn6/E4yIqZ+2DQ6gJdb589SV3cJYWEKaQsj0egMhIVJuO1N
      HDreRqZVycFDp5mzYC4Vx3czKX+OeFMYYWqBwVsnKOvTMKcw9cFciE9AFRJByaJFCINTa/oy
      hRprRhELQuo/tEYuQ6UNp3jhQoID8rux6XNZGFKHXJLA3UUgdh3f2CJyvbadXpOT5FmFn7FF
      MoxRyaxa5uS924kDhcbI7HkL8TZ81D7HEJXEymVFXLz9kZZrDOSXLMTTMKXUMOkYJG3p84QL
      TYwO9OJyaMlL/yyFZxJjowJPfe+HlNzOC/l6ykko3cX2hbM+EjtiC/Dkd3/I/NtCbyMNV7Dp
      svjOD55CIQbx2qsInf0kC62DDAz04fK4yJz9AGuBzFl858+zkAQ/1987jzXnru2VzxcgpWQz
      X1s2H4UMEO1cuTnCuq/8Gcl6BaLiM8miaClZv52luTFTNRdyJdHJmRQVz8bgsJFduha93I1f
      Y6G4qIhEY4BRp0By3lwK8zIYc8hZs7KAj5oSPUjkGCKtRJlC7tSJKLU64mKsH5Mgkk3Fhuru
      xmpCiI2NQfF+9kYXh3LgInsPXkau9GOX6Wg+v58rDYNMvxRIiTk2HpP27jtHG2bBGm74mESa
      ksiYeEI/YACnDY3CGmG8c8N0BjPdNw5yqXEEv8OGUhHg6P6jNA85p9meAMP9Nt47+BK7D5yh
      f8LHpMNNx43D/P4/3uBGyzB3JZKD2AZGuXToJd7cf4q+cR9DjnGEvkZ2v/IKF6q6kHSxOBuO
      cuJqC7iH8ap0XD52kKqusQcjjHUbn6ufUa+B6PC7Qki+wBB1Fy7wymu7KWseBFcfPS6RiqNv
      sfvYJeyez2KR9EkntrVxrknJzj9PxCjqyTNe5Wf/8DOUplSeTpnyrJzor6Jfnsr2L9wf6XNG
      Fsaqxx7F6XLT3TOE3NWFJmUBzvZrjMZtJvp+bJLuEWNUOlsej2Jywkb3SICR4W4KsizU1LWS
      ET2dr5OKOTueJcXtw9HXyOmL5Ty1poQXorPw+91cv3SSNuMuMqxaQMnsbc+Q5Pbi7G/m7MUy
      5lpURKXNJic9ipryizSHrmTTU4/jdIzTMeRDtDeQmJ5Ba30N2XHLUH/OtUAASAHay28SW7iJ
      D1akRMQW8Nw3U/H7HZSfPUHT6nkYQ60sWJlNoKecE9faeWZlFnDPk2CJ1pvlaLKKSAyRM9JV
      TbNvFj/8qx+yLsXPhYoOJMlN9XvXSFu0/EMqbF8EEkLAj8fnI+D34fH6EYQgPp8Xv9+P1+sj
      EBQRggEE8RNivR78fj8+31SsRh+K0tmDEJaMTgUanR6lXPoMeRORgM+Lx+cn4Pfi9QcQg4Gp
      tvj9eLw+BFHEHwgiSdInxwamYkXkGELDGRsaIjo2CpCj14fAdEWo/A4aGrqRhxgwhGiQRIHh
      3lZsEyJGkxEFAqIEgWAQ0e+kvqFzKlanRRQE4qKiGPVMEmIwEqJRIJPJ0RnD8I71Y7LGIZNA
      q9chn55Q4z3hH+umXUog16pCBkhCgIAg4exppnMSjEY9SlFCNCQRqx1hUtRg0GlQyO8+j5/+
      BfDbuXzuMjXlHbRp3+W4egnrCiO5XNnJ/Ke2IQP0EdGoHGfYt8/JSP8EszdE4e6u4dKgmW8+
      a72vWpl7I0j7jdOcuNGCAPymq4ftS1O5fOIUw16gqpfiVZuJCnShickm2HqZ42XNBG/HbluW
      wdUTJxjyAje7mbtiC4szTfR7zBTmhxOMLKT+8EFC52zEbJruR3SSK/v3c2toHGjl9d6FrE9w
      c/B8FX4RftPdzfatS2npGOSR+WlcO3SQyv4xoJlXe+azKdnHwXO38Inwm65utj66iWSjB8GQ
      TnyMBaM7kgMX6pm/bsP0mqM2kWoVeefVlxBDk1m3aS0W5QSNJ49zotdNyertpEfJqLh1k8yc
      OcyKlfH2qy8RNCWybvN6QkMVzHde5I3fv0xS0VpK0sJBGMepSCQ7zoiLDI6cukz60o2oprNB
      5x5weCAnK5X3a3EnuytokOdTaIll4sRRXhoMUvDIerKNOhJLizhx9C3GtGls25Ry5xifrgsk
      eOnvHcDlnxo3qUxRJEeFMDw0QaglCo1ChiQJTI7ZGLJPojVGYI2KQPI5GHGJWM1hM8JYM/yn
      ZEYYa4aHmhlhrBkeej5WGEuj+RIK92eY4UtgZj/ADA8tM/sBZnjomcYanoQoBPH5AyBTolGr
      kMkk/D4fggQqlQalQoYYDOALBJErVWhUKpCC+HwBJJkctVr9YDTi/0ibA45+Du7ZS/OoSOnW
      55ifpqP56gkOXqwnOnc5T2xehE4hm4p1DnB4714ahgOUbn2eBbMMtFw7wYH36ojKWsaT2xbT
      ePI/uNAmZ9dzzxInH6Gi08m8vLRPbcmntdPWep23D5xBn72SHWtKMNzOmYhBD7fO7OdE1RhL
      tuxkSZaV0fZy3t5/kpCMlexYW4y7+QIvH2tk+a7HmZ8SQVv1DUwZ84gKmca1dg3x9p7d1PdM
      IEkixqxH2BBn48DZevyAaLDy1FNPk2HVg9vGvr1vUts1PhWbWcqfbS3g8rF9XGocpWTtoyyf
      Hc3l/b+j0ZfMo7s2EubtpGpET3FG9H1eo0+6dAKNlw9w+GIrSfPXs2VZHtrbnk5tl/fy+pkG
      YKrcZOc3vou28xQHTlagTZnHY1uWE3E7yz6NIZCT82/s5nrvOB63l4XbX2C2vIU3jt8gEPCh
      SZzPs2tyOXvoLTrGAngEDdte+FPEqj0cKe9FFgySteZZti9K+wLFsQK0VN5EHpNJgsnLkWMX
      mLtgAQMDDkqKMmm6uAebdRvLs/RAkNabN8GSTlKEwJHDJylYtITBvnGKi7Jou7KXPkM6o+0K
      Hlkkca1eT270GG5TFnlJEffXTGGEt18+TtGO7Qye30cgbw3L0qdJ7vxdAAAgAElEQVQemJH2
      qxyvEtn2SDzvvHWFjV9dw3uvvkvB9h3Y3tuPJzGP0e5hVi1J4OhlB1vmKikfiaa0IO4zLzsP
      t1dya1DL6oU5U3t3JSenD5wjf91moj/UmUa6blHRoyRF0UeblMCa+cmc3b+bsIxM+vrM5MQP
      MRxMxuhpIyJrHgkRD6gKYLiM319W8/jGHBpPHcaft4IFH7ofkmeQY8fqWLwxmf2vNLLt+bU4
      yvZRaVjC9rmx0xwCCSpyHtnGd/7i+2wviaShuRd9TC5f+fb3+M43n2Oi/QZudCzb8gLf//5f
      sCDaRV3nKA0trax8/Ft8Z/tsblyt48GL5H0QJbMKS0ixaBkdsmE0J2OJSWBBSS4+hw2HN5T4
      6PerkxSkFRSTag1hdGgIQ2QKFms8C+bl43eOMO4xkhBvRuYaoK1jACQ7A5M6NP4RBsfc0068
      fiyTfQRji0kK11FUkMzQ2F2TvOD4IDF5RejDElicAp29/fitc0kOD6FwTjI2p4gODy0t3Yjy
      AC0DAWJDJunoG+UzidKIXtoaO0jJymAqnSoyUnuVQPL8j35JRC9t9W0kZ2cSYY7APzFAQ2MT
      gsZKZGQoAXsXPYPjSN4+nDIzntFBRpzeB1MLpNASmOijpaUNucJFc89Ha6B6m1vQzUolTBVJ
      jGmS5sZGuiY0JEaF3In59A6g0GKJMePvq+TojTHmzknHaI7GyASnD+zBnLMKc0Q4lqhw2q8d
      5PpoJAsyoykpmsv53b/mp3uqKF1d/MW6RCJDJpNovn6OWz0BFi2dh04JvsFaTlxqInpuKbPC
      FX8Q21p+nopOL4tKF6BXgn+olhOXGjEXlJJhSWFBUSijDgPWMA0qoYeLl65z8vQZ7N770EAS
      BORqFXJkKJUKAsG75WdIIkqVChlyVGoRv1dArlEjR4ZKpSAgM7JsfiZ9IzLy45SIwQkuXC3n
      wuGDtH+0uPQTcfdWMaDLIS1CiQwQ/U6utwWYlx35kYfD3V9LrzaL9EgVal0oSu8wtXVNuCQV
      elM6s2fJEJURyAUtkqeRa5cucuy9CoIPogdEzmbt3FDaGxvotY0TED58jiCtnQOkJceDTIVJ
      r6CruZ6+cTeKD7z3pzEJFmi69DY/e+UqT3zvByxJj8Q31sq//uO/4cvaxjd3zEcjuriy9595
      u1HPn37ra6SEi9y4UUfp49/kz56eT/X5cibuw0vusyPQc+Mstsgi1iwrQK8E72gPJ2om2LSh
      lJSoDzoWi/RWnGcwtIB1pYXoleAb6+NE1Rgb15eSZpkSUUrIW0JpgQW/MgI9XvJXbCcpXMDn
      FT6+CdPBFI3UVcOQy0d9Qx/REXdrZuXGSIaa6vC6h6lslZGYYoHuGgZdfhoaeokK16K3ZrJ+
      WRbjbh2J6gDxC9exfraOHvv0Ti8JAW422pibl3jnQRgfaEERmUbYh/SOJDFIVcMABblJyIHm
      1noiUpfy2K6dmFU2egbdZM5bTV5cCPpoKwQklqxZg0nuR3oQJnkIWGbNZ8uW9ehVYeQlmz7w
      PwlX62UmohcRb1KBrZZafzKbt+9kQ2EoFU13pRQ/fRLs6ubokSrmPfoCGvcoY3IdzUd2401Z
      QUmSgaFRO4rxWg5XunnhWwUEnXacihACfi+TE+OMCx7EgAzxi5wDC36am+q50HyJc0o5+sQC
      Ns01UnPqXaqunQVtKGt2PIfJUYM6NpeepjrONV7gvFKBLmE2m0siqD51mFtl50FjZNWO51mU
      qqaheYzMBdlIvUPseeuXGHNXUnw/JnnKGAqz4NVf/j2auGIeXxzJZOt7VEiFLErIJ/T6m/z0
      Fx6yl24iVmtlbo6S1375v1HHFvH4bd3Nns4erMm5RJhM2H7/Eq+rk3m+eHqnD/ptuAORWO6U
      EvvpaRokdeH6qVLwoJeLZeXkFczHpBrF6Y1gduTUmD4rM5vDh/Zy+rCb+OzFbIkzQnCM9n6B
      vEVWxpwmDrz2GgmLNqF4ILVAAS7ve5FrXZMk5C9nZ0wojpYLVMmLWJosp7LFx8Llt+vQIvPI
      kb/NL/7hOCpjHGt3LL5zlE+fBDt62XfsLKPOqfFpXP4SEgNtlDUOTI01I1JYW2jm6pkbOACU
      OgqXrSVDN8LZc2WMy8JZuX4NCWFf7I6AGWb4NGaEsWZ4qJlJhM3w0POxukDB4Bc6Y51hhi+N
      j+0AgUDg42JnmOG/HDNDoBkeau5jDe//PqSgi6qyazhVFgoK8jCq7y7POYfbuVXbSVhyHtkp
      FpSim6qyazgUZuYU5qP1j1BdVY82LpfsJDOBkR4chngs06m7+SO4x3qpqmlCY80kPz0O1e2a
      KUkMMthWS32vi1n5c0gyG/DY+6iqbkQVnUF+ejyB0XbK6ofImFNAfLiOsYEe1OZ4DNOxSfI7
      qbp1i6HbBnwh0elkGh3UtA4hALKQMAoLCjAb1eCfpKbqJgP292PTWJwbR1dDNW1DLpJy5pIa
      raezrozhQARz5mSjDYzR71ITb35wKdCRrlpqWocxp+SSnWxBefva+V2j1FXXMuISicucQ06C
      ie76W7T229FEJjE3bxYht2uuPmKS99E5gIfK4/t5c/8Ryup6MSekYJLbOfjK7zl6oRKFJZUY
      k4LWq0d4cfdhehwqUlNi6b5xlNffOsD5q7UYEmYRHar9crdGSkE6Lr9LtScUtaODjnENafER
      U7UvwjhnD51GMltorbpJWHwSE7dOUzVpROPqpG1UhWy8nm67jL7+XuKs4dTUtBKdmEjI/agd
      SF6uvHuESZ2FgboqFNFJWIxTy8WukVZOX6glIkxGWVUfOblxlB8/ikNnYaihCsJCaaysRqP2
      U98vkmXxcqN+goQEy51O9EcRRdweDzKlGsk1SvuYQE6SGb8gQ6vT0F5XRVR6IRE6BUjCVKxC
      DZ4xWm0BrNi40T6K1Wyk6VY5qjA1Vdf7kCQbblkUAVsLDnkoljDdp7flXphs5/CZZiKtEfTW
      1aOMSSBSN2WH5RrtpHNYINQgUX+lhsjcePoaB9CEGhlvrcSmiSfJrOfHP/7xj6bRAQJIqlhK
      165CP3iRKwMhaJpO0mFdyzOPxLF/3xniIuHtC918+9vPMnzlAL26LFIs4RQvX02BoYf/eG+c
      hUUpX+7nJmjnbOUoWzYvJyU6gtbODpKTk6beGkO3uBHMZcvSPCz+UTpFkfYOLxs3LifVaqa9
      sxU1fsLTihGdA6iFADJzMslR9/l2c7dwozOKjWuLSdHaqZowkmGdylLb28twxq2ktCQTbVcV
      9ggNHX0RU7G6CaqGggT8sHBeKm3tdlReN7H5eURop3mVFSrCzRZiY2NwD7dgyVhMUryFmNhY
      IhX99AZzmJdjnhojy1WER07FeodbiMhYjMbVzWRIIouKMpkc6kFpUOASkslMAIfLg9utJis7
      eXqd8V4Yqad8PI41y2YTRw8VjggyrVP3Q2OMIjk5HqMqQO+AnaScAjLTErGaQ5no7wJLKgnh
      On784x//aBpzAB1hpgDVV89xpUVkTkYErW0i+XNiMUYkYVI66OjtIjwqHVOIicw0K12dfRhN
      OtqrLnH4Ygfz5+egfjCXYfoIQWQGPRpAqVTgDwp3UvSC14s+1IQMGXoDOCf8yAw6NIBCqSQg
      iMQlplJz8k0m5aGMuwMM3TrGT3/xIjV99+EX7POhCAtFiQy9QcuE84MmeX5CDAZkKDGG+hm3
      eVGEmaZi9VocQR3zkuS8+OpZzJYQfPIgp1/5V3714juM+KffhMB4C63OeLLip4TBpKCb8spR
      CovjP/LCCoy30uyIITdBT3RSBnSe5+9//msGFPEkxOWhHz/DmYph5N4goryP3/3ql+y71PBg
      TPKii8mmnH/5+c/Zc7qcwVHX3f8FXVw78iov7rmAMSWbcCUMt1/lN//4r7SKMaR94MU1rUmw
      JATwegSMBhUTTg+SBO9Lq8iQIUnSHR8omUwOooQkCvh8AXShepxjE5+tQvFBoFQhn5jAKUj4
      vD6Ucjny9yUK9XqcNhuCJDI2FiQ0XHsn1u/zIZfJCIvL5ulvfIs5FiWhRj2+qDy+vTmbHttn
      qDz7MCF6grZhvKLE2JiT8A+a5Gm0TI6NIYo+bDYl5hg9gs2GV5Swj00SZtJjzS3le99+gnBR
      xBSYJGb1czyeL1E/PL3TS5JAc10XiVnJaG7fT/f4EA5VGFa9+kOxIq0NXcRnTMW2NtcSmruR
      H/7ld7AIHXSPSCzf9Sc8sbYAhSkMadLL5iceR+22IXykUO1zQKGmZN0z/MVf/gWrinJJi7tb
      3yXKtJRseIb/9tWdhAxcp2lUJCJpPt/8wfdYHjPJlcbPUgvkmcBOGItWriHuym4Otw1Smiqj
      unqQWVl+JgIhJMclUl7XiNM7m+b2XuKKlzHhhDkLV5KfqOEXb9XjXJ5J+Od/GaaPMoxFWXJe
      e+V1dARIKl4LrmGqhwPMnpVHwugbvPpGJd6gmm15S8jM6ubN195AJ/MTX7gWtVKGb6yHHqeG
      eXlmWhrOsL/VT+qyjHtvU0gqKdrXePP1Fvw+Bat3hOEdrKdNSiE1PhfHO+/wZo0GjzGDr4Sn
      MKm7ypuvtxHwyVixbR4AvQ31EJ1KXIicCyePM+APsiR3eqcX/GP0jslYOO/9OxOkp6Yaa956
      1HIZCH4aWtpITElHK3fQYxOZVzQlJGoOM3K27Byd9WrcfgXLi9QgTNJU30l8yTJs4zVcOnUK
      hTXzzovm88VN+cnTdE64GPPp2FUcjru/ji55Gsahq1xqsqGQRFweBau8XRw8WIEQFPFPjhO7
      oODOUT5dFsU9zLFDR6jrGkZpjGXV5s1khbvY99peul1K5q9/lEXpoTRcPMzRG53EZi5k24Z5
      1L67m2tNQwQVOpZseoz5mZYvxS3+g0iin8HeXgIKA9aYKJRBD3aPSGSoAZ/LzuDwOCHh0ZhD
      dcilAIN9PfhkBmJio1DLZQh+F+6gBkOIHLfdhs0lYY2x3NmJdC8EPA4Gh0ZQGqOwRBiQPOM4
      JCPhOjmTY8PYnAEiLdGE6tR3Yw1mLJFGFDIZHrcTuUqPRikx0t+LR2kiLjp8Wp92UfThdAgY
      w3S340VcdgeqsDDUMkAUsE84MJhCUcoCOBxBjGF65EyNCsZsQ4y7/JgirUTevmaOyQBGUwhB
      j5PB4XEM5mjCdJoHYJInYh/sw+4WCI2yEmHQIrjHcMpMGGRuhodH8QpgjIgmyqRidHgIh8uH
      MiQUa3QEaoV8RhdohoebGV2gGR56PlYX6EEYG88ww39GZsqhZ3homSmHnuGh579uLZAYxO3x
      IQFypRqtWokY9OP1B1GqtWhUH1iTkkR8Xi9BSYZWq0UhA+FDsQG/h0BQhiZEixyRoCChUt7/
      upYoBPD5/MgUajRq5Z3hpyRJCAEfvoCIWqNFpZR/JFYSAnh8QdRaLSqFHCEYQKZQIp/mEFYS
      Ari9U1kzhUqDRqUg6PfhD4p3jnknVhLxeTyIMiVarRo5EHy/fVotSrmMgM+DgAKNRoNMEgiK
      MlT3sUL2RxGDuDx3VTQ+eE8lSSIY8OEP3P0dn3SdpyWMNdZTz+WyGgRTEksXFxOpE7h57jRt
      E0rmP7KC+DD1fzoJdF/LKf52dw1Wg5L4vFI2LkriwqG3qO+bRGct5Nmn1zBl7CLh6Krg1QPn
      cftFch95hlW5IZw58Ca1vZOERM3h2WcXcvq3L9LhlzF/w9eYEzpIWXuA1Yvy7rOVArdOvs7Z
      2iFEbRyPP7OTpPApyQ7/5AAHX3+TzgmB0KxlfH1rCbVn3uRU1SCiJoZHn9zAUNkxLtYOkLB4
      K08stHDpzC1yS5djnubu0/GK3fzt0WGSTCrSF69nXaaSvXsPMmD3YMlZw66NRejkACIjdWd5
      +VgFKHUs2vgkJdEu3tl7gL4xN+asVWxbGcvBf38Fm9bMuq1PEe2uo8EXy7L8+Pu8Rp+AvY1X
      3nwXt0/A2d9J/Jbv8vXSKW8z30QvB958i26HSETuI3xl01xunXiNc3XDiNp4nnh2J4m3t+h+
      pBboI0h2Lh+vICwzj0DrGSrHQokYOM/RLh2FcX6OnGsif3YmmgdkgnBvSAw1NGBevpMn1z9C
      3qxY7L0N9Priee7prYTYrtOnziQhTAmij6uXbjJnzS7WLZ1NU/kllFo5w94Ynnt2G4axG/T4
      FDilbHauT6W9eQTJO07s/9/emT03daZp/Kd9sxZLlmXJljdssNmMCbYx3tjDACGks9Ik6U4y
      qVlqJlf9BwxXc5VkJplJz/T0pCbTlQxZ2BOKEGLAYLCxjQ1e8M7iRV5kydqlo20u7ARSnS7c
      ISRdhX+XqrfO+XTqbN/5nvd5ildjWKju5k8RucW51iT7XttHgWiEnrCBQsucu8HM0GUcuhp+
      9UwNgavNJHJ1XL8a5/nXfslSyRjdM1FmBRUvPF3J4A0n+pgTcX4JOakLFR0mGb3WybJn/5Zn
      NlewLMvEUEcr4twNPL93G7P9DWAuxqSWQMzNV2f62f3Kr6nI1dHRfwdFwEkys5wXntqOb/AC
      QTHEtVXUrdbgnBXwzfpYtrII9cNKB1KnUVa+nsrytUgkEtaVlqBXzUVlTPZfxpW2kZd+UYWn
      rRlRrobrHbDvr/dRkLxDT8RIQbqWAwcOLEALlDSw6dmnqCwpxqgUEQp6aG8ap2xrLSXr6pAG
      +nD5I/fdzE9LArdritMf/AtvvvM+XY4AIQTSjVYkEjlp2RkEpmfnS+MIKg3pWjUyhQ6NRoQ7
      HMRsss3XWvH7dchHv+Q///crpPI4PomSyx//li/bRv6MkLzvIeBGYstFJ5dit5uYdt9df0kG
      vRiz7EhlOvKzYjjuzCK25aKXS8jKSsMZkpEtmuCd9z4lppEyFZNw5/QfeP9oEwtrZ4oyOTbK
      of/4Z959/xC3XGG8YjH21FQkUiWGdAMRz7ydmRBGMFqwKKXoDKlEYzG8IhFZqca5Wksq8bgJ
      z7WDfHqmG1HQiaAQc+x//ptLfVMPNSQv7B9hNmrErL9rdpUM+zFmZiGV68mzRZm440aSmYdO
      Nnecp1yhb2vvfwsTi4n5J6k/9gnXwwW8+PQKzna3oFaLkIilqMUy/H9xLZRilj/xCv+0M07Y
      PcLR0ydYWZJDWJj74/FwEHnKvGWfSARCjGg8MadpSoJSJsPtDUISEqEgCm0G217/Rx6P+Lje
      OYzYN4x944sEB+qZ8lixGX7gk0CuIO7zEydJJBhBp7nHll4qIxwIkkRN0C9Ht1TO6KBvrjYU
      Qauzsnbts6zeEuZmxzWEoAuhZC910/U0O9ZTbf3Tu51DxoZXf0NFIsHscBuH6xupsCUIzHcD
      JqMCUuX8eCQSkoHQ3IUVi6GUS5ElogSj86q7qIDKlssLb/yGsMdBx7CfuPM6ldu20tV7neiS
      LQ8nJC8R4UbjVfLWP/OdkDwkUsLBIElUBAMKtEYF8aF7jnPKPf5L999JiIbPPmRAXsLfvPwE
      Fp0KsymGYzyEEPHhiydJlf/sWs/vEhfoabtC/61xnDOzIFFi1hm5c7OdoaFumts82LLUhAJe
      wnEpeSkCjR3dDHQ14ghZsBtNjN2Zq73c4iYzW4NYLMI93AmWQrQqGYFZJ5G45MF0Luoc9N42
      WnoGOdsyQmaainjYizccR2nOYarjHAM9rVycUpJnySbV38GV7iHOt9zCZlQhEksIjN9kSpFB
      jkmJ4HXhCiZQLGRuLnhovdzK7fFJnO4ACoUCu0nDta5rDA+00zOUJNUow+vzEZPqWaoY50xb
      Px3tHYjkRrJNKXT2zNV2DcQxmZVIxDA2NIQpy45ULMLjdhN/iE2HwambjCqXUGySIALiYS++
      cBxVmp3x9gYGu1tomlGTa8lF52mltWeA+pZRsu6ZJN1/DjDTzbu//wLUEgauteJIpFNVauLk
      x4fpuN6BfukWKlZm87Am+z8IsQSdKk5b4wV6x0LU7NhJdkYaGXIv9Y39LN24nZWWFEaHe4jI
      TOQV5DLb10znuJQdezaRpjeQoQhQf6mPJbXbWZ2RAokw4x4ZywssaLU6brVfwlBUR2Gm7oeH
      AIoUWNLVXG+6jKpwA+VFmUSnehkIGMi1WUgRxrnU7aRy62ay9DosFjWdlxtRLKlk/fK5k8zt
      92LNsGOwZuHrbmQ8ZRV1Ky33P+0kCnRSHw1nL+AQ9GzdXIXZmonaO8zFqw4qn9hJToqIG/0D
      aA0Z2AtzudX0NdNiO1vq1pJqtqDx3+ZC2xgVu3aSq58TwzlDKRTmmDBqZHRe76ewtBJbqvoh
      aIHA5/NjNNtInW8iCjm6GQwZycu0oA6PcOmGi6ptm7DpdFjMKq43NaFeWkVFkQ2JSMSBAwcO
      3H8hLC7g9viIxecEzXK1Dr1aRsA7SzgmIkWvRy4V/8V9BVpkkfuxaIy1yCPN4krwIo883+sL
      tCiHXuRR4XsvgMW3okUeFRZfgRZ5pFnQCk4iLuBxuQjFxehTjWgUEoJeFx6/gFyjI1WrIhLw
      4PaFkKm0GA1axMkYAa+XmESFXqv6yb8SJQQPF04eo3XAyYq6p9iyzs5MfxOfnriM3LqCZ57b
      iUn+Ta2XxlPHuNI7RXHtXkpNDj45dJEQEEuKqHv6VaS9J7gyKmbX8/vJkTlpuxVg/eqCBxxl
      krHuC5w43Ywybz17d2zAoJz7iB8XfLSePkpDn5fSLbvZsiabiRuNHPvyEoqc9ezdUYG/9zyf
      nB2kYtfTVC810nv1KmkryklTLuBoJwWGWs5yoqGDpCaDzTv3kK+Y4uSJL7npFihev5PHq4pR
      SkSQjHKz7RzHz10lrk5n884nWaKe4dTxUwy5Iiwr38H2ihwuHv6A4XgWT+7djTE8TOesnrKH
      FZIHdJ35gCNXHMjEGrbuf5l1dj0Agak+jh05xag3zpKy7eypzefK8UM0DThQWor4xZOPY9XP
      LfItoCUySV/DpxxpdmDLsLC8aitrdDO89/5h5GmZWPNXUrs8nTMnjxEQqXDN+Nn03GvoJy5S
      f6kdr6Gaf3i5+ie2RYlz6/xx2pSreGJdLgkhRsI3xienO3jq2b2okxGSMjVyyVzt7Qtf0CJZ
      xp6KAhKRKHK1cu7RmAzSdLIea3k+V5sS1JUnudIjY2mai4hxBcWZ+gcc5jRHPmygbO8uphtP
      4C+opeaekLyzfXJ2V1v5/LNG6vZv4tLBczy2dzeuy58za1mKx+Fi8wY7pxrdbF8hoStgo3K5
      ZWE3m0SESccseouZ8FgXp7o87NpQTFSswpAi5fyJj8jY8CLF6TJICkw63OjTzUQcNzjVMc1f
      Va8kJlJh0Mq4+PmHqAqKmZ5Ip8g2yZSQiSZ0C2NRGZkG1f3H8gNpPvkR6dW/JE/33d/D3ik8
      cR3mlChnPzxCznNPo3ZHMGfocTQdpzOlgl0ltgW2RAqjNJwfYcev/o6X9j9HaY6Wjq+/wLB+
      H6//+iV215SgTU1jxzOv8PKL+1llCjE4Pkvmimoer1mF4ueYTsTD9M4myUw4aW/rwBlM4PY5
      MSg19LW30Dfi4tuzJC7QPxvDlnTR3trOdDAO82N23+xhNm0Z2cZURO4Brl4bAJGXybCW2NQA
      Nye8DxaS53OQyCwhU6dg9Yosptx3DX0S3mksRatQaq2U5SW5PTJB3LaaLJ2ClSvsOP2QkvDS
      0tJNTBJjeCaBXhilc2CcBYU2iRWYLSr6mxtp7BgiO7+QFIOByOQg5+vP4FMtJyt1/gVBJMec
      oaa/uZGL7f1k5S9DazAgOIdoOPsVbnkRubY0QuOd9AxPkAyP4xcbmR7uY8wVfEhaoDDToy4G
      upu4PjCKELtrvKNMSSU+M8j5+q9xW4uxqzToNSGuNTbQPCahKMtw9zDcdz/uaYa8Pho++3fe
      eu8P9IxOMzoWwNH5OW+/+TYnLvUSFyvQKCV0nTvEtUAWG4rSUag0qOQ/kw9EMokoLuANBAl6
      p6mvP4srFCbsCxMKhxi8do7WQffcef5NbTBIyO/k3Nl6XMEYkGDwpoMluTZEEisbagrQ6HJI
      18mRR+/Qe9tJa9MF3KEHcTy666eEiD/6+HDXa4nveC+BiKRUy4bKUuQaKyUZEoi6aR+eYrj5
      awYX6NWVJEFUiCJTakjM66RisShIVCjEEYR7/XySSWLf1EaDJIF4NEpSrEIpFUCRQ3lZFpaM
      HEBNIjjA7Tt3uHClg9hDyQiTsGxdKfJIkMGm0zTfvDcYLUksGgWpBmUiQiQByUScWCyBRimb
      y7ye5/4XgEKJ2ZDD3lff4PkKLYe/uoJGpaJkyz7e+Pv93Lz4OcMTE5z/+Lecd2Xz+qsvkKmT
      PYQ//GcgVWI3GdDnraS2pgq9LIJamo7SmkplTR1riiz4nfOxmlI5WaZUDLkrqKmpJlUeQYjE
      SXr7GBdyyE6fE82l561ilV2OIDejEQnklVaToU0gCA8Qkqe1wuh1HL4IXT1jpKfeFcOJdWlM
      9nYR8U/QOiwiJzsD8Xgn4z6BnhsjpBkUKI121hVZcEZSyFbEMa8opyJfydRCvLqEIBMzUUpq
      N1G7JpvegUE8zmlSslezaWM1iugYY475DQkhHM4wq2o3UVuay8DgALPOaVT2lWzaWIM67mDU
      EcRe9BiZmgQp6VZEsSSry9ahEUUfzhMg7CGhL6Sqpo6q4jQcrrvOcN4ZJyk5K6irqyEj3EPv
      bTfuhIGyjZvYkA+t/dPf1t5/EqzLY+2SBi43tGAJebFlLKc0R81Hly9iDpgR64xEJ7s43R3i
      mX1Gxm4NEbHaSc7eZvjWODPTKoZvOcizWxcm0vpRkLC0bC1fHTvKW8eClNQ+iX2JFfyjvPf2
      m2jtJezZk0lfRyNy2xoKHltL/YljvHXcx+raJ0nTS7jT5GBpVS2Kb1+V/AyMRCl+zEZysoAj
      R36HbtU21mkfoCdAYqasRM/R/3oHVV4lT2Wb8A830pFcTWXWSqydh3n3d5co2biLdHka69YY
      Ofb7f0WZvZ69OXMheY7Jaey5yzBojQQ+/IijykL2ly9k59/5YVgAAAD/SURBVHEmui/wf639
      SDTprN+2k8jsbU5+cpDJQJyC0s08liHlUtNllhcVMdXTyMGWPsRqMxVbdxLzjHDy04+Z8MfI
      L9nIDrsWYm7GZhUsX5eGJ2Tm+KHD5Fbt5EdonPtjZGo8A8f5t8MjKK3F7N1jwTt4kS5xKYWJ
      EY5/fJCZEGSvrmZPmsDXJ09w8M4M6rQl7NhzVyq7IF+giH+Kq82teCRmysrWYNKIGbraSO9E
      iPxV5dhUbloudc2FYYsVFJZWkLjdyJBz7u6oMeVQUVHCgwQqLrLIj82iMdYijzSLxliLPPJ8
      rzGWTPYzT2IXWeQnYlEOvcgjy6IcepFHnv8HgmSzwj/Kjp0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='AS Coral Scoring' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Accuracy Breakdown' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Algae Net Vs Processor' width='192'>
      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
      f+zZR5b5fybqAEIns9b/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='All Comments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alliance Selection' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='164' name='Average Points' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACkCAYAAADBuSFLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYfklEQVR4nO3da1xU1cLH8d+wZ2C4CHITBQQEM+9yxNtRS9NK5Whqpkc9eesCpke7WcfH
      8hFP6aes5yntQYM6ZXiOlUVqGEpppakZgmKmkgkiAjpxldsMzOzheTEooCiSXGev7yvYs2fN
      2rD/e6+1Z6+9VFVVVVUIgkLZtHYFBKE1iQAIiiYCICiaCICgaCIAgqKJAAiKJgIgKJoIQDNL
      Skpq7SoItyACICiaCICgaCIAgqKJAAiKJgIgKJoIgKBoIgCCookACIomAiAomgiAoGgiAIKi
      iQAIiiYCICiaCICgaCIAgqKJAAiKJgIgKJoIgKBoIgCCoqkaejaoGNMqWLMGAyDcmaSkJAYN
      GtTa1WhyJSUldOjQobWrccdEE0hQNHVrV0ARdo5stY/O3KFvtrILm63kliPOAIKiiQAIiiYC
      QA7xrywiPCKOnGvLjFw+8iFrnvs74eHh/P25N4k9W3rDO/Up/+L58HCikxvzeUb2f3Ia/xmH
      UE35EY/nM0m82ZqXdUx/8kdUUw7j8nQa8cW1Xiy+wov/OILtlEM4PHmatzOs+1qG4UoBz8X9
      zN2bj+G/5WemJ5VScP1KlUUs/eQY/t/frHFWyVdHznLPf47jv/kYQf85JfoApQc/I7n/OIKP
      11qY8m82nQpkzsuP0t3NBkP2fqIit3N67Rx6X11HTiMurpJ7R3dB14jPy4g7w6zfOpGwuRf9
      HKrIT6vgxmgBlLPmtUv4Lgmhsr+atD2pjFn/O2dWdsIFmc+iznHqvgFceV1L0c8ZTFh3gREb
      Axj8B/8ObVsRK74t5k/De7LWyxa1Uc+W79J4Pacvr3tfXaeK5JRLGHp4clfxTYoxVZDv1JmP
      HnEi0M4GQ0Wpws8ApYlsORzAgom+SLWX95vLfz8+iu5uGkBC6zOKP3fVU9OdlMnaFUv+uDkM
      dmrUB7Jxt5q1z3emn4MKsME9yB7/+lZN1fFZoD/r+tuiwYae44N4tjiXz8qB8jze/70zkePt
      sUdFl/4BrO1ZyNbUxv8J2gcX1k0OYI6XLVpArbFnTncHSipr1jAVXGJNqRevBd7imK7uwNy+
      zgTaWXZ7rZ2TkgMgc3r7XtynTcRXuu4lSaoTiNKzsRzSDqk5+ud/z6eZw5kzpFF7P+QXc6ir
      J39zuJ11K/Ht5Yzm2gI7Hgy2IeN3IK8CejoTcO01FQ8E25Pxu7U2g1Soa++phlLW/mbD5GtH
      /0o+StQzY7gbbrdZoslYwdHUDOU2geS0WHbb/ZVngq7f+2uvdIXUHe+xi4dYuKAH9gCUcnDr
      aYYuWIITcLOzbb3KTNiVlzHr+XTi00zoJYl+9wax/e+eXF+NUoOMi0PdhWrJwNlsoJMZybHu
      axpJxdmLeuB20tVeVfH7pRwWp8Dz9wUwzNaytODsRX4I9GezFjA0VEYhizaf5yts6NXDT6kB
      yCF+RwUTngnipru/8QJxm3bC+IUs61FzpNcnf8rx3rNZ0siD/zXaDqx4LpCPXSU0lRXs2Xya
      WV86kzjVrs5qTlqJK+Uy1KqhSdbSwwewsUEuk+tWV66ih7f9H6xUe2Dm55R0/ofORE1wqjnS
      VxYScaEDrz5wu7uyKxvnu4JsIj2vUKEBSNnN7rOJyIsO1lmcHJ7MxFURTPLOZ997e/Gat5gh
      LrUjouO7+ER+yUokfFvtd4YTHhJGVFjIrT/Xz5mgyjLcXCVL08bWjvHj3Xn+0xKgbgBwtyUr
      uRjjA67VzaAKvk4xEzAVy7qpxWTQoboZVMU3KXoCHlQ19i/RbmSdPs/7zv78K1BTZ6dNT73M
      zmw9Ozdn1Vnff3MRG+d34y83K1BSE+jlqdAABD/OxqjHay1IJjoih4kRk/AGOB3Pye5TeMbl
      +vODF6ErowittSQnLoJd3hE0tO9buLDA7wLztzvz5UMdcJYr2LOngIAQnxtX7enF9HfP8uLP
      jqzrryZtTxpvOXtyxgHAgyc6pbB4jxufj7dcBVqR6sp7Sxv1V2hHinkny4kXH9TcsMMG9u/F
      hf61FhRd4v4ULXtHu95YzOVc1lY48qS3PZ4aFSajXqEBaIAuI4MzO1cQHlt7aZfqs8OdlKxi
      +Py7Cfu/M3SdUU6xpGbgmB4kjLEE7dQnx5nB3Zya6QA48NLyLsxemYxtbhXOd3vz5UudcAFA
      Ynp4d46uOYHLuzJqT3c2vHK3lV4CBYrLOZGTw4jN2XUW3xXcm73B2lu/N+M8/hkduTDaFZzs
      sD+TyQMHyimUQa2xE3eDNrekpCQGZT/Tap/fnPcCWQMFXwYVBBEAQeFEH6AlTD7Y8DrNxG9y
      85QrBsQIghUQARAUTQRAUDQRAEHRRCe4JbTimODmcrvd37b+PYQ4AwiKJgIgKJoVN4H0pO2L
      4ZOvTpJZZgSNI37DH+Pp2X1xApANZJ/4hq+/P0KK08Osr3U3W3J0feN8fZn8z5WEOqexL+YT
      vjqZiaVYP4Y/9jSz+/7R+6NvzVhezpdfZhP5XT4ec4exbUStFysrOPjtJV79Rkf+4H4cnXnz
      sQD6c9k8/MZF9ulkcHBg1sJevH+vFg0yh+N+Y8m2Qo6VmMG2+v6kha54NMsWtS1WHIBi8ioG
      MCdiHj7OWjDkcTRmHR8eXs2S4fbkJGxiS9GfmbNoMsaYuu8MCYsiqvYCfTLRUfkM9QJ0eVQM
      mEPEPB8sxR4lZt2HHF69hOFNfjt+OeteO0f2fd3Z8TczT1z36mebTvGpXzein7Jh2S2fYFnE
      0teLmPDyYL70lzDlFrJizWle6jKQdXdVkm5w470Nd9HPVYJyAx9HnmTetwP5aswtBgtZCSsO
      gBdDQ71qftV6MDi4GwdKKgB7vEOfZTkADT/SIf+HH7C7fwnuAF5DqVvsYIK7HaC62CbmwEv/
      rL7X99CNr05/eiDTATJLbl1MTilHe3jxnr9lh9Z4urJ28mXm/Q7cZc+j02tV3EHLrKEdiLpS
      dzCOtVJGH8BYRuaxWDZ868LE4R0b9175NPFJXRnV98adwViWybHYDXzrMpHGFtuivD2ZX5TN
      y7/KGAF9biErvlMz+0/XrVdp4tiPGUzYpWHVWNtWqGjLs+IzAEAOcRGr2XUJnHtNY+GSKQQ1
      8ihd+uM+SkY/UWsAOpATR8TqXVzCmV7TFrJkSlDTH/yblB3PrApizcqj2P4qg2tH3n65F1Ou
      dRnKiVhynNUXofOAAD5f6c8Iax5aXIuVnwG8mRQRRdTG9ax82IOU6A3EZckNv+2aDBIOdGT0
      0Ot2b+9JRERFsXH9Sh72SCF6QxyNKralyWVEvHoRt0WDqdwxgvJ13hR+dIY1mVdXcCDinRFU
      xQ7j+FwtO984TYSVP2jrKisPQDVJi7PfQKb9tTspCSdv+2365K+5OCiU3jdpCktaZ/wGTuOv
      3VNoRLEtLymbHb39ecrfMhbZ3tOViHFqth4ur7ueJNE5yJ11T3Rgxxc3PHfNKllvAHQ/Eb//
      HLoyo+V3YwGnDqZQ2fF2G+v5/PCDHfePdb+u2Hj2n9NRU+wpDqZUctvFtoZuTnQ8mMPnOksf
      wFhezqZviwnoZAc5uazZU8yvJWbLupUV7PmmgHJ3u1sWaS2stw/g7INz9sds+OI8eQbZ8j1A
      yEyWzg0AbrzWHx4OEEJYVBghgPzLLn7qOoqV0vXFOpP98Qa+OJ+HpVg/QmYupbrYJpbHjCm/
      8lmt31VvACPupuoFh2vtdouLqD4Bunbll3f86HPoV1SH3al6wQM6efP5ggymvpzI9FwzGgct
      Yx/qwZYxEpQ74JWRTmhMCenlVZbvAUYEsvvvzfO9RlsjxgQ3s9YeE9zaxL1AgtCGiQAIima9
      fYC2pBXHBDeX2x0T3FxjkpuKOAMIiiYCICiaCICgaKIP0AIyF9zWk3PbHTFNqiC0cyIAgqJZ
      eRNIJjcxhk3/OUq2AbQef2L2C08ytCNQ+gtb13/A4cwyzFofBv/tKeYO8aweAiJjyD7BN19/
      z5EUJx5eb7k94ipjwTkOfxfPwUOl9F+24g4fmd5+GK4UsOJAFl/lmzBIaob0CiRqkFPdebkq
      i1j6RTo7O3ezPJK8vnLydITvv8zBEhk09kz+cyDrAu2qd8YqLqRfIOzHQlKN4NShI69O6MbU
      Zro926oDIJ/eyhsJjsxbtZ4+bjYY8i5TYgeQz76oL1FPeZm3+rhhY0jn6w3vsqPTSqYFADkJ
      bNpSxJ/nLGLy9eMlSebf65PwmfEoj9p+zs8tvlWtpYmmKqWYVd+XMHpsX/7lKmEqK2bdvnOs
      c+7DCg8w5VzkkV/UvDFlAKMdVZSWGMhvxr3UiptAen7ad5ahc2bQ5+p0px4+eNoDZJCmHcPU
      Pm5oAEkbyIRHg8lKTLO81TuUZ5fPZpiPtp5BgSEsWB3Og9XvVY4mmqq0uJwTHu4scJVQA1pH
      Z17soyWrFEBm++kSpg73ZbSjDaDCqYM9/s04OM2KA3CetNJBDA2o7zV33C9/Q3y6ARlANlBs
      sqH80iXa9q1bramJpip1dmO6QcebuTImwFBWzLpzUnU5ZSQZXJnago+jsOImkB69OYfv3niJ
      pPN5GGQNbn3GseCxSfRwCmBK+HAiN/2DJXkGZI0jfv26YSwMoJBmGNtuVe50qlJbHn/Aj3f2
      nCQo1wz2HVh1fxDjbAFkSqoMbN59il25FZSabfD28eKte7owrIGZkP4oKw4AgCdD5s5lppcj
      GtlA9v4oImN/4ZV5fZF8x7J0zdiaVXXxvLLTC4X0Z/+gJpiq1Kznrb2X8Bjej7TqPsCmg2m8
      M/QulnQEsGPKcD9Wu6jRmmVSfz3PY0lXODDSpVl2VituAgUR5FyG0cPR0laXtPiMGUnA+fPo
      6lk7/8QJ1AEBLVvFdubaVKXBda/8WKYqzWLE5mP4bz6G/45L/JZxHv/N5/nqhkJ0JHj5MKdW
      H+DZu9XszDAAToRoTRg6qNEC2Ej07OVOcF456c20TVZ8BujI0D8V88bWY3jPHIibjYHs/QfR
      9ZuMN1CUlY7Jwx8PLVxJjWXj3k5MWu3eYKnK1URTlbo54JL8O/FBPjzYQQKjno/PleIbYLlQ
      MdXfxCNHirh7aEe8VTKpv+aT7utNj2baKisfEVbK2bgP+DDhFAVmLR49H+KpxWPxlaDop/d4
      Y+tx8gyg9ejJQ08tZqxv9TWf5GjCb3w2IiFhUYR1ufpIlLq6TFxFRD1fCCQlJdEpMrwZtq2F
      FV9m/Bc5nLlucb1TlV4fgNpTlQIFWdmE/ZjL0TIzao0dI/v489a1s4qJIykZPHuymJwqCb8u
      XYge24lezdRWsfIAtD6rCYCVsuI+gCA0TARAUDQr7gS3HX4fNvwA3vZGTJMqCFagwU5wampq
      S9XFKpWWluLkZH0PmfLx8SE7O7u1q3HHxFWgZpaUlMSgQYNauxpNTjSBBMEKiE5wS1DwNKmt
      raFHM4ozgKBoIgCCojVZE0i+kkr8R1vYm2q5997RL4SZYXMZ4tncE63lEBedTEjYpJpbmXPq
      v1+n9uPPm+7j44jY5U1EWNt89ImpoooDR0xsPSFTPMCObaNUlhdyTcx413TjXZa9NSRNu/F/
      VnHJxAuxJhILATsV40JtWdlXhRr4+Scj636QSdUDahU9B2h4e7wNHu3g8No0AdCnsHnN5/Dw
      Il5f7INWMlKWmcz+9Dzw9Gr4/U3NexIRUZMAyImLYJd3BLe9f+bEEZ0cQphVjHSvImZrJamB
      aoZ1kvm69kuearatrPXvN5tZ/WYl+l71HLDMZl7bYsI82o79Q1SYskw8+VElbzrZsTygiiyj
      Dcse19DXFeQrMqver2RFJzuiB6maewPvWJMEIP+Hryl9aDlPD7t6vVuDo98wQv2aonThj1Px
      2ALLTC97Y423XLPohInd9mo+6F3Pi/lmTlVIhA1RYQfY+UqMdjfxfVYVBKgIHVkTGrWLxOiu
      Rj4oa8LNaEZNEACZtDQ7Qubf6sueZKKj4fHQIiIjt3Oq2wKiwoI4HhPJlsTqGdfd+jB18dVb
      kpOJ/t+zBDims+dkJmVmLYETX2BZqC8SUHo2jg8+TOBUgRFJ64jG477GNWvkXBJjNvGfo9kY
      0OIz+G88NXcIxvgIVu+6BOwifBdcazIVHScmcguJmWUY0eDWZyqLq2+rtg5mYg6a6TFIQ337
      P54S470q2ZFYxT1DVJiyZL4vtGFi37pHeFNFFYlHjLx5UWL5xLZ/9IcmCYAOnc4e76sDaWvd
      S1/nHvnSZDb/W2LI02+xtLMG0ON5zxxemeWHowaMBd+wcftJxj4ebFk/L4+K0fNZ+4QPmtIj
      REcdRxfqi7f+MB++n8GAp99ksY8WDL/xxYeN+7Y6J/5dEhynsWp9H9wo4NT2SN6N92XlpAii
      QuppAtl5cs+cV5jl54gGIwXfbGT7ybFcrWp7Zzon80WxDc8PvNlOq+KxOWrS361gRILl97/M
      tGP2tXnRZJa/YmQv4OAq8dx8Dfe3k2lWmyAArri66tHrsYwmDwkjKorqtnSt1Yo7cM+yWfS4
      dqKwhazdvP3OSTKvzjjXZSI5BFs6swHDmTTQx7LcxQ/fjrmWn0//gvqRRYzyqT78ah3RNupI
      rCMlxYNxK/rgJgG40WfaOA6sTUE3yZt6eyy2kLX7bd45mUlNVXMg2Br6CbD7qIzzYFsm3Gxe
      vHKZ5ZtMuE2x41CQCvJkXtxSwWuT7VgeCCDx2koJTFVcuCCzZnMFRybY8lrvtn8WaIIA2BMY
      WMxnyaWMHHmLZpB3j1o7P6BL4NNjdzF/7RP4aKubPRE5DX6aLMtIUsu2PXQJn3LsLsvZyFLV
      aG6jqu1Djon3ztnwyASbm+8MGWb2OkpsC7L0AfCQCO9v4rETMssDa/0v1Cr8g9QsHyQz44yZ
      m84v24Y0yYUq7/tCsf/yLbadssycCEYKcnJv/YwdoxGVhxfuGgnZkMe5/clk3MZnSb6+6OK3
      kXpFBoyUZaaSXtSY2noRHJxHQuwpCoxYpk+NTSAvOPja0V+X/huW4o2WaUWNKjy83NFIMoa8
      c+xPvp2atg+Hkkz83l3i4VtN8+qpIjBX5vPzVZiAiisyMSlV9O9qA/kyHySbuVD9zzZVmNnz
      axXeLm3/6A9NdRnUKYTHX5CJiV7LsuqOoqNfP/4ys/5nQwLgO5ZRlWtYtqjA8mzOWSH4YG74
      s7xDWTA8ksiXFlFg1uIzYBAudo2bpNc7dCHjYjax+ukNNZ3gadXNGe8Q7lG9w0uLtmLWjmDh
      +rn0HzuKyjXLWFRgRuszmFkhPtxOVVvdDdf6Kxh0gJpr/eUyH5+ECX+VuP7cvTfWwPJcNdsW
      qgn0VLNxBiyPq2DYFVDbqRgy1JZ1g1RQoUJ73kTYPjP5FVi+B+itYeOYdvAlAOJu0Gan9GlS
      W5u4F0gQbkEEQFA0cTt0S1DwNKmtraFpWsUZQFC0BjvBSUlJLVUXQWhx4ipQM7PWMcHl5eU4
      OLST+x1uQTSBBEUTARAUTQRAUDQRAEHRRACEP8QaOsAgAiAonAiAoGgiAIKiiQAIiiYCICia
      uBu0xZRyNjaSyH3pGGzc6DN1MYvHWh7z0pYZC85x+Lt4Dh4qpf+yFdR5XljpWWIjI9mXbsCm
      zmNt2jqZK6nxfLRlrzgDtBR98lZicobxX+uj2LhmHp0PR7Ejo7Vr1ZBk/r1+HxU9H+XR+zyu
      e01P8tYYcob9F+ujNrJmXmcOR+24rXHdrU6XwAdfVTJy0esiAC1DT/LBfO6dPYrOGpBcejJt
      andOJqa1dsUaEMKC1eE82McNzfUv6ZM5mH8vs0d1RoOES89pTO1+kja/SQAe41j6/DQG+mhF
      AFpGIYUEEVRrInqpVy+88vORW69Sd6awEIKCqNkkiV69vMjPbwdbJEnXmp4iAC2ikkobe+xr
      L5IkJJ0OXWtV6U5VVmJjX2eLkCQJna49bZFRdIJbhi22Zn3d5yTJMrKXV/1PomsPbG0x6+s+
      cUGWZby82skWyVdIjIkWZ4CW4YoraaTl1yyRz5xB5+7e5q8C3ZSrK6SlUbNJMmfO6HB3bw9b
      JHP60w+4NOYZEYCWYU/ISHcObN3PZaNlMpHY7efoNySotSv2x9mHMNL9AFv3X8aIzJXUWLaf
      60e72KSi79lnfICJ/hoxJLK51QyJrPs9wMCZz/HESM+2fQa4yUw71576Xed7gIHMfO4JRjb7
      jEBNIOVfLNqUiIwYE9zsrHVMsLUQTSBB0UQABEUTARAUTQRAUDQRAEHRRAAERRMBEBRNBEBQ
      NBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAUTQRAUDQRAEHRRAAERRMBEBRNBEBQNBEA
      QdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAUTQRAUDQRAEHRRAAERRMBEBRNBEBQNBEAQdFE
      AARFEwEQFO3/AVLLvz0gj96fAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bad Event Comments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cards and Bad Events' width='192'>
      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
      XPZNL/P//yNVw1AUUnwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Coral Points Breakdown' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Coral Scoring By Level' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Coral Scoring Percentage' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Coral Vs Algae' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZXklEQVR4nO2daZAk6Vnff3lUZlVWVWfdfU3PrV12kBfvsvYiGVtgQiYAgRC+JGQc/uAI
      2x/8hXA45AifYcKBsSIcDnHYxkggbAIUwobAYCOEAR2AVkjGlrzszu7s7Bx9VXXdd1Vmvv7Q
      PTu7M70z3ZlvTmdNv7+IiZjq6v7X81bVk5n/fN7nfTUhhEChOKXoJx2AQnGSqARQnGpUAihO
      NSoBFKcalQCKU00sCSCEQNbNpSRryUK21mkYoyxMaUr38PJwyEyCThAEaJqGpmlytHSd6Erg
      +z6GYaAHAZdvvxRNKwgwdDnHojBjTJ19EiPn3h+X72Oacr4iSdUKpTId9bl+c5NSqUS7P6Lo
      mIw8HW0+JOPWqJaW+Njt22zO51KCTDL2bMy/+fG/d9JhRKL6D36SzDc+f9JhnAihDjtWOstS
      NkM2v4SdSuG6BVIG9PtDhsOh7BgVitgIdQbo7W2z158wHN8AI82NmzewHZeUZWEYylcrFodQ
      CeDW1nm69vbPCyF4X6VCPwjCxvUWLUCKBxAHfgJJfkLXdUzfw/1AtEugQATompwDhxDi2O9V
      qnZGymsvIlocc4GEELyUQBPs+z66rkvRcoB35HKRdQA8z5NqEGWNUWZcSdUKpTKfDNlpDchZ
      0BrOKWRMTCdPu76F41apllx+/DE3wX86k+GfX7580mEoIhLqvJtKZzG1gNFohO/5uG6R2WTI
      oD9kOBzJjlGhiI1QCTAd9dna3kE3bebzGY3GDvW9tjLBioUjNg/wm82mNBOsgRTjKg6KRDKo
      GQbvKZelaCkPcHJasVWCz6bTTCXklswEuHPnJgpLpsmlTAbP8yLHozh5IpngvK1R74woOCYz
      kcIb93AK+yb4Jx5TE/xsLsc/vXDhpMNQSCKSCXYch+FoxMwH4Y0ZDJQJViwWoecCbW/vEPg+
      KcNE+DNmgUHKViZYsViESgDbyfPss88AsH7I80IIvk9iJViGoZOltWJZUmJRJIPYTPAZ22Yq
      QUfmVAhZJljx+BB5OnRvNKXopDCdPN36Fk5xhXIhx09ubioTrEg8IadDOyxlM/SGU9IGLLlF
      ZqMeesZlPOjIjlGhiI1QZ4B+c5e9wZRSLk1/7GE2dmiNZlhijlNclh2jQhEboRJgqbrG09W3
      /mzlTf8XQvD+SoW+jEKYxCnMMrSUCX68iM3RrckywUEAEnuC9WMmwJplsWrbkV9bkUxCJcBk
      0OX67R3KpQKd/pi8rRGYGbxxj3S+Qq3s8lOPiQn+8PIyf7X2gO4fxUITcjbokMlkiGFl9ivB
      0ym7O3UytsVoPJYdo0IRG+EugQwT27IZ9HpYpkkmm6VoOgzHI8yMulxQLA7heoLLNdzy218W
      CCF4f7XKMGE9wWHWzLmSzUZ+XUVyic0Er1qWtOnQEH8l+Pz2NbKTw5d0Oeyizg98DN144OvZ
      TzyDnlEJlGQiTIfuk01Be+RRSJsY2TzDvTqVjQtYOvz7BTPBf/9TH+UdEVd4u5eVf/lLWGdU
      33CSiTAdWjCZTPA9D7dQZD6d4ObSzKJf9SgUj4zQPcHbOztohoU399hr7NBottmtN2i3WrJj
      VChiI7ae4M+2WskzwULsF8IO4ZmrL1DsHT15j7KYVfZb34eRLz5US/UEn5xWbCZ4OeEm+Ll8
      /q2a1e85lpbMD0FxcoSrBA97vH5rC9d1Gc98HMPHMzJo0yHljQvYOvyHhJvgT7/znfFlv2Jh
      COUB7IxDMB0znEyp79YZTSZ4noebSzNXJlixQIRKgPGwj2ZZOOk0xVKJrOPgeXNlghULR6ir
      ACdf5Kmn3mru3twFIITgAzIrwZomZVeXN5tg1bqvgBhNcDWVYkmCjszVodOjPpe3XwVgcjt6
      XFH7iw/TSl95Ht1OS9FVPJxICSACn9dev0U+YzKc61RzJgPSLBfz/MetrcSZ4PNbr/LDv/gj
      Jx3GA1n7sV9Dr66ddBinhkiHsN2tWwxGE/L5JayUztZundFwICs2hSJ2IiWAncliEHDr9m3m
      cw8nk0F+WU2hiI9Il0DFcpViuXrfz4UQ/EC1yjBhhbB8zqbwwR+OrANytzV6s5aek+GcFEcl
      NhNcTqXISUiA4GA1tzBf/0qnzmpz865WEBxcX8uoKvvoD5kODaCZKTJP/7kH/o6qKp8cod51
      bzrk2uvbFAtZBhMfN21iOHmGzV3KGxexdfjpBJjgv/jl3+D7P/+pE41BzxU487HfPtEYFG9P
      qHN4Y3sHT3gMhhPqu7ssFYrMZxPcXEZVghULRagEKFUraEKQTmcolcu01HRoxYISbnXorMuV
      p9y3/OzeSvBfrtVOfDr0xvPfQWHj7F0t2YtsHaEQpqfUIgFJJjbnVTRNHFkmmAcnwBOOQymV
      uv+JSgW+8bk3HiZ1rrzi5Ij0CXZbdbZbQ9y0RncckDehfHbfBP+nR2iCP3L2LN/iug//RYXi
      HiIlQDaXJzP0qC2XCPZ6uCmfeQC2mmmmWBAifVV3traYzeb0+wOqtYoywYqFI7ae4N9tt6WZ
      4Iddsz+Xz7NyhAVsk+oBVE/wyWnF5uJc08SOaZ/gd772x5j+W/fpPcrelHFNYU6alqzp40ke
      oyytSAnQ7zYZzXX8cZfAzKBNhm+Y4J+J0QT/q5/+Z+TG/Vi0FaeLSGmUdwsE8znefE59t4Gb
      V5VgxWIRKQG6rT3q9T1sx6FcKbHbUCZYsVjEZoJ/r92WMx36kOrtu772OVL+7NhaQXDQEyyh
      wTip17RBcDB79rEeY0I8wIPIGwaH1GaPjD2bcOX1rxGIAI17TF02H0pTC7E8+tsSBBiSPgSZ
      WppEE5zUMcrUCr8w1s1NKrUavtAJJl26I49MCqxciZVKkY9vb0cywdX2Dv/kEx8J/fcKxVEI
      vzDWbEI6v0Qwn1NbXiGfXyJjW0wmMrbGUygeDaEXxtItm16zQb2+R68/pFotMxxPSJkP75JS
      KJJCbCb4c+02owjS6emI5176wxPfJvWBWgk0dTKnfCd1jAthgrOGgREiAcrdBmd3r+8/yLkH
      lWA5d26Q+MYlVsvO4jz9bjUV4ohEUuk06+y096dDd0Yeth7guFWWKwU+EdIEf8vXPscP/tbH
      o4R1qjHWL+E8/e6TDmNhiHTYcRyHyXhMbXmZpVyW0Wik9glWLBSREmDQ72OlLPqDEdVaFdu2
      sVKqS0qxOMRmgj/f6TAKMR16ubXN5Tft1igCse/nZPXxavpjXQkmkyf3/F9SHuCIxHa4dkLO
      SbctG925W+l9VPsEhxBLpJYIBKMvfWahkzzzTX8ePe1Ied2HEXqf4K1mj1wKOmOfrBkwDUyC
      WR/NWuLcmRVlghWhWf3Xv5rsBEils1h6j9lsxnzm4xkWOj6VcpmJrnZGVywOofcJ3tmtg55C
      CIEuPHwMJr5GaSkjO0aFIjZiM8FfCGmCa+2dhTDBR10Y69FrHfRQL/AYs89/J3om97bPL4QJ
      Tus6IowJNlPo6buXUUk1wUnWWvSe4PH/+YI0rYcRKgGEEFx95RVWK0X2BjNcW0d38gz3dqmc
      vYStw88qE6xYAEIlQK+5w26zi5hPEWaGpeUNOoMBhbyjFsZSLBThFsd18iyXXYpunmZnyF5j
      h87Yw/JGpHybXK34cBGFIgHEZoK/2OmEmg5da21zefPlNx7L7XE9Df2yp2GMCzAd2tI0/GP8
      fqXb4PzBHr5Yd/fJ1YUA5HygWiDQdSkdwW/0F8vU0uwMzrPfHklLrQx3PCKvDt0czMmaAcOZ
      QMzHLFVWqRTy/NzOzrFM8PNf/zwf/szPRAln4THKq5ETQHE8Ih3CGvUG0/GYtOMwmUwIgoDG
      7q6s2BSK2ImUANVqFQ0YDPpYdpq0laJaW37o3ykUSSHSJZBbruGWa/f9XAjBDy4vH8sE15xv
      o7S+dr9WIECTWAhL8HRozX40E8AUd4nNBJuadqyFsQzDQDPv/wtxhC2SjooWBCBpYaw4TDD+
      nOHv/3okrUW+C5R55tvQM492MmWoBJiO+ly/cYtCqcxo6u1XgjN5jFmfAQ6r5SU+qUyw4pis
      /uivPPIECJXeKTtNPpejtbfHdDQmXygxn424eXuLQb8nO0aFIjZCJcCgvUd7OKFcKaNpGs3G
      Ds1Wj5XVVTJptS2oYnGIrRL8B8esBFc7u1zavHq/1ikywTKQOR36UY/Ree47HjgN+g6JKYQ9
      CF3TeNAiiRe2XqXSuadmoB/yF9r9WySFRUMDWX28idXaX0lPigt+xGMcffV3j6R04lMh5pMh
      r281cEzBRKRg2iMws1jzEeVLT5E14OcfYoI/9Jn/wru+/vnQgSsUMghngtNZchkby7Lodbrk
      8nk6nQ7lcgH5F1QKRXyE7gludzoIPUWpXMLQDS5cOM9ep0+/rbZIUiwOsZngvdmM4AHXoblx
      H3v28L0E9neIYb+XNyJ+cDBTUoJD9AMf4zDPcsJaQeAf7ILz+I5RplZsJvh/NJu0/bsTos9v
      X+Nb/+/vvPF4cvDvYRzMhpZSvT3KptuPgxaajK//yY4x+xe+n/QTzxz+ZNLuAtW3b9PsjsCf
      ki3U2Fir8aVe7y0m+JtvvMIzX/zvMl5OcQqwn/xmeLsEkIiUBDBTKVaWK/RHU/DVFkmKxUFK
      AoxHIzw9ja3NcQ6ZHapQJJXYTHDzHhNsz6dkx4Njax26TWpIkmrE5JrgAE3XFt4E6zn3bdcH
      XYhK8K8fmODnX/wCT9z8EzygG0JHpqkLDoyYLC1dkkGUqSX7/ZIVl3H2SQrf+WEpWjIJlQDd
      +hbXt3apLK/R2GvyxNllXtvcY8nW8MwsF8+u8cKBCa69+BXW33T3R3E6sUYDSGAChLq57guB
      hgBNZ311hWuvXWfQ72OnbWlHDIXiURDqDJB3i2QHM0wxo9v1eOczzzHq92jtNXDLZdkxKhSx
      EZsJbs3nCCAzHWHPjlLyOhyZJljmLEJlgo9HYKSwCnIOjgthgn9tb4/JaMBf+V8/T6R9I4U4
      KANLWB49wdVbuVqwKO+X7uQp/Y1/KOU1whC6J/jVV1/FrazSaLZw0zpWrkgw6eMZGS5srPHl
      Xo9eZ4/v/oPfkB2z4jHCcCuwaAmg6zpuZY0lJ4VlrTIbtul0ulRch3KpKjtGhSI2wjXETKcM
      Bj20IMNo6lPMZ6hkUgy7TTRriGMXZMepUMRCbCa4PZ8DgqVBmPLXm7X2t1mSMR06OJgOLeP6
      OLkmeLHGqOk6RqFyLK2FMMG/urfHeNTnr/32JyPpHBQ2pZBs4ypL69G+X+4H/i6p2sbDxSR+
      aWUSKqLJsMfLL18l45YZT6Ys2RozkSKte3hGlovn1vijAxP8vj/8n7JjViSI/Hs/BEdJgIQS
      KgFMy8a2Usx9KGQzoGukgwA7ZRP4qhKsWBxCXVh78xlmZolzqyUMO0MhlyGTLzCbexQKruwY
      FYrYiM0Edw66wfJDGSZYViXYR5dqNpOoFRzsgvNo3i8jXzh0UeN7eSx3iHkQ/63RYDwe8Nc/
      +3ORdB6V2XS/92+TWr94ZK2kfqBJ3SIpqUQywYXaGjvbO5SWbIRuM5sMWSqvsLFa4yv9Pr3O
      Ht/7pd+UHXMs5N7zA8dKAMXjQSgPcMcEu4UC6+vrFFyXbm/AUs6h21WrQysWh0gmOG0IarUa
      um5w6fIlDCPFpQvn5UaoUMRIbCa4e8cEj6OdEYLgYDq0hO1Nff9gK6JDpPSseyQzdwflAR4P
      rdgczi83GoxHAz742Z+NpCMOpkPLmN+e3Oqt7IWxYnq/dIPK3/mRyLpJIlQCDNt1Xt/tkbWg
      PZxRypqkHJfW7jbZYo3zG6t89cAEf98Ln5Eds+KkMExQCQCD/oD5tE9nZiMCn95gghjO0LX9
      U7BCsSiESoDq+gZjX6dUXKI9mFLOW/SnAjEdkimUZMeoUMRGbCa453mAIDfuR9IKgoNtUiWZ
      YEOXs0WS7wcYhqT+Yolagb+/5aoMS3F/XBrGUrgD3KkzwZ+u1xmN+nzotz4RSUf26tBJXjlZ
      zxcp/dBHoolJvAskPA9DVYLvZ9Rv8+KLL7N+4SKzaYCY9bByJTq7t6ltXKJcyL1hgt//5c/K
      jvmxxSivwg+ddBSni1Dn3UzOZXntDKu1MpapMxwO2GvUsWybdqcjO0aFIjbCnd+EoFyp0G01
      6fX7bJw7z3AqENMB2eLx2tsUipMkNhPc9zwAspPjrwj9ZuRWgv0DEyxJy5DUL3tHS9MxctH6
      KVQl+HjE5nByhrHfnJ0qRtLRgv2meCkruiXUIJ4Gs5lUIr3r3Wada5sNzlRdGq0+gT/FLa+w
      sbYsKz6FIlYiHVY1w2BjfR3DNFnf2KCQz9LtRbvvr1A8SiKdAeazGZ3+DMcWeFOBaVhcurgm
      KzaFInYiJUC5tsphW4LF4KsViliQU38/hPYvfJTmx/9FXPIKhRSim+DbDdyMjp0r0Gs1cAo1
      zq0vM/l/X0KMVHukItlEN8Fn1rFtm3Zzj2yhjObPZMWmUMSOFBNcdh1SuRLabIhTXpEVm0IR
      O7FVgv1RH13T0J18JK1AYiHsNFRJT8MYF6IS3P2vP0XQqUfWkbva8WlYafo0jFGeVqQE6DTr
      vHJzh284v8r1zQYmHk6hyrn1FSYvvoC/87qUIBWKuIh0XWFZKSzT4PqNWwz7XbJuGc2fy4pN
      oYidSGcAz/MolspsrK8wHo0Y9No4rjLBisUhPhM8Hkipsu2bYO1gxeNoyDSIsUyHlqR1GsYo
      Sys+E/zLP0HQProJTj/1Z8m/94P3PyHxLpCQ+OUIPA9d0p0ImVqnYYwytSKp3Hr9GjPNJpcS
      7LYHLKV15nqWy+fXmbz45WOZYD27FCUUhSIUkQ6r6bRNu9UiZVmYZgrbTmMaaoskxeIQKQGc
      bJaVlRV8z6NUKuH5PqWSWhhLsTjEaIKHHMu3Gia6lb7vx6oSfDxOwxgXohLc+fTHEEcwwfn3
      fpD0lefjCkOheCBSTLAxH2Lly2jjFiPT5eJ6jemf/NGRTHDm2W+PEoJCEYlICZBO2+xutUgb
      HvPhBH/cx3R14JA2MYUigURKgGw2x8qqRTGboj8VLJddJjNPVmwKRezEZoKDyehIsxK1lI1m
      vH0eKhN8PE7DGBfCBLc/9e+OVQm+F6NQofy3/rHEiBSK+5Figh3DY6vRIaUFZAvLXDy3xvSl
      r0SaDm0ub0QJTaE4EpErwa1mk4K7xMbZ82i6gRBqiyTF4hDZBK+uWmBmqObSBJMiGbcqKzaF
      InbiM8HTcTQjpmnoVlqZ4GNyGsa4GCb4F/8tQXs3utCd9JQwxy6pfakytTjYUkqKVELHmJie
      4O1b1xkLi/mghUhl8UYdVs6+g3Ihx/Tlr6qeYEXiiXRdMRyOaNUbFMplet0O6XSaVqslKzaF
      InYinQHOXbiA3exhaoInnvwGJr09skW1N4BicYjPBM+mUtankblFUuD76LohaZ/gZPa4Bn6w
      3z+teoKPRHwm+Bc+KsUECyHQJG0UnFQjJlNLL69S/pv/SPUEH5FQKvPJkGu3d1mvLrHXnZNN
      +dTbA4xgzvLGBYpLWaZX/7cywSeAsX7ppENYKEKZ4FQ6i5vNkHeLpFMGum5w9swaw/GYeqMh
      O0aFIjZCnQGmoz69Xh8N6A/G5ByDYQ8unj+LkYm2zadC8SiJzwTPZ8frCX4b5C6MFRxUSaPH
      5fk+piQjJlPLDwSGZatK8BGJzwT/5x+TaIKRcldj32yCDEedVBMsY4zZd30X2Xd/j5R4kk54
      E3xrl0tnKnzl669RdW1mpPDHvbuV4Ff+WJngBcW69KdOOoRHRngTnMtw48Yt5tMxmuWQSWmk
      02maTVUJViwOkUzw2QtPsn5ujj8bM8NiNmiTK6qGeMXiEJ8J9uboMooxQYCmgaYlazq073sY
      D+hlPjktCWPUdTTdSKxxPXETLERArz/ENgQ7rQGlnMVgBhZzcqUatqnT/uSPErR3Igd4Jz3D
      fJ7On3kvufd84I3HmqajSUoA0NAkfQgyteSO8fEn1Lvuzaa0uz38SY90vsLm5iaVlXVu3tjE
      7gy58sQl/OkIfzyUHe+x8GdTfP9ui+ad5hoZCCHeop0UrdMwRplaoS+BhBD7/wDtThfGwQ5t
      mqZJu7V3Jzwpc1uCQEpnmdJ6fLRi8wAg50ubZK2k1gHg8R+jtMmDUlTuQdM0vOmIRrMTWWsw
      6OEHcnK0Wd9hOIm+iZ8Qgq3bN6WtgjcZDZh6ck7pjZ1NWt2BFK1Oq0F/NI2sE/gzrl+7Rrsn
      4ZJYCLY3N5n70S/15tNRPAkAsL3boN9tEzXMfr/DbCrny2GaBs1mU4KSwJtPaTTb0ZWEz2uv
      vUK/H/2LBrC5tYVlWZF1hPC5+tIryLhA0PQUyxWXuYQD2XzcZ6e+Q6MdPcm3b9+OLwG0wKM/
      mkaedDDotqlL+KJBwNWrr+A4TmQlIXxm0znTafSzyWw0YDSe0hvIuGEQUCoUuL25JUFLw8lm
      2NmJPp1F06DVG1N1c5G1gsBHCMFcwtm3UqvG4wHgjkkm8iQ2ecuiiH0tTY9cn7hzA0A7MPxR
      kW305cQlCAJZYxQH90ekdDURSHrvhRDxJYBCsQjEdgmkUCwCKgEUpxqVAIpTjUoAxakmto4w
      hSJWhM8Xf/8FNASryyXSpuDmwOLK+WWEN2WupSm72YfKqARQLCaaga1PmZpLvHb1RQYDHz9f
      wBs22b59k3OXr1D+pisPlfn/DmD7uDEcfaoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Cycle Breakdown' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cycle Time Average' width='192'>
      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
      ARCaUKslOP/SAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cycle Type/Time Breakdown' width='192'>
      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
      EYIQMf8fWe2Q9yVUutIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='104' name='Endgame State' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='First Pick List' width='144'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Match Preview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pit Scouting Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Post Match Review' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team Role' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Coral Scoring' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3hcV5n/P/dOn9FoNOq927Iktzi2SXV6SAgkYVnaUhJgk/0tZAlhgSVZ
      yi4bQgkbCOwGNvSaTdgUFlKx49iO7diOi2xLstVl9a6Rps/ce35/SClsbGtGOrIn0f08DzyY
      0bz3e2bmvee+57znfRUhhMDAYIminm0BBgZnE8MBDJY0hgMYLGkMBzBY0hgOYLCkMRzAYEmz
      qA4ghEDmKquu61JtpbI2WQghUlqbrO9gvrbMifxRfGyatgf2YS7Np+qjtQw8fJCxo1NU3XEB
      wZfb6N/aR971q8lZ56X/0SM41laTVe8B4NFtTUxMh5MWdjJ0IVAVRZotRVFI1No5tlZWWjpP
      +boQOooi534i0xYIhABF0ucmd5yCGVkL1zZfWwk4gKDtvp0U3HoxjnQTgX2tTAxbqPvnCxCY
      CLpc1H/lYho+v430/HOIjweY6g686gDbG7rpHppKfkQphsu1hRrn7rMtw0AyczuAEAS6Jun+
      4U6iU1D4tjT8jVMc/FQ7pbdtIrMuk+N3byPvr1dhr8wlc+UQY6EzoNzAQAJzO4Ci4KrMpODj
      59N7/zYsxZmkr8ugqA4GGkYZ+vkxSv7hEtxlLkRcQ4vo6FENXRNIm8UNDBYJJZFcoPj4NB0/
      PohrXQVFVxUz8MghfAMaVbeuput7u4gEdSxFWeStSaP3qW4Aij6ygYxlaTy5uwVfICpFrNB1
      FFXmc7ZCos+Mq6wd1FhOnPJ1XReoqqT4RKItATAb78hAqjYhAAUZ0uZrKyEH0AIRwsNBrHlu
      LE4z0VE/umLGnmUHIDoWAKsFq9uKHo0RHongKEwDBKOTATRJiy2apmEymZJ+X7bJh8pfitA0
      DVVVpf0w5qttsW29sgqUitp0feYmJOM7mK+thILggUePEJ7SGG+YYNU/reLotxswiSgVd12N
      JweOfPJxnFdtoPYTy+l5cBddL0yy6fc3APBvv9p+1oPgH2b9O27VCEwM3kgCDqCQfVEJLQ8c
      wFWXz/ifWyn9h0tIj/fTtbWXqdAwpZ84l9ETEDreR8SZhbdCziOPgcFik9AqkK00m5p/vIDG
      r76ItjEdJRRDi8VRgiF6n+vBeWCQyWELos1EOGRmfHcPIy+PkrM+6wwMwcBg/iTkAK3f3Epo
      QkPxusl/Vz2Hv/gCfYpK3bevYcVt64i2nKBzd4Sam5YBOke/tI2c9dmAwGYx47AmtN82txTm
      t2WiWp1IibQM3nIkFATPl1e2p1VJKzfxeByzWY4zyQ6CZWqTaUt2ECz7O1AURcrvY762EhpJ
      sG2I9p83Uv25i4keO0HXY+1oUyEKbjof0XWC4ZfHKL5pA5nVDlq/+xKRoInauy/GrMBP/nSA
      EZ+cAFRIXM6TuQ3/mr032lptbedK+/6kbOlCEJM1ztn/Tjzp4/TI1Ta7dHkWbSXkALquYrHq
      xMM6nvOrWHNeJU3/9DTpFRZaHg2y+l8vouGfdxFZ48J53nIq1mVinlVytHP4rK8CnU1c9iYu
      dW9N+n3yUs7kk8rakiWh+SJteQ6WtNd8JdI1SNyTjSvPjeofo+nePYSGQwR6p5jc3krD7U/h
      65aTAGdgsJgkNAOE+yaJDAcJtI/jzCmg+xeHKbvlElDNlNy8jvhUEMXpx7vCzMSkDZczRngi
      iqfMvtj6DQwWREIO4D82jGN5PqHWIbT1eXivrCO9eObHLcJRwj6FFZ9Zh8kC4s+txItqyFub
      DsAHLl9JIByTIlbXdWkBdbLp0HPaO4W2AnMlNsvbkrOl6agmSYlUYjY+kZWmIVGb0GfjJhmp
      EPpsTJdkfDKvVSBtOkTYp+EqTiM27sd3bBLvxiJMZoXo8BSayYYjy4YQgpaeMaJxLdlLnPy6
      mo5J0oc/s3WunvTzKjGNkKYGk7OnaaiyUgQk2kKImXMUsm4cMscpMRVC6DrMw1bSDhAfmaT5
      mztRS4qp/3QtB259hqwLC5js1Vn2nmKOf2cXGX99IRXvKEQIwe3ff/pNFwR/Nv1h1tlaz7YM
      gzNA0rcFc04GNbefi6oC8Ti6yUbu25cRPTGKo7aIqo+sWASZBgaLw8LmRauTqg9XceKhRoQq
      Z3PEwOBMkvSvNtTSz/Hv7yc4HGVgbS7Bl04Q7A1TfstGfDtbaf91CzHdiqcyDW+Nm4IsN2KR
      N5vmaeyUAZMrrRTVklxodBpzSSPTFsw/heSktmSOE4m65mnLSIUwUiGSYkmmQkzt6+T4D49Q
      /+1rcWZbCDb1cOALe3nbn97D1HNNnPhTN57zq8ipsdD6s2MoVgv137gCixXufWgXA+P+eQ3q
      /yI7FeL1J4i+mvFzrEo8ZbTJm+lm747SZieZ45y9a8vJhZghSVsJOYCtPJfMunS0mI7Q4nQ+
      1Iqn0oWOzolH26i47TycFZmMPn6ArKuXE9rTSngijiXPTN/o1JtiFUiLtaArC9uvkDmVyp6W
      U1Xb2a7Nn9B8YctxvepZQ/+9j0jUjL9tjIn9g4T7/Uy+3EvDF55HdZgJNA8T8esob6mMEYO3
      Kgk5wNShPqaOjzO6vQv3RXVUfqgGe64TR6EHT50HNc2OokKoexJzpgsiYSJT83+cMDA4UyQU
      BE8d7ic0HAJFJeviCsxWCLSO4ViWBZEo43v6ca8twpqmMrGnF3NuBu4qDwjBsROjRGJydoJl
      70KqivrqzFZn6XrDwflk0HQNkyrp4LlEWwKB0OUtRMjUps9W5pCRkKILHYVFORQPaStyiPr6
      8JxbgtkKejDMxMFh7MuyiPRMEuwP4D5HITbix9/hw6ZZcFfO5AL5/GECYTmzga5rqHN8+AqC
      i+2HE7A1U2Ll1Y8rsrDnUaHrCFklW2TaYqYEjJBVzlCmNolrqq/exxfDASa2d9Dxq0Zqqwuw
      OFV6f/kyPU8NkvNXFRy792VK3ldF0zdeoup95aStyKHvp7uxV19Pep6J320+coaDYMGGnK+f
      weu9hpyUP/m2ZJPK2pIlIVfOurKGrDWZAIRb+wlbs8hckQ5CoEU0VKedSO8ErqpM+v/7AFPT
      dty5kpK5DAwWkaTnMt+REYKNJxjc1sXAc0OsuOMc/O3jWLJc6EKl7hvXUrTGwkhjYDH0GhhI
      JaFHoL5f72OicZLp+3aw4l+uJO+voOdnB8i/rpze729nqjdK1Sc3MvFCCwM7BjGlp1Fc4wKg
      rjyHnAyXFLGJbsKYPJuk2UqUlN0ImzEo9VlbajoKcs4DzNeWkQphpEIkxZJMhTgdbd/YjH84
      hqU4l/Krc2i6/xCKzc7a+6/CZII7H9xCz7D8IPjdrh1c49gj3a7B0mLBDlB++yXovmka72ug
      7/FxVtz9dqb/uIeRhmny17kJRWLSjkS+nqgpCOq0dLsGS4sFzz3Tezto+l4DK+66ED2qY7Ko
      mFwW9KiczS8Dg8VkgQ6g0fT1XaSVuxl5oZvcTUUc/9aLnHh2iKzVHjkKDQwWkQUGwYJA+zi6
      DqrNgrPETbjPh8ntxOqxIoRgeMKPJikv7vW16dPUIGnK/GsPafpsECzpSEbK9gdgNgiWlaYh
      c5y6jiqxPwCKknQTxYT6A4y/0Mbgjn4yL11G3sZsun52ACUrk7L3LifYMsjw3hFc9UWU5toY
      eKIZa1UhRdeUArC/ZYApSR1ikimLst52jBLT8KlHJQS6xKVGXaI9mbZA7lhlapOp65W0ikUp
      jWjJ81B1ax6H79yO3ubFXFuN9vJRBvZmM/F8D5V3XYbFbqLvZ7uw1lUz/fR+fKvy8RRZeWZP
      21k5D5DhfoI8+9Ezfl2DNxcJNcgwmzWO3vlnbDXlWDJgbFcX9nicaPskZqfC8X/ZgqOuFL0/
      RPnf5GIbz8Pf6cdTlLn4IzAwWABzP08IgW51sO7HN6K39JJ2RT3FVxejx3XcNRkUfngjq795
      GVN7u7B7rfjap5g8PIqzWM7ur4HBYpJYNui2VtqPTpL1njWoU376HmvCuaqS/HUZ9P1yP53H
      fFTcdj7eajtt9+/FsqIKb7kNgItWlVJXLqdQbjLb8KX2q7FYVp7a1jxL6Z0KqWUbJdpCzHaK
      l9bBUp42oc8cCpZSGW52LWdRKsPpMQ0tFMfksKBaVLRQDIGC2WFGaDrxYAyzywpCEA/EUK0m
      VLsZhCAYjs37R6YgcCivBdBxLY7ZlKKpEBK1ybQlPRVC5nega6iKnO9A17XZMovSUyEEvb/c
      h78vTGAoxuovrqbhKy+hIKj5+jUMPPgCkQBYKgrJrbEw+OIQwfZx6u6/AadX5c4HN887CLYp
      EX6afe+83mtgkAgJuUve26sxWRQcFV5GnzlG6Wcup/62OvqfaSEwbmXVvVcTPt5HxvkVOHJs
      mLLcWF1Gm3iD1CeBIBgs2ekUXr+cWOcomph5dhO6AFWZffaaff6yWsh7x3Ic9jj+AaNBhkHq
      k1CXyPbv7iA8raOZLOReV8fhu54HoPZb1zDY08+hTz+DY2UZg78/yOiRScKDEUrTjFqhBqlP
      AkGwQGgz/1HMKoqqIOI6AlDN6sxsENdRLOpMFbK4DiYFxaSCEMTiWtKByaviEJiU1/IotHgc
      k8RcdJOqSlsFkqpNoi3ZQbBMbbqmzRQmkJQKoSgsRhCsoJgUlNnPT5sK0Pr9vWiKlepPr6Pj
      Gy8SjeqoWRnU/r96Wu/fg6W8gKqbagH4/dYmxqYldYnUk+90cp1jN4XmsTfaErMle2Vtxc9W
      mUg1W4jZ/okpOE7mWclBpq2kXdn3YgvmFZV4owMM7vFRe89VhI6doP1PY/T+fB9ZN65j6g97
      GO+oILPSzp7m3rNaGnGj58/kWrvP2vUNUpukXdlZk8foo/vperKfjGo3IOj6RSPlN68kNB7F
      Xe7GU59JqD+5FkMGBmeDpGeAyZ2d5Pz1uaTFBhl+aRi7sBNzZ5GWbcFd7GR4Vz/+nYMUf37t
      Yug1MJBK0ucB9EiU3ocOE1fslH6gjmBjL2pRLml5dvRIlJ7fNGCpKKDgsiIANr/cwXTozKdD
      v8J5tkay1Dc+gonZsnzSOsWnagyAmE0hST1tMr+D+dpKyAFi4wECvX5Uu5X05RmEuifQMOMq
      S0f3h/F3T+OqzsRsMxH3BdEVC9Z0C0II+kamiOunv4RDiZCt+uYUK/Mwhj57IEaWA6TqgRhm
      D8TMVVIyUeR+BzqKenZrgybkAJ3f2kIk3Yur2IPHG6Ptj0PYdD+Z730bQz/dQfr6YnztIWo+
      WsWxe3fife9FSXWJPMfawj96HklKuIGBDBKaywJ9U4RaR1GdNmylXmJ94/gHorgKXDjzHEwe
      GsJenIGjrojqj9YutmYDA2kklAxX/90bQdc48LH/Rb8qn/ybLyA9NsDwzm6mB2HNd6+k4fNb
      QV+9+IoNDCSS0CpQ9w934uvwY1lWQNbGEpq+u5dRBBX/eAlaYzdH79qKoyafyZ2ttP+8mWjc
      hqfyMrw1btJdNrxu+2ntp1ncKK6cOXXI7xIJ0oLglC2NKLdJWMp+B/O0ZZRGNEojJsVbrTRi
      QrlAvb/cx9iRCWxV+Sy/uYbO/9qHWlJExXuKab5rG9GITly1U/HOAnr/1AVWG7Vf3YTZAv/x
      2F6GJ+RUij5VL9hyyyAfdG1JztYSKo6bqtqk2krLx3H1vy1ObdC861fi2TBF208b0ePLyTyv
      kMG904CV2nuuwv9yKz37onjWl2ErzabrgT1E/Tpmr0pr79iip0Jolm60DKNO6JLGWzGvtyXg
      Lgr6dJC+x5oxpTlQ0xy4Cl878C6EoOt3LZR/aAWqKhj8YzPhAJjMZ7sBpoHB3MztALrO+IFh
      cq6sJtIxQnQyyOThYUI9kwQHg4Qau1FKinCkmxh7qRfPhjLs9hiBITm7vwYGi8ncMYAQTB8d
      YPLYJBkbS7DZNIa29QLgXluMRUQwFWRi91iI9E0wsrsfR2UOmefMrOocaOknGJHUJfIUTfI8
      qp9aS3IZn7ouUCVVSpixl6JVIZA7VrnjFLMH2RduS5idmCsuXoQYQFFwryrEnGYl7I/hLsuk
      +EYnw9v7SK/JINg4wPj2DqyFXrLWZGLPdsxUhJjFYjZhk1QbVNdPHuWH8XAwwT2I1dZ2zIqO
      MltLUlqwqWkostIXJNoSQqAIIS+3SKI2RZ9tk7qA78BUeh6K2Y6mze8mm1AQLCIRWr79IiI/
      D2/9+fT9dj8dD50g46oKun+2n8x3rMTsMNP7k91EHJkEH25A/fI7SS8w85M/HTir5wH+L/+V
      dS8uNXK2ZRhIwvW3m1Hc+fN+f0KV4Xp/fYDij2/EZIZI9xD+sIuctV4A4r4Qw0+34O8L4FmT
      x8izLfgnFJxZxplgg9Rnzl+p0HUmG4YZaxhj7PA4Trcg2D6Nb3c3jie7WPmDd6MocfZ/ajOB
      Eiu197yd6Sf3Mnp0ivx16WdiDAYG82ZOB1BMJlb94Ab06QCdj3ZSdfNMucGuH+yh6LoSOu5+
      gcBYlJzr6sgqV2m7bxuK1Urdx9wAlOdnYLdapIiVsXFi8axCVYwVqrcMpoX9toxUCCMVIine
      aqkQCfYJ3svIgXGU9HRWfKyKxm/vA1Sq77yQvh/uJRqOE5xSWH17DUe+2YCj0E3N1y7HZoe7
      f7WdvlH/fMZ0Ek6VDHFq/j79CarNfZKufzqS13ZmbMlmcbSZspfhuP770u3ORULp0Lk3rKHg
      fQqHbt9MeMCHo6YIW9xHcFCj9p6rmHyhkeEeG8GWEdIvqKL0+gpsDgWEYNQXZHBclgMkT1gb
      QFh7ztr1DRJDt5+deDGhVAhtwsfhz2+h/NMXgC6IT4eJBTTQdYSu0f1YF+XvrSTt3Eo8hWZa
      vvw0k11GaUSD1CehZdBj//oCaWuLCLXMpEJoMYGIRIlMRvHva8e2sgKrXSXQMkIsGAeTCdWc
      qlO4gcFrJJYK0ThE1B8H1YR3Yz7B4yNoioX05V4ifT5MWWlY7CZENIbvyDCWggychS4Qgs6B
      CWJxOVvBmqZjMiUX5BSaR3Eqb9z4mulQqMo6J5Kyh+KFmDkwbpK0ECH9UPwrO8EWJ6bsZQvS
      tWhB8HTjIMGRCIrFTsbGfGJjfsabprAXuhGxKD2/biD/xnosapix3b0IBii95VwsVugZ9uEP
      yekUn2geylWOl//i3yfbJJ9pq6lKi+d0XQeJuUCybDHrAKmo7fUdYhRn5oIcYL4k5ACZmypJ
      nwzQ9J2DFGzy0v30IJUfqoa4xrGv76T81nU037OTquuy0dxeii7Jwzy7PPvotuYznAoh2JRz
      zxm8noEM1Lx6LMuvOfPXnfMvFAV7QTqBhh7yP3AO0/t7iQxP0fb9fYQGxxFpmXg3lGAmSjwC
      U3vaOH7/PuJR4zyAQeqT0Fwm4lH6d4xRdFk+tnw32VetYMUtNQxsH0OfmiI2FSIehbQNlZzz
      vWvIKtIZPybnGKSBwWKS0CNQuGOE3PeswWRW8FxWy/gPdtN+SKPqjgsIVZlp+tqLlP7tBiJd
      I7Q+1oY5L5PilWkAnLOsgJLcDCliZ8rfnd5nFQTm9Lmn0qVy7la2vcWypXpKpNhMFiMVwkiF
      SIolmQrR8+PdjDX5iGkWln2wnO7H2vEf7qP4jqsIbj1MaDKO59Jaija4afr6djLfdzHl1xYA
      8Nn/fJYTCwiC3+3czo3OF+f9foMUJns5rr95+KxKSCgVovCjG8gPhDj8pZ2kn1/F6o1lNHz6
      WQovTOfoZjfn/Od5HLrjecr/6goqP1zLROS1SUXXBdocxXFPh67rIOQcqTRIMfSz/70m1CIp
      3NJPy0+PU/PPm1CBqd1tONZXY3G7ySgRHPnSNkITMVSrWdrytYHBmSChLpGdD+4Hs5POB/ZT
      e/eFDOwYofKOCwAFs9uKOi6ovm0lvp2ttP+mhZhmxVOZhrfGTUGWm4XsNnkdhaj2mQ0SgZBS
      Slu2Ldn2loo2kVEqxc5CMIJgIwhOiiUZBL8eEYvR/NXniUZVqu64mIGfbCfk03CuKSd/pZ3W
      XzRjyvay+ivnAfDth3YyMHbyPYEi8wifcj+R+LWl38lAWnHcFL3LzlgjJbSZClZjv/KrUnTI
      IvkeYVsaUStKqLy0gLRCG+WfPJ/Jg/2MHpmm94kT1N1zDYM/2sJYR4SsShv9o9OnTIVQzCPo
      keNJXV/mdCV76jO0nR7FmSlRhRySdoDoWJBwb5D+X/dg21BH7nILU40jYHKSc0ERR7/wDNrg
      KI5rzn6Eb2AwF0k/fHneVoY+FcKaYYVIiKEX+nFWegm0jmHNz6Dw2krMOVl4a5yLodfAQCrz
      CoJDXWMExzUy1+UQODZMcDCMd2MRSizKxMFh0tcWYsuwIoTg+IlRIrGTzwYOJUqlpT/h68rO
      RVcVRVrjiFQ9D4AQ6BIXIhaiTbF7MOW+1kLrTRME65EY43t68awvxWLRGNnRgxYHR3E6qhlC
      A348msCaZsfmNRP1x7FlWAGY8IcJhk99HqCH3ITFnuo8QIbqZ7W1I2E7MFPvSJfUoXDGnoaQ
      1IlRqq3ZlTghLYc/eW2m0vNR3XlSri+bhBxgYkcHHb9qpHZZIUp0nNFjAar+ZhkWh8aRL++n
      9P3VNH3jJWo+WkXPrw/ivPxc3MUzj0APbT6y6OcB6i2dLM/47aJeIxHkHPuRb0s2yWpzvPtH
      KesACd0Wsq6sIWvNTAQfnYoQ6xml82cNRKfiaBENHDYivZPYawopua58MfUaGEgl6VUga1k+
      639cgu/PDfRtH2PFHecwcWQUS5YrZSvZGBicigQLY+1jommS6ft2UPbBOnp/34gwWVj+uVUM
      /Go3U71Rqj65Ed/OVjr/pwtN73k1FaK+PIecjDQpYk+Vi15mNmFyXZKsMcldIuc+q3A2bMnv
      Epm8NsXhlXLtxcBIhTBSIZJiSaZC9DywncGmIM6KbGpvrmDnTX8mvTaL8tsuYOR3u/EPx7AU
      51K4zknHI53oms6q+96BzaVw54Nb6BmWEwR/0fMbKiyDUmxJr/CXypURz4K2tL/bjrLAwrVn
      goQcwN85Tc4lVeRcVEq4dwB7RQ5F76snvdSJ6/ZL0H3TNN53mNikibRV+UTbBolHdGwuE6FI
      jMBplkGTQbcHQJ+WYsvAABJcBSr92w24siwc+cwzqKUFVLyvmomnDtH9zADTezto+l4DtXdd
      QGwyjMXjwOwwEZ9O5YU8A4MZEnAAwdj2TnzNo6jpTsJtw4ztHyA0GsWebaXp7l24ytIY2tqN
      EDqBjjGC/QFpQZeBwWKSUBCsBaOEBvzYC9Mx2U2Ee3xgs+LIcxDomEDXBKrdirPIRajHh5rm
      wJZlByEYnvCjSQqzM8QEdpMcY9rsrrIsN03VVAjBzA76mS6NqGSUzrnA8KYJgsPdY/Q+3kr6
      eZUUXlrA6NY2YqqL8g/XEjw+wPCeEVz1ReSucXPif1qwledS9sEaFGD/8QF8QTkdWS6x7ifL
      LKfekBA6uqIgKzrUdR1dYvlBWbZgZiVOl7SselJtJiu2jX8rxf6ZJqFD8cH+AGW3rKfpri3Y
      tHEC8TTSYsP0bc1k6vkeKv/5cqx2lciAj/JbzqXj65uZvqKa9FwTz+xtk5YKUZvxW9xJJM8Z
      nCGsrjetAyTUHyD7knKGHjlA2sYKgs0jZF1cTs7FxUy3TWB2KRz/6mZaf3kMe46Dtnu34Zuw
      kJYlKZvRwGARSSgI7vzudqxrqll+y0qc5V58BweYPDSEs9RN4Yc2svqblzG9t4vweIzar19D
      4Sozo01GaUSD1CeBqhCAxczIHw4z9nQrtV87H98PXmLS5KT6AwUM/GY/nc1TVPzD+YQ7h2h/
      YC+28nxKVroAuGhVKfUVcrrFZNrficUs53FKdvlBXReoqqx4Qp4tkDvWk2oz2aTYPhsk1CAj
      7o+iazMfojndSnwqghBgTrOiKBAPxGb+t6ogNJ14KI7ZZQUEwXD01SVRuxJFXcDp1Hhcw2yW
      t9IiNxVCnjaZtuSnQrxOm8mKYp7/j/9NswrU/8gh/P1BBp7pY9Pjb2f3J7aS/bYCSm4+l/4H
      txMJKZjLCqi9bTV9P9tF65OjXPr4jQDc+eCWV4Pge7wPUmoeTnJoBqmK9bxPYjv/k2dbxoKY
      2wEUhdJPvA3/vjaU7FyiPZOYPQ7SanNx5ggCE1bO+f6lNNz+LOH2XALxNLKWhc6AdAODhZPY
      fCEE3Q+3UPbBGhz1Zay952LUkSG6/tiLEALETO2Zzgf2MN04wPC2LkZeHl1c5QYGEkjoESh0
      vAc9rwBnhpnplzvp/H0b0WE/FV9Yi97UzaFPP4NjdRk1t65EQefw57eQsz4b+dVtDAzkklAq
      hNB1QJkJcoVAxHVQFFSz+uq/FfMrAaVAaGK2kZogHtdQZgMTEzoLcYpUTTeQbU92l0ghEmsu
      mAh/oU1RURZweP9NEwQrrzOqKArxUR9N9x6i/r7LGfvDEYZ2DZF9TR0FlxcRPNJDxx8HWHnn
      2wB4eGsj41OJL4OaFY2PpT110tdStdOJbHuprM207mOYc6qk2EoF5nG0R9D5k0NokyE0wFqS
      Rf3Xamj43AvkX5RD58OtxPyv1QHa29yXVCqElRgfyUm8XqjBmUVdcT3w1nGApOeeyc1HiaVn
      oYoY4cEgacUumr70PIUfOof+X+7DtaYEzRciMvHG5tQGBqlG0g6gZHhwZQhCQ35CfX4av7yV
      ops34q1Jx16ZgxIMEB7yEx4zHMAg9Un6EcizvhTP+lLcZRlknJtFaFUew08dw5LvpfIjdWQr
      AmeZF091OiC4/sIappJIhzahY3N+9qSvJdopPhF0fea5WNajtlxt8mzNBMHyUisUT5EUO6lC
      0lUhhKbhbx1HsdtwlacT6fcRHglhznDiKkkj0DaGmu7Cke8EIdDGO1F0Occj5dcGVaUdFk/V
      VSAZtUEVZxaqKxtYolUhXk+weYChncOEj/eR9f4LGX94J/ZVpbiqspna3szEgCDSMsCye95F
      Wo6J0JOfg7GWZC9jkEJYN96C7cLbz7aMRSFp13OtLEaMjREYg4waN8HuSfwtowm5LeYAAA4O
      SURBVJjT7bgqvQSODROLm7GmGd3yDFKf5FskCUH1F69g6Ld7GNwxxPpHPowIh3j5ti14qxxU
      33kZ03/ax2Sbn9xV7sXQbGAgjaQdYGLLMU48dQItGKXq8/W0/OtmQlMxPBdUklWl0nnfDoSm
      U/+xmerQisMLrhwpYmXXi5JJKtfFWjBWOaUtUxGjNKJRGjEplmQQPPyHwwzsGMBamkv1+8tp
      /s5ehGKm+vMXE2s5Qdej7XguqCK3zk7bT45iKcml9jPnAPCfj+9jaOL0xyOXWfp4r2vrnDqE
      EERlphugSLvVytYmy9ZMbdwFpEKoZpx/9aAcLSlIQlUh0taVseraWhpuf47pRgv2+nKcsVEm
      jk0y8rtmlv3TJmzZTtrv3cqyL13JwANbmDgRxVtqpbV3bM5UCLO1E82zV9KQDKSipn59z4WQ
      gAMoWF0KjV/cTP4H12HLiDD9RAshEaPoApVQt4/+x44y1R2mZFM2TXc9izYyjutdMSi1Lv4I
      DAwWQEJVIZq/soWMK2qwuVT8x4Zw1BTgqXLiawniqfOSvqYQRYvjrC2k/COrsOZm4q1xLb56
      A4MFktCh+NHn2wiNRlDMVgpurGZiewdxxUbuxcXogRDDz3fjOa8cixpleEcfGeeV4SpygRAc
      aBkgFImf9hIZ6jQ1lp45xaZquoFse3K1ze4Ez7cynKJiWX71q/9cekGwopB1WRXTTcM4q3NR
      VQWT0wKKBUUFPRRDsVkwO8xY3DaceQ70sDaThAKscvSgmoMJSEmguoCu/8XZhIWg6DpIrA0q
      U5tMW4KZsSZjT3FmYSpYLeX6qU5Cy6CjzzTR+tOjrPz+DWhHj3NifxSnNo7tojUM/2InRR9Y
      Sd+TPRRfmM7YkInwwS5q/v16nF4T/l+/x0iFeJNhKr8I57t/dNLX3mozQEJ/nX1NHbnnzfTz
      ddblE9jXwchBHxnLPbgKbPQ91oxjWQ7jR8ap+MhqSq4tYqLJl/woDAzOMEm73thzLRTffjl1
      f7+Cgc3t+EfNrL3/WkJNvZhtKhFflNBAAEvGm7damMHSIeEukaP7R5jq307VrefQ8cBeRjFR
      /YVNWCfGOPLF58m4qIriTZk03/sCpmwv9fUzq0Bq9nKwOuSoFUJe4w2ZtmTbO8va1MxKeddO
      cYxUCCMVIineajFAQjvB3T/axWSrHzzprPzMalq+vQNTVTnLP7aC4f89QscjXWz4zbsY/cNh
      Bl8cxH90kNoH3oe33EboiU8hJjvnOaw3SEndjLNU1pYkpuINOK7+t7Mn4AySkCsXfWAt9t29
      DO8ZAauF0o+s5MSzYwBkXFRN2o4BAPJuWE3uNTUcvGMrGeUzMYDuHwJf7yLJN1gMhLf8bEs4
      YyTUIEPE4kTGgmjBONisWByv+Y018y+f70efPELmO1ehGk3yDN4EzO0Auk7/E8dRLGaiQ9NE
      hybpf6od36F+fC0+Rp47zvTxMfqf6kBEY/RuGab46sIzIN3AYOEkEAQLIoNTBE74cdXkYCKO
      79g4AI7STOIjk8RCOorVSkZtBqHRCK7imZNgQgjiIy2ompwSKVIPnus6qqrMpETLsJeih+IF
      AqEnuRBhc2PKrDjpS0swCFaw5Xuw5XsAEDGVcPcYcdVOxroirA4Y3t5H/vXFEI0xsb0df1ke
      uRfkA7Crz8p0WM6PbIOlEW9CaRVzo+uzS4OyyqJoOpgk5QJJtIUAXQhEgmVRLPXvQbHY5Vz7
      TUDyRyL/fJTpKRuu2BB92zOwTo/Q8/t28q5fxuCv9xLz5jP533txVF2LO8/Co9ubpXWJLM74
      GU6jS+SiYl5+7ZJygKRvM2lrihj7YwMnnh3AW59B/o0rcRXOBMJTnX7yLy8j75ICplqnpYs1
      MJBN0g4w+nQzZZ+7ipWfrqP/ub9MYbZ7zPh7A0wfn8Ce75Qm0sBgsUj6ESj33WtpuX8vE4qV
      6ttraP/OVsKTYZrueYkVt6yn5f69WEoKyKqemUbXLSugNC9DiliP4xLMlkkptmbOBCMt5UDo
      AkVS+UGZtl7p3pPojrdiWlqn+IxUCCMVIimW4CoQ9Px4N2NNPmJxC+vuOY/Dn9uM4nZSdcdF
      DP1qJ77uEO6N1ZRs8tJ893Yy338R5dfO7AV89j+enXcQbFeiPJj9ndf9P6mcb5DK2ubGdvFn
      sZ570xm9ZiqQUC5Q4Uc3kO8PcfgrOxnf0oy5qojMei/OHMFUn8K6B97Bodufw/o3y6j6SC3j
      r1v212eLs84HDR2ENvcfGiwcoZ9tBWeFhFIhQi39HP23l6i5axMiFMfsccDIMO0Ptc30iVIU
      FBUUq5n5Hj01MDgbzP1zFYLjd+/Aluek/3+O4bl8OcEDnYwfHietugCHO8TRrzyPpSIf/6Fu
      uh5pZfCxw/g6/WdAvoHBwkioKkR0PIgem9k5teW50PwRtKjAmmmHmEZkIow124kIRYlNz/QC
      sHgdqFYVnz88776QCpCuvlZVTtPimExyAjB9NgiWtQokU5tMW8wGweocQbBidaJY5l66XnpB
      sKJgzXqtxo8Ihzj+9ReJx6H8tg30/9c+ojGBtTib6g9V0flf+zEX51L98XoAth7sYtIfpsI8
      yHn2xuRGBby+t4zQdTRZ1RJ0fWYFSNoyqFxtsmwxuxJ3uqoQtvP+PqEf/1uRpF051juGUlzA
      mk+tBMBzz1WE2/tofaSf/t8cJPP6c5h6fBeTvcvJKLaw9WAn3UNTXGg7zLnp/yt9AAYLx3ru
      TSjWpVnILOnbjC5UIsd6ePnjTzDR5gcE3b84QtnNq8k4N5/Of3+B0bYYzixJU7iBwSKS/Dxr
      d1D7L5dR9o4ixg6MEusbIaykk15gY2hzF8u/ciWF612MNxm5QAapT9K3adWi0PGjl1Ay0qm6
      tYzAy51U3LoWgIrbzqf9Ry9jLiqgZF06AFecW8mkP0K5OQOrbWGNMnShz7/E30lsKYq88wCy
      tcmyJZjdjT+NvaX6/A+JpkIIQWQkgGK1YM2wEh0NgsWC1WOdWSWaDGPxOlAALRhFqCbMdhNC
      CLTAKKqkTRa5XSI1FFVdIgdidFT11PYUVzbKaV5/PUtvFQjB0O8PMHh4Gld1DrnLzLQ/3kd8
      xMeKb70D37MNdDzSzYVPvpdIUx/N39pJ5vsvouIdM6kQocf+ziiNmOK4bt2KIqmN1ZuNuR1A
      QP+fu3GtyMdRnI7vYDuFN63HPtTF4PYBlt20kcmjMxmazroilt1cy1hosWUbGMghoflCtVgo
      +uBqxh49QMYN6xh7ZC/tv2vB7Hxrdw8xeOuT0EZY4XVlHLt7O9jSUPzTxIIaIs1N4aX5tH9n
      KyMvnkC/5yVKLsqi7cGjhON2PJVX4K1xg2oGk+Eoqc3SLWFjnAcwzgMkxZIMggcePsjIy6O4
      1pRS+b5Ken97CJGbR+l1BTTftY1oVAeXm/o71tD98/24L1lF7jovAL94+hAjvsSCgpXWTi63
      Hzi1EiGIyewSKbF4l2xtsmy9Yu9UYzVXXoKl7gZp13qzkZArZ15RQ+amSo7e/RLaO0uwFbsZ
      a54Eyqi95yqCR7ro3OJDC0RxZFsJDIaAGQc41DaY8IEYm/0wm9zPzXcsBvNAcRewlB9QEyuN
      OOXn+L27sRZlYspwkVHjfd3rgq5fNVFxUz22Ii9pxUszp8TgzUlCpRGnuwNU/L8NRI8PEPVH
      CJyYIjoWJDIZIdzSh5adh9NrJu4LEewPEBmcIhY8fWM8A4NUIKFVIJNFMPx8FxVfuBgmphk/
      4iMt34y/249VUaj6xExmaLh7jMCUCQvThEYjuEucvPfSOvyhWEJiisxl2CzrTvm63E6MAlVW
      5QVSuUvk6atMmHJqpF3nzUhCq0B6OMLk4VHcq/KxOExEh6bw9wTwrM1HBMP4msZwr8zHmmZG
      D4bxtU2TsSoHEHT0jxONvzEVIkedxGtK7tSY3HSD2dqg0g7EpGgqhBDousB0klKLirsQ1Z2X
      lL2ltwokdJq/vAXXqnzaf3OMNf+0moav7SPvshJsJV4GfrUHa0kmXQ8dZ933LqfzP3YxcCjA
      hb99FwC/ee4wfaNv/KHf4HyRTfaGpMQayMW6/uNYVv11Uu95ZVlVBq/ce2XYm6+thI5ERibC
      2DIdREaDmJ0mdGHC4jK/emEFiI6HsWTaiY6HUFCwZDqAmQ9L1l02lR8zDG3JI3Mp+pWfcbL2
      Fn0jDJIXdSpkf5GKIu8RKJV/ZDI3I2VrAzm/j5R0AAODVGfRq/gMnOhg/8GGkwbCyeAbG6K9
      q0+KJiF02o410tJxQoY1Bno62X/oqARbIPQ4u3bsJLF1s7lpPnKQE/1DUmwN9nTS3NqJLuGW
      KUSM441HaWiUkSqv07B/L8fbu5N+56I7QERXKS3MIhJd2L6AJysLm1mOXAUFV5qb3JxsKdbc
      7jRUVZ13+ZfX093azHQwRCAUnfuPE8Bmt+P3B6Ro801NEfZPEdEWXq1PUSzkZnspLS+ToExH
      CGVewfSiO0Cm28HQRAinY2Eb7uPDwwwPjxCTcPvR9TgjI6MEgjK6zQgmJ33Y7XKaSpRW17Fu
      7SrS7DISFHRMqkmatoKCAiw2OxYpMYBAN9vJcNok2FJxOh04nck3ZDdiAIMljVHJ02BJYziA
      wZLGcACDlGJwcJCgbxTfbP7Y8NAQi1m43SjfZpBSHGtsxGE3k1tcRkP/GISnKIkEUTSd4f5e
      CpatpSTXI+16xgxgkFLUl3s50hei7/hhtu16CYCOliaajxxg266DTE0H5rCQHMYqkEFKIYRG
      MBTFogqCUQ2nzYqmxVFUM5FwELvTjc0q78HFcACDJc3/B9rfsode8tJ7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Points Breakdown' width='192'>
      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
      f2/+L5vlhWFKBulpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='coral score sum' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
